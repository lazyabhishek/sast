package com.whishworks.migrator.util;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class XSLTMapper {

	public static List<String> scopesList = Stream.of("flow","choice","foreach","when","otherwise", "transactional", "until-successful", "async","sub-flow", "batch:job", "batch:process-records", "batch:step", "batch:commit", "batch:on-complete", "poll", "enricher", "choice-exception-strategy", "rollback-exception-strategy", "catch-exception-strategy",  "munit:test", "mock:when", "mock:then-return", "scatter-gather", "round-robin", "first-successful", "ee:cache", "munit:set", "munit:invocation-properties", "mock:verify-call", "mock:with-attributes","mock:spy", "mock:assertions-before-call", "mock:assertions-after-call","message-properties-transformer","ee:variables", "custom-composite-source", "poll", "ws:consumer-config", "ws:security", "batch:input", "processor-chain", "expression-language","munit:before-suite", "munit:before-test", "munit:after-suite", "munit:after-test", "apikit:mapping-exception-strategy", "apikit:mapping" ).collect(Collectors.toList());
//"apikit:mapping","apikit:exception", "apikit:mapping-exception-strategy",
	public static List<String> copyAsIsList = Stream.of("http:basic-security-filter","CommonLogger:exit_logger", "CommonLogger:call_exit_logger", "CommonLogger:process_logger", "CommonLogger", "CommonLogger:error_logger","CommonLogger:entry_logger","choice","when","foreach","otherwise","logger","set-payload", "tracking:custom-event", "async", "flow-ref", "sub-flow", "validation:config", "set-variable",  "expression-transformer", "batch:process-records", "batch:step", "batch:on-complete", "batch:set-record-variable", "munit:config", "scatter-gather", "apikit:router", "apikit:console", "tls:trust-store", "tls:context", "tls:key-store", "munit:fail", "munit:run-custom", "tracking:transaction", "expression-language", "global-functions", "remove-variable", "sqs:change-message-visibility", "sqs:change-message-visibility-batch", "sqs:create-queue", "sqs:remove-permission", "sqs:purge-queue", "sqs:list-queues", "sqs:list-dead-letter-source-queues", "sqs:get-queue-url", "sqs:get-approximate-number-of-messages", "sqs:delete-queue", "sqs:delete-message","s3:abort-multipart-upload","cloudhub:list-applications","cloudhub:get-application","s3:abort-multipart-upload","s3:create-bucket","s3:create-object-presigned-uri","s3:delete-bucket-cors-configuration","s3:delete-bucket-lifecycle-configuration","s3:delete-bucket-policy","s3:delete-bucket-tagging-configuration","s3:delete-bucket-website-configuration","s3:delete-object","s3:get-bucket-acl","s3:get-bucket-cors-configuration","s3:get-bucket-lifecycle-configuration","s3:get-bucket-location","s3:get-bucket-logging-configuration","s3:get-bucket-notification-configuration","s3:get-bucket-policy","s3:get-bucket-tagging-configuration","s3:get-bucket-versioning-configuration","s3:get-bucket-website-configuration","s3:get-object","s3:get-object-acl","s3:list-buckets","s3:list-multipart-uploads","s3:list-objects","s3:list-parts","s3:list-versions","s3:set-bucket-acl","s3:set-bucket-logging-configuration", "munit:before-suite", "munit:before-test", "munit:after-suite", "munit:after-test","oauth2-provider:revoke-token","oauth2-provider:delete-client","redis:decrement","redis:del","redis:exists","redis:expire","redis:expire-at","redis:get","redis:get-ttl","redis:increment","redis:persist","redis:publish","mongo:drop-database","mongo:execute-command","mongo:list-collections","mongo:remove-files","netsuite:get-server-time","sns:add-permission","sns:create-topic","sns:delete-endpoint","sns:delete-platform-application","sns:delete-topic","sns:get-endpoint-attributes","sns:get-platform-application-attributes","sns:get-subscription-attributes","sns:get-topic-attributes","sns:list-platform-applications","sns:list-subscriptions","sns:list-topics","sns:unsubscribe","oracle-ebs:get-email","oracle-ebs:get-location","oracle-ebs:get-organization","oracle-ebs:get-organization-contact","oracle-ebs:get-organization-customer","oracle-ebs:get-organizations-created","oracle-ebs:get-organizations-updated","oracle-ebs:get-party-site","oracle-ebs:get-person","oracle-ebs:get-person-customer","oracle-ebs:get-person-customers-created","oracle-ebs:get-person-customers-updated","oracle-ebs:get-persons-created","oracle-ebs:get-persons-updated","oracle-ebs:get-phone","oracle-ebs:get-relationship","oracle-ebs:get-web","parse-template","apikit-soap:router","ldap:unbind","ldap:rename","ldap:modify-single-value-attribute","ldap:exists","ldap:delete-single-value-attribute","ldap:delete","ldap:bind","sharepoint:file-approve","sharepoint:file-check-in","sharepoint:file-check-out","sharepoint:file-copy-to","sharepoint:file-delete","sharepoint:file-deny","sharepoint:file-get-content","sharepoint:file-publish","sharepoint:file-recycle","sharepoint:file-undo-check-out","sharepoint:file-unpublish","sharepoint:folder-create","sharepoint:folder-delete","sharepoint:list-delete","sharepoint:list-get","sharepoint:list-get-all","sharepoint:list-item-delete","sharepoint:resolve-collection","siebel:delete-business-component","ec2:allocate-address","ec2:associate-address","ec2:associate-iam-instance-profile","ec2:attach-network-interface","ec2:attach-volume","ec2:authorize-security-group-egress","ec2:authorize-security-group-ingress","ec2:copy-snapshot","ec2:create-image","ec2:create-key-pair","ec2:create-network-interface","ec2:create-security-group","ec2:create-snapshot","ec2:create-volume","ec2:delete-key-pair","ec2:delete-network-interface","ec2:delete-security-group","ec2:delete-snapshot","ec2:delete-volume","ec2:deregister-image","ec2:describe-image-attribute","ec2:describe-images","ec2:describe-instance-attribute","ec2:describe-network-interface-attribute","ec2:describe-snapshot-attribute","ec2:describe-stale-security-groups","ec2:describe-volume-attribute","ec2:detach-network-interface","ec2:detach-volume","ec2:disassociate-iam-instance-profile","ec2:enable-volume-io","ec2:get-console-output","ec2:get-console-screenshot","ec2:get-password-data","ec2:import-key-pair","ec2:modify-image-attribute","ec2:modify-instance-attribute","ec2:modify-volume","ec2:modify-volume-attribute","ec2:move-address-to-vpc","ec2:release-address","ec2:replace-iam-instance-profile-association","ec2:reset-image-attribute","ec2:reset-instance-attribute","ec2:reset-network-interface-attribute","ec2:reset-snapshot-attribute","ec2:restore-address-to-classic","ec2:revoke-security-group-egress","ec2:revoke-security-group-ingress","as400:read-data-queue-processor","marketo:get-daily-usage","marketo:get-daily-errors","marketo:describe-opportunity-role","marketo:describe-opportunity","marketo:get-lead-partitions","marketo:describe-lead","marketo:get-activity-types").collect(Collectors.toList());
	
	public static List<String> transformWithConfig = Stream.of("anypoint-mq:subscriber","sftp:connector","sftp:outbound-endpoint", "sftp:inbound-endpoint", "ftp:connector","ftp:outbound-endpoint", "ftp:inbound-endpoint","smtp:outbound-endpoint","smtps:outbound-endpoint","pop3:connector","pop3s:connector","pop3:inbound-endpoint","pop3s:inbound-endpoint","sap:connector","sap:inbound-endpoint","sap:outbound-endpoint","msmq:config","msmq:receive","msmq:send","apachekafka:config","apachekafka:consumer","apachekafka:producer","file:outbound-endpoint", "file:inbound-endpoint", "file:connector","udp:inbound-endpoint","udp:outbound-endpoint","http:polling-connector","https:connector","http:connector","http:inbound-endpoint","http:outbound-endpoint","https:outbound-endpoint","http:inbound-endpoint","imap:connector","imap:inbound-endpoint","pop3:outbound-endpoint","pop3s:outbound-endpoint","imaps:inbound-endpoint","imaps:outbound-endpoint","imap:outbound-endpoint").collect(Collectors.toList());
	
	public static List<String> skipGlobalConfigElements = Stream.of("anypoint-mq:config","sftp:connector","ftp:connector","smtp:connector","smtps:connector","pop3:connector","pop3s:connector","sap:connector","msmq:config","apachekafka:config","file:connector","udp:connector","http:polling-connector","https:connector","http:connector","imap:connector","imaps:connector").collect(Collectors.toList());
	
	public static List<String> skipElements = Stream.of("poll","batch:input","configuration", "cors:validate", "custom-composite-source","mulexml:dom-to-xml-transformer","mulexml:dom-to-output-handler-transformer", "mulexml:xml-to-dom-transformer", "mulexml:xml-prettyprinter-transformer", "mulexml:jaxb-object-to-xml-transformer", "mulexml:jaxb-xml-to-object-transformer", "mulexml:jaxb-context", "mulexml:object-to-xml-transformer", "xml-to-object-transformer", "apikit:exception", "byte-array-to-string-transformer", "remove-session-variable", "remove-variable").collect(Collectors.toList());
	
	public static List<String> hasContentInHashSqaureBrackerts = Stream.of("db:sql","http:body","http:query-params","http:headers", "http:uri-params", "anypoint-mq:body", "db:input-parameters","servicebus:queue-path","servicebus:body","servicebus:topic-path","ftps:content","msmq:payload","kafka:message","redis:value","mongo:condition-query","mongo:content","mongo:sort-by","mongo:find-query","mongo:file-id","mongo:collection-name","cassandra-db:alter-column-input","cassandra-db:input","cassandra-db:create-table-input","cassandra-db:where-clause","cassandra-db:keyspace-name","cassandra-db:table-name","cassandra-db:cql-input","cassandra-db:entity-to-insert","cassandra-db:old-column-name","cassandra-db:column-name","cassandra-db:query","cassandra-db:entity-to-update","netsuite:folder-id","netsuite:content","netsuite:record-maps","netsuite:added-records","netsuite:deleted-base-ref-types","netsuite:deleted-record-refs","netsuite:retrieved-base-ref-types","netsuite:retrieved-record-refs","netsuite:initialize-records","netsuite:criteria","netsuite:source","netsuite:destination","netsuite:contact","netsuite:role","netsuite:base-ref","netsuite:deleted-base-ref-types","netsuite:record-ref","netsuite:deleted-record-refs","netsuite:base-ref","netsuite:period","netsuite:from-subsidiary","netsuite:to-subsidiary","netsuite:rate-filter","netsuite:record","netsuite:references","netsuite:filters","netsuite:field-descriptor","netsuite:record-to-initialize","netsuite:initialize-records","netsuite:credentials","netsuite:search-record","netsuite:event-id","netsuite:record-maps","netsuite:records","edifact:read-content","successfactors:properties","successfactors:key-properties","sns:endpoint","sns:platform-application-attributes","sns:message","microsoft-dynamics-crm:list-of-attributes","microsoft-dynamics-crm:attributes","microsoft-dynamics-crm:query","microsoft-dynamics-crm:requests","microsoft-dynamics-crm:request-parameters","microsoft-dynamics-crm:list-of-attributes","microsoft-dynamics-crm:attributes","nav:entity","oracle-ebs:body","oracle-ebs:content","oracle-ebs:criteria","oracle-ebs:body","oracle-ebs122:input","mule-sap-concur-connector:update-expense-itemization-request-data","mule-sap-concur-connector:update-expense-entry-request-data","mule-sap-concur-connector:update-digtal-tax-invoice-request-data","mule-sap-concur-connector:update-attendee-type-request-data","mule-sap-concur-connector:create-receipt-image-request-data","mule-sap-concur-connector:update-report-request-data","mule-sap-concur-connector:update-quick-expense-request-data","mule-sap-concur-connector:update-vendors-request-data","microsoft-dynamics-ax:query","mft:exception-data","mft:file-data","dynamics:attributes","dynamics:entities-attributes","dynamics:id","dynamics:ids","dynamics:attributes","dynamics:related-entities","dynamics:body","dynamics:id","ldap:entry","ldap:attribute-values","sharepoint:body","sharepoint:list","sharepoint:updated-properties","sharepoint:properties","sharepoint:file-content-stream","peoplesoft:content","twilio-connector:redact-message-request-data","twilio-connector:send-message-request-data","salesforce-composite:sub-requests","salesforce-composite:request-body","salesforce-composite:create-result","salesforce-composite:delete-result","salesforce-composite:get-limits-result","salesforce-composite:query","salesforce-composite:query-result","sfdc-marketing-cloud:api-objects","sfdc-marketing-cloud:interactions","sfdc-marketing-cloud:schedule-definitions","sfdc-marketing-cloud:query","sfdc-marketing-cloud:definitions","sfdc-marketing-cloud:configurations","sharepoint:body","sharepoint:list","sharepoint:update-properties","sharepoint:properties","sharepoint:content","siebel:business-component-fields","siebel:query-definition","siebel:query-to-join-definition","siebel:input","siebel:input-properties","as400:cmd","as400:dq-entry","hl7:write-content","hl7:read-content","marketo:clone-email-template-request-data","marketo:create-email-template-request-data","marketo:update-email-template-content-request-data","marketo:clone-email-request-data","marketo:create-email-request-data","marketo:get-emails-request-data","marketo:update-email-content-section-request-data","marketo:update-email-content-section-request-data","marketo:update-email-dynamic-content-section-request-data","marketo:create-file-request-data","marketo:send-sample-email-request-data","marketo:update-file-content-request-data","marketo:create-folder-request-data","marketo:create-landing-page-template-request-data","marketo:update-landing-page-template-content-request-data","marketo:clone-snippet-request-data","marketo:create-snippet-request-data","marketo:update-snippet-content-request-data","marketo:update-snippet-content-request-data","marketo:update-snippet-dynamic-content-request-data","marketo:create-token-request-data","marketo:delete-token-by-name-request-data","marketo:request-campaign-request-data","marketo:schedule-campaign-request-data","marketo:delete-companies-request-data","marketo:delete-custom-objects-request-data","marketo:get-custom-obects-request-data","marketo:delete-leads-request-data","marketo:update-lead-partition-request-data","marketo:import-leads-request-data","marketo:delete-opportunities-request-data","marketo:delete-opportunity-roles-request-data","marketo:clone-program-request-data","marketo:delete-salespersons-request-data","powershell:file-content","coupa:entity","ibmctg:channel-and-contents","ibmctg:content","neo4j:set-parameters","neo4j:parameters","neo4j:input","rosetta:content","slack:message","slack:channels","tradacoms:write-content","tradacoms:read-content","x12:write-content","x12:read-content","mule-box-connector:create-group-request-data","mule-box-connector:create-collaboration-request-data","mule-box-connector:create-group-membership-request-data","mule-box-connector:update-collaboration-request-data","mule-box-connector:update-task-request-data","mule-box-connector:create-task-request-data","mule-box-connector:create-task-assignment-request-data","mule-box-connector:create-user-request-data","mule-box-connector:promote-file-version-request-data","mule-box-connector:update-comment-request-data","mule-box-connector:update-file-info-request-data","mule-box-connector:update-folder-request-data","mule-box-connector:update-group-membership-request-data","mule-box-connector:update-task-assignment-request-data","mule-box-connector:update-user-request-data","mule-box-connector:create-folder-request-data","mule-box-connector:create-comment-request-data","sqs:message","edifact:write-content","s3:part-e-tags","s3:rules","s3:lifecycle-configuration-rules","s3:topic-configurations","s3:policy-text","s3:tag-sets","s3:versioning-status","s3:bucket-website-configuration","s3:storage-class","s3:content","os:default-value","os:value").collect(Collectors.toList()); 
	//public static List<String> hasContentInHashSqaureBrackerts = new ArrayList<String>();
	
	public static List<String> hasContentInCDATASection = Stream.of("http:body","http:query-params","http:headers", "http:uri-params", "anypoint-mq:body", "db:input-parameters","servicebus:queue-path","servicebus:body","servicebus:topic-path","ftps:content","msmq:payload","kafka:message","redis:value","mongo:condition-query","mongo:content","mongo:sort-by","mongo:find-query","mongo:file-id","mongo:collection-name","cassandra-db:alter-column-input","cassandra-db:input","cassandra-db:create-table-input","cassandra-db:where-clause","cassandra-db:keyspace-name","cassandra-db:table-name","cassandra-db:cql-input","cassandra-db:entity-to-insert","cassandra-db:old-column-name","cassandra-db:column-name","cassandra-db:query","cassandra-db:entity-to-update","netsuite:folder-id","netsuite:content","netsuite:record-maps","netsuite:added-records","netsuite:deleted-base-ref-types","netsuite:deleted-record-refs","netsuite:retrieved-base-ref-types","netsuite:retrieved-record-refs","netsuite:initialize-records","netsuite:criteria","netsuite:source","netsuite:destination","netsuite:contact","netsuite:role","netsuite:base-ref","netsuite:deleted-base-ref-types","netsuite:record-ref","netsuite:deleted-record-refs","netsuite:base-ref","netsuite:period","netsuite:from-subsidiary","netsuite:to-subsidiary","netsuite:rate-filter","netsuite:record","netsuite:references","netsuite:filters","netsuite:field-descriptor","netsuite:record-to-initialize","netsuite:initialize-records","netsuite:credentials","netsuite:search-record","netsuite:event-id","netsuite:record-maps","netsuite:records","edifact:read-content","successfactors:properties","successfactors:key-properties","sns:endpoint","sns:platform-application-attributes","sns:message","microsoft-dynamics-crm:list-of-attributes","microsoft-dynamics-crm:attributes","microsoft-dynamics-crm:query","microsoft-dynamics-crm:requests","microsoft-dynamics-crm:request-parameters","microsoft-dynamics-crm:list-of-attributes","microsoft-dynamics-crm:attributes","nav:entity","oracle-ebs:body","oracle-ebs:content","oracle-ebs:criteria","oracle-ebs:body","oracle-ebs122:input","mule-sap-concur-connector:update-expense-itemization-request-data","mule-sap-concur-connector:update-expense-entry-request-data","mule-sap-concur-connector:update-digtal-tax-invoice-request-data","mule-sap-concur-connector:update-attendee-type-request-data","mule-sap-concur-connector:create-receipt-image-request-data","mule-sap-concur-connector:update-report-request-data","mule-sap-concur-connector:update-quick-expense-request-data","mule-sap-concur-connector:update-vendors-request-data","mft:exception-data","mft:file-data","dynamics:entities-attributes","dynamics:id","dynamics:ids","dynamics:attributes","dynamics:related-entities","dynamics:body","dynamics:id","ldap:entry","ldap:attribute-values","sharepoint:body","sharepoint:list","sharepoint:updated-properties","sharepoint:properties","sharepoint:file-content-stream","peoplesoft:content","twilio-connector:redact-message-request-data","twilio-connector:send-message-request-data","sfdc-marketing-cloud:api-objects","sfdc-marketing-cloud:interactions","sfdc-marketing-cloud:schedule-definitions","sfdc-marketing-cloud:query","sfdc-marketing-cloud:definitions","sfdc-marketing-cloud:configurations","sharepoint:body","sharepoint:list","sharepoint:update-properties","sharepoint:properties","sharepoint:content","siebel:business-component-fields","siebel:query-definition","siebel:query-to-join-definition","siebel:input","siebel:input-properties","as400:cmd","as400:dq-entry","hl7:write-content","hl7:read-content","marketo:clone-email-template-request-data","marketo:create-email-template-request-data","marketo:update-email-template-content-request-data","marketo:clone-email-request-data","marketo:create-email-request-data","marketo:get-emails-request-data","marketo:update-email-content-section-request-data","marketo:update-email-content-section-request-data","marketo:update-email-dynamic-content-section-request-data","marketo:create-file-request-data","marketo:send-sample-email-request-data","marketo:update-file-content-request-data","marketo:create-folder-request-data","marketo:create-landing-page-template-request-data","marketo:update-landing-page-template-content-request-data","marketo:clone-snippet-request-data","marketo:create-snippet-request-data","marketo:update-snippet-content-request-data","marketo:update-snippet-content-request-data","marketo:update-snippet-dynamic-content-request-data","marketo:create-token-request-data","marketo:delete-token-by-name-request-data","marketo:request-campaign-request-data","marketo:schedule-campaign-request-data","marketo:delete-companies-request-data","marketo:delete-custom-objects-request-data","marketo:get-custom-obects-request-data","marketo:delete-leads-request-data","marketo:update-lead-partition-request-data","marketo:import-leads-request-data","marketo:delete-opportunities-request-data","marketo:delete-opportunity-roles-request-data","marketo:clone-program-request-data","marketo:delete-salespersons-request-data","powershell:file-content","coupa:entity","ibmctg:channel-and-contents","ibmctg:content","neo4j:set-parameters","neo4j:parameters","neo4j:input","rosetta:content","slack:message","slack:channels","tradacoms:write-content","tradacoms:read-content","x12:write-content","x12:read-content","mule-box-connector:create-collaboration-request-data","mule-box-connector:create-comment-request-data","mule-box-connector:create-folder-request-data","mule-box-connector:create-group-request-data","mule-box-connector:create-group-membership-request-data","mule-box-connector:create-task-request-data","mule-box-connector:create-task-assignment-request-data","mule-box-connector:create-user-request-data","mule-box-connector:promote-file-version-request-data","mule-box-connector:update-collaboration-request-data","mule-box-connector:update-comment-request-data","mule-box-connector:update-file-info-request-data","mule-box-connector:update-folder-request-data","mule-box-connector:update-group-membership-request-data","mule-box-connector:update-task-request-data","mule-box-connector:update-task-assignment-request-data","mule-box-connector:update-user-request-data","sqs:message","edifact:write-content","s3:part-e-tags","s3:rules","s3:lifecycle-configuration-rules","s3:topic-configurations","s3:policy-text","s3:tag-sets","s3:versioning-status","s3:bucket-website-configuration","s3:storage-class","s3:content","os:default-value","os:value").collect(Collectors.toList());

	
	public static List<String> moveComponentsToBeansXML = Stream.of("spring:beans","spring:bean", "spring:property", "context:property-placeholder","context:component-scan").collect(Collectors.toList());
	
	public static List<String> springNameSpaceURIs = Stream.of("http://www.springframework.org/schema/context", "http://www.springframework.org/schema/security").collect(Collectors.toList());
	
	public static Map<String,String> transformerOf = new HashMap<String, String>();
	
	{
		transformerOf.put("flow", "<flow>\r\n" + 
				"	<xsl:choose>"+
				"		<xsl:when test=\"contains(@name, '/' ) or contains(@name, '{')\">" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"translate(translate(translate(@name,'/', '\\\\'),'{','(' ), '}', ')' ) \" /> \r\n" +
				"			</xsl:attribute>\r\n" +
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" +
				"		  <xsl:attribute name=\"name\">\r\n" +
				"			<xsl:value-of select=\"@name\" />\r\n" + 
				"		  </xsl:attribute>\r\n" +
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>"+
				"</flow>");

		transformerOf.put("flow-ref", "<flow-ref>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"		<xsl:when test=\"contains(@name, '/' ) or contains(@name, '{')\">\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"translate(translate(translate(@name,'/', '\\\\'),'{','(' ), '}', ')' ) \" />		\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" + 
				"		  <xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@name\" />\r\n" + 
				"		  </xsl:attribute>\r\n" + 
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"</flow-ref>");
		
		transformerOf.put("db:mysql-config",  "<db:config >\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"		<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"  <xsl:choose>\r\n" + 
				"	<xsl:when test=\"@dataSource-ref\">\r\n" + 
				"	<db:data-source-connection>\r\n" + 
				"		<xsl:attribute name=\"dataSourceRef\">\r\n" + 
				"			<xsl:value-of select=\"@dataSource-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@useXaTransactions\">\r\n" + 
				"			<xsl:attribute name=\"useXaTransactions\">\r\n" + 
				"				<xsl:value-of select=\"@useXaTransactions\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@transactionIsolation\">\r\n" + 
				"			<xsl:attribute name=\"transactionIsolation\">\r\n" + 
				"				<xsl:value-of select=\"@transactionIsolation\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"		<db:pooling-profile>\r\n" + 
				"	<xsl:if test=\"@acquireIncrement\">\r\n" + 
				"		<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"			<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@preparedStatementCacheSize\">\r\n" + 
				"		<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"			<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWaitMillis\">\r\n" + 
				"		<xsl:attribute name=\"maxWait\">\r\n" + 
				"			<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxWaitUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</db:pooling-profile>	</xsl:for-each>  \r\n" + 
				"	</db:data-source-connection>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:when test=\"@url\">\r\n" + 
				"  		<db:generic-connection>\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"driverClassName\">com.mysql.jdbc.Driver</xsl:attribute>\r\n" + 
				"	<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"		<db:pooling-profile>\r\n" + 
				"	<xsl:if test=\"@acquireIncrement\">\r\n" + 
				"		<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"			<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@preparedStatementCacheSize\">\r\n" + 
				"		<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"			<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWaitMillis\">\r\n" + 
				"		<xsl:attribute name=\"maxWait\">\r\n" + 
				"			<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxWaitUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</db:pooling-profile>	</xsl:for-each>  \r\n" + 
				"	</db:generic-connection>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<db:my-sql-connection>\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"@host\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"@port\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"user\">\r\n" + 
				"				<xsl:value-of select=\"@user\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"database\">\r\n" + 
				"				<xsl:value-of select=\"@database\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</db:my-sql-connection>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"</db:config>" );
		
		transformerOf.put("db:oracle-config",  "<db:config >\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"		<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"  <xsl:choose>\r\n" + 
				"	<xsl:when test=\"@dataSource-ref\">\r\n" + 
				"	<db:data-source-connection>\r\n" + 
				"		<xsl:attribute name=\"dataSourceRef\">\r\n" + 
				"			<xsl:value-of select=\"@dataSource-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@useXaTransactions\">\r\n" + 
				"			<xsl:attribute name=\"useXaTransactions\">\r\n" + 
				"				<xsl:value-of select=\"@useXaTransactions\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@transactionIsolation\">\r\n" + 
				"			<xsl:attribute name=\"transactionIsolation\">\r\n" + 
				"				<xsl:value-of select=\"@transactionIsolation\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"		<db:pooling-profile>\r\n" + 
				"	<xsl:if test=\"@acquireIncrement\">\r\n" + 
				"		<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"			<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@preparedStatementCacheSize\">\r\n" + 
				"		<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"			<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWaitMillis\">\r\n" + 
				"		<xsl:attribute name=\"maxWait\">\r\n" + 
				"			<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxWaitUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</db:pooling-profile>	</xsl:for-each>  \r\n" + 
				"	</db:data-source-connection>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:when test=\"@url\">\r\n" + 
				"  		<db:generic-connection>\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"driverClassName\">oracle.jdbc.driver.OracleDriver</xsl:attribute>\r\n" + 
				"	<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"		<db:pooling-profile>\r\n" + 
				"	<xsl:if test=\"@acquireIncrement\">\r\n" + 
				"		<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"			<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@preparedStatementCacheSize\">\r\n" + 
				"		<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"			<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWaitMillis\">\r\n" + 
				"		<xsl:attribute name=\"maxWait\">\r\n" + 
				"			<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxWaitUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</db:pooling-profile>	\r\n" + 
				"	</xsl:for-each>  \r\n" + 
				"	</db:generic-connection>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<db:oracle-connection>\r\n" + 
				"		<xsl:attribute name=\"host\">\r\n" + 
				"			<xsl:value-of select=\"@host\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"port\">\r\n" + 
				"			<xsl:value-of select=\"@port\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"user\">\r\n" + 
				"			<xsl:value-of select=\"@user\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"password\">\r\n" + 
				"			<xsl:value-of select=\"@password\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"instance\">\r\n" + 
				"			<xsl:value-of select=\"@instance\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@transactionIsolation !=''\">			\r\n" + 
				"			<xsl:attribute name=\"transactionIsolation\">	\r\n" + 
				"				<xsl:value-of select=\"@transactionIsolation\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"			<db:pooling-profile>\r\n" + 
				"				<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"					<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"						<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"					<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"					<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"					<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:attribute name=\"maxWait\">\r\n" + 
				"					<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</db:pooling-profile>	\r\n" + 
				"		</xsl:for-each>  \r\n" + 
				"	</db:oracle-connection>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"</db:config>" );
		
		transformerOf.put("db:derby-config", "<db:config >\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"		<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"  <xsl:choose>\r\n" + 
				"	<xsl:when test=\"@dataSource-ref\">\r\n" + 
				"	<db:data-source-connection>\r\n" + 
				"		<xsl:attribute name=\"dataSourceRef\">\r\n" + 
				"			<xsl:value-of select=\"@dataSource-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"		<db:pooling-profile>\r\n" + 
				"	<xsl:if test=\"@acquireIncrement\">\r\n" + 
				"		<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"			<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@preparedStatementCacheSize\">\r\n" + 
				"		<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"			<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWaitMillis\">\r\n" + 
				"		<xsl:attribute name=\"maxWait\">\r\n" + 
				"			<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxWaitUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</db:pooling-profile>	</xsl:for-each>  \r\n" + 
				"	</db:data-source-connection>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:when test=\"@url\">\r\n" + 
				"  		<db:generic-connection>\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"driverClassName\">org.apache.derby.jdbc.ClientDriver</xsl:attribute>\r\n" + 
				"	<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"		<db:pooling-profile>\r\n" + 
				"	<xsl:if test=\"@acquireIncrement\">\r\n" + 
				"		<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"			<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@preparedStatementCacheSize\">\r\n" + 
				"		<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"			<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWaitMillis\">\r\n" + 
				"		<xsl:attribute name=\"maxWait\">\r\n" + 
				"			<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxWaitUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</db:pooling-profile>	\r\n" + 
				"	</xsl:for-each>  \r\n" + 
				"	</db:generic-connection>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<db:derby-connection>\r\n" + 
				"		</db:derby-connection>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"</db:config>\r\n" + 
				"");
		
		transformerOf.put("db:generic-config", "<db:config >\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"		<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"  <xsl:choose>\r\n" + 
				"	<xsl:when test=\"@dataSource-ref\">\r\n" + 
				"	<db:data-source-connection>\r\n" + 
				"		<xsl:attribute name=\"dataSourceRef\">\r\n" + 
				"			<xsl:value-of select=\"@dataSource-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@useXaTransactions\">\r\n" + 
				"			<xsl:attribute name=\"useXaTransactions\">\r\n" + 
				"				<xsl:value-of select=\"@useXaTransactions\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@transactionIsolation\">\r\n" + 
				"			<xsl:attribute name=\"transactionIsolation\">\r\n" + 
				"				<xsl:value-of select=\"@transactionIsolation\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"		<db:pooling-profile>\r\n" + 
				"	<xsl:if test=\"@acquireIncrement\">\r\n" + 
				"		<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"			<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@preparedStatementCacheSize\">\r\n" + 
				"		<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"			<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWaitMillis\">\r\n" + 
				"		<xsl:attribute name=\"maxWait\">\r\n" + 
				"			<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxWaitUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</db:pooling-profile>	</xsl:for-each>  \r\n" + 
				"	</db:data-source-connection>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:when test=\"@url\">\r\n" + 
				"  		<db:generic-connection>\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"driverClassName\">\r\n" + 
				"			<xsl:value-of select=\"@driverClassName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	<xsl:for-each select=\"db:pooling-profile\">\r\n" + 
				"		<db:pooling-profile>\r\n" + 
				"	<xsl:if test=\"@acquireIncrement\">\r\n" + 
				"		<xsl:attribute name=\"acquireIncrement\">\r\n" + 
				"			<xsl:value-of select=\"@acquireIncrement\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"maxPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minPoolSize\">\r\n" + 
				"		<xsl:attribute name=\"minPoolSize\">\r\n" + 
				"			<xsl:value-of select=\"@minPoolSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@preparedStatementCacheSize\">\r\n" + 
				"		<xsl:attribute name=\"preparedStatementCacheSize\">\r\n" + 
				"			<xsl:value-of select=\"@preparedStatementCacheSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWaitMillis\">\r\n" + 
				"		<xsl:attribute name=\"maxWait\">\r\n" + 
				"			<xsl:value-of select=\"@maxWaitMillis\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxWaitUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</db:pooling-profile>	</xsl:for-each>  \r\n" + 
				"	</db:generic-connection>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"</db:config>");
		
		transformerOf.put("http:listener-config", "<http:listener-config>\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	<http:listener-connection>\r\n" + 
				"		<xsl:attribute name=\"host\">\r\n" + 
				"			<xsl:value-of select=\"@host\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"port\">\r\n" + 
				"			<xsl:value-of select=\"@port\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@basePath !=''\">\r\n" + 
				"			<xsl:attribute name=\"basePath\">\r\n" + 
				"				<xsl:value-of select=\"@basePath\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@protocol !=''\">\r\n" + 
				"			<xsl:attribute name=\"protocol\">\r\n" + 
				"				<xsl:value-of select=\"@protocol\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tls:context\">\r\n" + 
				"		 <xsl:copy-of select=\"tls:context\"/>	\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</http:listener-connection>		\r\n" + 
				"</http:listener-config>");
		
		transformerOf.put("http:request-config", "<http:request-config>\r\n" + 
				"        <xsl:attribute name=\"name\">\r\n" + 
				"            <xsl:value-of select=\"@name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@basePath\">\r\n" + 
				"        <xsl:attribute name=\"basePath\">\r\n" + 
				"                        <xsl:value-of select=\"@basePath\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"  <http:request-connection>\r\n" + 
				"        <xsl:attribute name=\"host\">\r\n" + 
				"                        <xsl:value-of select=\"@host\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"        <xsl:attribute name=\"port\">\r\n" + 
				"                        <xsl:value-of select=\"@port\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@protocol !=''\">\r\n" + 
				"			<xsl:attribute name=\"protocol\">\r\n" + 
				"				<xsl:value-of select=\"@protocol\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	<xsl:if test=\"tls:context\">\r\n" + 
				"		<xsl:copy-of select=\"tls:context\"/>	\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:proxy\">\r\n" + 
				"		<http:proxy-config>\r\n" + 
				"			<xsl:copy-of select=\"http:proxy\"/>	\r\n" + 
				"		</http:proxy-config>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:basic-authentication\">\r\n" + 
				"		<http:authentication>\r\n" + 
				"			<xsl:copy-of select=\"http:basic-authentication\"/>\r\n" + 
				"		</http:authentication>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:ntlm-authentication\">\r\n" + 
				"		<http:authentication>\r\n" + 
				"			<xsl:copy-of select=\"http:ntlm-authentication\"/>\r\n" + 
				"		</http:authentication>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:digest-authentication\">\r\n" + 
				"		<http:authentication>\r\n" + 
				"			<xsl:copy-of select=\"http:digest-authentication\"/>\r\n" + 
				"		</http:authentication>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"tcp:client-socket-properties\">\r\n" + 
				"		<http:client-socket-properties>\r\n" + 
				"				<sockets:tcp-client-socket-properties linger=\"-1\">\r\n" + 
				"					<xsl:copy-of select=\"tcp:client-socket-properties/@*[name()!='timeout']\"/>\r\n" + 
				"					<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"						<xsl:value-of select=\"tcp:client-socket-properties/@timeout\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</sockets:tcp-client-socket-properties>\r\n" + 
				"		</http:client-socket-properties>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</http:request-connection>\r\n" + 
				"</http:request-config>\r\n" + 
				"");
		
		transformerOf.put("http:listener", "<http:listener>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"path\">\r\n" + 
				"		<xsl:value-of select=\"@path\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"		<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@allowedMethods !=''\">\r\n" + 
				"		<xsl:attribute name=\"allowedMethods\">\r\n" + 
				"			<xsl:value-of select=\"@allowedMethods\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<http:response statusCode=\"#[vars.httpStatus default 200]\">\r\n" + 
				"		<xsl:if test=\"http:response-builder/@reasonPhrase\">\r\n" + 
				"			<xsl:attribute name=\"reasonPhrase\">\r\n" + 
				"				<xsl:value-of select=\"http:response-builder/@reasonPhrase\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"        <http:body>#[payload]</http:body>	\r\n" + 
				"		<xsl:if test=\"http:response-builder/http:header\">\r\n" + 
				"			<http:headers>\r\n" + 
				"				<xsl:text>#[output applicaton/java		---{ </xsl:text>\r\n" + 
				"				<xsl:for-each select=\"http:response-builder/http:header\">			\r\n" + 
				"					\"<xsl:value-of select=\"@headerName\"/>\" :  <xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\"@value\"/></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>			 </xsl:for-each>	<xsl:text >	}]</xsl:text>	</http:headers>  \r\n" + 
				"		</xsl:if>\r\n" + 
				"		</http:response>    \r\n" + 
				"		<http:error-response statusCode=\"#[vars.httpStatus default 500]\">		\r\n" + 
				"			<xsl:if test=\"http:error-response-builder/@reasonPhrase\">			\r\n" + 
				"				<xsl:attribute name=\"reasonPhrase\">\r\n" + 
				"					<xsl:value-of select=\"http:error-response-builder/@reasonPhrase\" />			\r\n" + 
				"				</xsl:attribute>		\r\n" + 
				"			</xsl:if>        \r\n" + 
				"			<http:body>#[error]</http:body>  \r\n" + 
				"			<xsl:if test=\"http:error-response-builder/http:header\">	\r\n" + 
				"			<http:headers>	<xsl:text>#[output applicaton/java		---{ </xsl:text>			 \r\n" + 
				"				<xsl:for-each select=\"http:error-response-builder/http:header\">			\"<xsl:value-of select=\"@headerName\"/>\" :  <xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\"@value\"/></xsl:otherwise></xsl:choose>			 <xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>			 </xsl:for-each>	\r\n" + 
				"				<xsl:text >	}]</xsl:text>	\r\n" + 
				"			</http:headers>  \r\n" + 
				"			</xsl:if>\r\n" + 
				"		</http:error-response>\r\n" + 
				"</http:listener>");
		
		transformerOf.put("db:insert", "<xsl:choose>\r\n" + 
				"	<xsl:when test=\"@bulkMode = 'true'\">\r\n" + 
				"			<db:bulk-insert>\r\n" + 
				"				<xsl:attribute name=\"doc:name\">\r\n" + 
				"					<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"					<xsl:if test=\"@queryTimeout\">			\r\n" + 
				"				<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"					<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"					</xsl:if>	\r\n" + 
				"					<xsl:if test=\"@targetValue\">			\r\n" + 
				"				<xsl:attribute name=\"targetValue\">\r\n" + 
				"					<xsl:value-of select=\"@target\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"					</xsl:if>	\r\n" + 
				"					<xsl:if test=\"@transactionalAction !=''\">			\r\n" + 
				"					<xsl:attribute name=\"transactionalAction\">				\r\n" + 
				"					<xsl:value-of select=\"@transactionalAction\" />			\r\n" + 
				"					</xsl:attribute>		\r\n" + 
				"					</xsl:if>	\r\n" + 
				"					<xsl:attribute name=\"config-ref\">\r\n" + 
				"					<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:if test=\"db:parameterized-query\">\r\n" + 
				"					<db:sql>\r\n" + 
				"						<xsl:value-of select=\"db:parameterized-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"					</db:sql>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"db:dynamic-query\">\r\n" + 
				"					<db:sql>\r\n" + 
				"						<xsl:value-of select=\"db:dynamic-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"					</db:sql>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<db:bulk-input-parameters ><xsl:text><![CDATA[#[payload]]]></xsl:text></db:bulk-input-parameters>\r\n" + 
				"			</db:bulk-insert>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<db:insert>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeys\">	\r\n" + 
				"			<xsl:attribute name=\"autoGenerateKeys\">\r\n" + 
				"				<xsl:value-of select=\"@autoGeneratedKeys\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>	\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeysColumnIndexes\">	\r\n" + 
				"			<xsl:attribute name=\"autoGeneratedKeysColumnIndexes\">\r\n" + 
				"				<xsl:value-of select=\"@autoGeneratedKeysColumnIndexes\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeysColumnNames\">\r\n" + 
				"		<xsl:attribute name=\"autoGeneratedKeysColumnNames\">\r\n" + 
				"			<xsl:value-of select=\"@autoGeneratedKeysColumnNames\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"		<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"			<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@target\">\r\n" + 
				"		<xsl:attribute name=\"target\">\r\n" + 
				"			<xsl:value-of select=\"@target\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@transactionalAction !=''\">			\r\n" + 
				"			<xsl:attribute name=\"transactionalAction\">				\r\n" + 
				"				<xsl:value-of select=\"@transactionalAction\" />			\r\n" + 
				"			</xsl:attribute>		\r\n" + 
				"		</xsl:if>	\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"db:parameterized-query\">\r\n" + 
				"			<db:sql>\r\n" + 
				"				<xsl:value-of select=\"db:parameterized-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"			</db:sql>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"db:dynamic-query\">\r\n" + 
				"			<db:sql>\r\n" + 
				"				<xsl:value-of select=\"db:dynamic-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"			</db:sql>\r\n" + 
				"		</xsl:if>	\r\n" + 
				"		<xsl:if test=\"db:in-param\">\r\n" + 
				"			<db:input-parameters>\r\n" + 
				"			  <xsl:text>#[{</xsl:text>\r\n" + 
				"			  <xsl:for-each select=\"db:in-param\">\r\n" + 
				"				 <xsl:value-of select=\"@name\"/><xsl:text> : </xsl:text><xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\"@value\"/></xsl:otherwise></xsl:choose>	<xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			  </xsl:for-each>\r\n" + 
				"			<xsl:text>}]</xsl:text>\r\n" + 
				"			</db:input-parameters>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		</db:insert>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"</xsl:choose>" );
		
		transformerOf.put("db:update", "<xsl:choose>\r\n" + 
				"	<xsl:when test=\"@bulkMode = 'true'\">\r\n" + 
				"			<db:bulk-update>\r\n" + 
				"				<xsl:attribute name=\"doc:name\">\r\n" + 
				"					<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"					<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:if test=\"@target\">\r\n" + 
				"				<xsl:attribute name=\"targetValue\">\r\n" + 
				"					<xsl:value-of select=\"@target\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"@transactionalAction !=''\">			\r\n" + 
				"					<xsl:attribute name=\"transactionalAction\">				\r\n" + 
				"						<xsl:value-of select=\"@transactionalAction\" />			\r\n" + 
				"					</xsl:attribute>		\r\n" + 
				"				</xsl:if>	\r\n" + 
				"				<xsl:attribute name=\"config-ref\">\r\n" + 
				"					<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:if test=\"db:parameterized-query\">\r\n" + 
				"					<db:sql>\r\n" + 
				"						<xsl:value-of select=\"db:parameterized-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"					</db:sql>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"db:dynamic-query\">\r\n" + 
				"					<db:sql>\r\n" + 
				"						<xsl:value-of select=\"db:dynamic-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"					</db:sql>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<db:bulk-input-parameters ><xsl:text><![CDATA[#[payload]]]></xsl:text></db:bulk-input-parameters>\r\n" + 
				"			</db:bulk-update>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<db:update>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeys\">	\r\n" + 
				"			<xsl:attribute name=\"autoGenerateKeys\">\r\n" + 
				"				<xsl:value-of select=\"@autoGeneratedKeys\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>	\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeysColumnIndexes\">	\r\n" + 
				"			<xsl:attribute name=\"autoGeneratedKeysColumnIndexes\">\r\n" + 
				"				<xsl:value-of select=\"@autoGeneratedKeysColumnIndexes\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeysColumnNames\">\r\n" + 
				"		<xsl:attribute name=\"autoGeneratedKeysColumnNames\">\r\n" + 
				"			<xsl:value-of select=\"@autoGeneratedKeysColumnNames\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"		<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"			<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@target\">\r\n" + 
				"		<xsl:attribute name=\"targetValue\">\r\n" + 
				"			<xsl:value-of select=\"@target\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@transactionalAction !=''\">			\r\n" + 
				"			<xsl:attribute name=\"transactionalAction\">				\r\n" + 
				"				<xsl:value-of select=\"@transactionalAction\" />			\r\n" + 
				"			</xsl:attribute>		\r\n" + 
				"		</xsl:if>	\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"db:parameterized-query\">\r\n" + 
				"			<db:sql>\r\n" + 
				"				<xsl:value-of select=\"db:parameterized-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"			</db:sql>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"db:dynamic-query\">\r\n" + 
				"			<db:sql>\r\n" + 
				"				<xsl:value-of select=\"db:dynamic-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"			</db:sql>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"db:in-param\">\r\n" + 
				"			<db:input-parameters>\r\n" + 
				"			  <xsl:text>#[[{</xsl:text>\r\n" + 
				"			  <xsl:for-each select=\"db:in-param\">\r\n" + 
				"				 <xsl:value-of select=\"@name\"/><xsl:text>:</xsl:text><xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\"@value\"/></xsl:otherwise></xsl:choose>	<xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			  </xsl:for-each>\r\n" + 
				"			<xsl:text>}]]</xsl:text>\r\n" + 
				"			</db:input-parameters>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		</db:update>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"</xsl:choose>");
		
		transformerOf.put("db:select", "<db:select>\r\n" + 
				"	\r\n" + 
				"   <xsl:attribute name=\"doc:name\">\r\n" + 
				"       <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"   </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"		<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"			<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@target\">\r\n" + 
				"		<xsl:attribute name=\"targetValue\">\r\n" + 
				"			<xsl:value-of select=\"@target\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"		<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" +
				"		<xsl:if test=\"db:parameterized-query\">\r\n" + 
				"			<db:sql>\r\n" + 
				"				<xsl:value-of select=\"db:parameterized-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"			</db:sql>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"db:dynamic-query\">\r\n" + 
				"			<db:sql>\r\n" + 
				"				<xsl:value-of select=\"db:dynamic-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"			</db:sql>\r\n" + 
				"		</xsl:if>\r\n" + 
				"<xsl:if test=\"db:in-param\">\r\n" + 
				"<db:input-parameters>\r\n" + 
				"  <xsl:text>#[[{</xsl:text>\r\n" + 
				"  <xsl:for-each select=\"db:in-param\">\r\n" + 
				"     <xsl:value-of select=\"@name\"/><xsl:text>:</xsl:text><xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\"@value\"/></xsl:otherwise></xsl:choose>	<xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"  </xsl:for-each>\r\n" + 
				"<xsl:text>}]]</xsl:text>\r\n" + 
				"</db:input-parameters>\r\n" + 
				"</xsl:if>"+
				"</db:select>\r\n" + 
				"");
		
		transformerOf.put("db:delete", "<xsl:choose>\r\n" + 
				"	<xsl:when test=\"@bulkMode = 'true'\">\r\n" + 
				"			<db:bulk-delete>\r\n" + 
				"				<xsl:attribute name=\"doc:name\">\r\n" + 
				"					<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"		<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"			<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@targetValue\">\r\n" + 
				"		<xsl:attribute name=\"targetValue\">\r\n" + 
				"			<xsl:value-of select=\"@target\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"					<xsl:if test=\"@transactionalAction !=''\">			\r\n" + 
				"					<xsl:attribute name=\"transactionalAction\">				\r\n" + 
				"					<xsl:value-of select=\"@transactionalAction\" />			\r\n" + 
				"					</xsl:attribute>		\r\n" + 
				"					</xsl:if>	\r\n" + 
				"					<xsl:attribute name=\"config-ref\">\r\n" + 
				"					<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:if test=\"db:parameterized-query\">\r\n" + 
				"					<db:sql>\r\n" + 
				"						<xsl:value-of select=\"db:parameterized-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"					</db:sql>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"db:dynamic-query\">\r\n" + 
				"					<db:sql>\r\n" + 
				"						<xsl:value-of select=\"db:dynamic-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"					</db:sql>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<db:bulk-input-parameters ><xsl:text><![CDATA[#[payload]]]></xsl:text></db:bulk-input-parameters>\r\n" + 
				"			</db:bulk-delete>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<db:delete>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeys\">	\r\n" + 
				"			<xsl:attribute name=\"autoGenerateKeys\">\r\n" + 
				"				<xsl:value-of select=\"@autoGeneratedKeys\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>	\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeysColumnIndexes\">	\r\n" + 
				"			<xsl:attribute name=\"autoGeneratedKeysColumnIndexes\">\r\n" + 
				"				<xsl:value-of select=\"@autoGeneratedKeysColumnIndexes\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@autoGeneratedKeysColumnNames\">\r\n" + 
				"		<xsl:attribute name=\"autoGeneratedKeysColumnNames\">\r\n" + 
				"			<xsl:value-of select=\"@autoGeneratedKeysColumnNames\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"		<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"			<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"		<xsl:attribute name=\"targetValue\">\r\n" + 
				"			<xsl:value-of select=\"@target\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@transactionalAction !=''\">			\r\n" + 
				"			<xsl:attribute name=\"transactionalAction\">				\r\n" + 
				"				<xsl:value-of select=\"@transactionalAction\" />			\r\n" + 
				"			</xsl:attribute>		\r\n" + 
				"		</xsl:if>	\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"db:parameterized-query\">\r\n" + 
				"			<db:sql>\r\n" + 
				"				<xsl:value-of select=\"db:parameterized-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"			</db:sql>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"db:dynamic-query\">\r\n" + 
				"			<db:sql>\r\n" + 
				"				<xsl:value-of select=\"db:dynamic-query\" disable-output-escaping=\"yes\"/>\r\n" + 
				"			</db:sql>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"db:in-param\">\r\n" + 
				"			<db:input-parameters>\r\n" + 
				"			  <xsl:text>#[[{</xsl:text>\r\n" + 
				"			  <xsl:for-each select=\"db:in-param\">\r\n" + 
				"				 <xsl:value-of select=\"@name\"/><xsl:text>:</xsl:text><xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\"@value\"/></xsl:otherwise></xsl:choose>	<xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			  </xsl:for-each>\r\n" + 
				"			<xsl:text>}]]</xsl:text>\r\n" + 
				"			</db:input-parameters>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		</db:delete>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"</xsl:choose>");
		
		transformerOf.put("db:parameterized-query", "<db:sql>\r\n" + 
				"	<xsl:value-of select=\".\" disable-output-escaping=\"yes\"/>\r\n" + 
				"</db:sql>");
		
		transformerOf.put("db:dynamic-query", "<db:sql>\r\n" + 
				"	<xsl:value-of select=\".\" disable-output-escaping=\"yes\"/>\r\n" + 
				"</db:sql>");
		
		
		transformerOf.put("foreach", "<foreach>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"batchSize\">\r\n" + 
				"		<xsl:value-of select=\"@batchSize\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"counterVariableName\">\r\n" + 
				"		<xsl:value-of select=\"@counterVariableName\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"rootMessageVariableName\">\r\n" + 
				"		<xsl:value-of select=\"@rootMessageVariableName\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"</foreach>");
		
		transformerOf.put("processor-chain", "<route></route>");
		
		transformerOf.put("scripting:component", "<scripting:execute>" +
				"<xsl:attribute name=\"doc:name\">" +
				"<xsl:value-of select=\"@doc:name\" />" +
				"</xsl:attribute>" +
				"<xsl:attribute name=\"engine\">" +
				"<xsl:value-of select=\"scripting:script/@engine\" />" +
				"</xsl:attribute>" +
				"<scripting:code >" +
				"<xsl:choose>" +
				"<xsl:when test=\"scripting:script/@file !=''\">" +
				"<xsl:value-of select=\"concat('###',scripting:script/@file)\"/>" +
				"</xsl:when>" +
				"<xsl:otherwise>" +
				"<xsl:value-of select=\"scripting:script\" disable-output-escaping=\"No\"/>" +
				"</xsl:otherwise>" +
				"</xsl:choose>"+
				"</scripting:code>" +
				"</scripting:execute>");
		
		transformerOf.put("scripting:transformer", "<scripting:execute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"engine\">\r\n" + 
				"			<xsl:value-of select=\"scripting:script/@engine\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"<scripting:code >\r\n" + 
				"	<xsl:value-of select=\"scripting:script\" disable-output-escaping=\"yes\"/>\r\n" + 
				"</scripting:code>\r\n" + 
				"</scripting:execute>");
		
		transformerOf.put("http:static-resource-handler", "<http:load-static-resource>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"resourceBasePath\">\r\n" + 
				"                        <xsl:value-of select=\"@resourceBase\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"defaultFile\">\r\n" + 
				"                        <xsl:value-of select=\"@defaultFile\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"</http:load-static-resource>");
		
		transformerOf.put("dw:transform-message", "<ee:transform>" +
				"<xsl:if test=\"@doc:name\">\r\n" + 
				"            <xsl:attribute name=\"doc:name\">\r\n" + 
				"               <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"            </xsl:attribute>\r\n" + 
				"			</xsl:if>"+
				"<ee:message >" +
				"<xsl:for-each select=\"dw:set-payload\">" +
				"    <ee:set-payload>" +
				"	  <xsl:choose>" +
				"		  <xsl:when test=\"@resource != ''\">" +
				"			<xsl:attribute name=\"resource\">" +
				"			  <xsl:choose>	"+
				"				<xsl:when test=\"starts-with(@resource,'classpath:')\">\r\n" + 
				"					<xsl:value-of select=\"substring-after(@resource,'classpath:')\" />" +
				"				</xsl:when>"+
				"				<xsl:otherwise>"+
				"					<xsl:value-of select=\"@resource\" />" +
				"				</xsl:otherwise>"+
				"			  </xsl:choose>	"+
				"			</xsl:attribute>" +
				"		  </xsl:when>" +
				"		  <xsl:otherwise>" +
				"			<xsl:text disable-output-escaping=\"yes\">&lt;![CDATA[</xsl:text>" +
				"			<xsl:value-of select=\".\"/>" +
				"			<xsl:text disable-output-escaping=\"yes\">]]&gt;</xsl:text>" +
				"		  </xsl:otherwise>" +
				"	  </xsl:choose>" +
				"	</ee:set-payload>" +
				"</xsl:for-each>" +
				"</ee:message>" +
				"<xsl:for-each select=\"dw:set-property\">  " +
				"  <xsl:choose>\r\n" + 
		 		"	<xsl:when test=\"starts-with(@propertyName,'http.status')\">\r\n" + 
		 		" <ee:variables>\r\n" + 
		 		" <ee:set-variable variableName=\"httpStatus\">\r\n" + 
		 		"    <xsl:value-of select=\"@value\" />\r\n" + 
		 		" </ee:set-variable>\r\n" + 
		 		"</ee:variables>\r\n" + 
		 		"        </xsl:when> \r\n" + 
		 		"	<xsl:otherwise>\r\n" + 
		 		"<ee:message>\r\n" + 
		 		"  <ee:set-attributes><xsl:text>attributes ++ {</xsl:text>'<xsl:value-of select=\"@propertyName\"/>' : <xsl:choose>\r\n" + 
		 		"<xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\"@value\"/></xsl:otherwise></xsl:choose>\r\n" + 
		 		"<xsl:text>}</xsl:text>\r\n" + 
		 		"</ee:set-attributes>\r\n" + 
		 		"</ee:message>\r\n" + 
		 		"</xsl:otherwise>\r\n" + 
		 		"</xsl:choose>\r\n" + 
				"</xsl:for-each>" +
				"<ee:variables>"+
				"<xsl:for-each select=\"dw:set-session-variable\">" +
				"    <ee:set-variable>" +
				"			<xsl:attribute name=\"variableName\">" +
				"				<xsl:value-of select=\"@variableName\" />" +
				"			</xsl:attribute>" +
				"	  <xsl:choose>" +
				"		  <xsl:when test=\"@resource != ''\">" +
				"			<xsl:attribute name=\"resource\">" +
				"			  <xsl:choose>	"+
				"				<xsl:when test=\"starts-with(@resource,'classpath:')\">\r\n" + 
				"					<xsl:value-of select=\"substring-after(@resource,'classpath:')\" />" +
				"				</xsl:when>"+
				"				<xsl:otherwise>"+
				"					<xsl:value-of select=\"@resource\" />" +
				"				</xsl:otherwise>"+
				"			  </xsl:choose>	"+
				"			</xsl:attribute>" +
				"		  </xsl:when>" +
				"		  <xsl:otherwise>" +
				"			<xsl:text disable-output-escaping=\"yes\">&lt;![CDATA[</xsl:text>" +
				"			<xsl:value-of select=\".\"/>" +
				"			<xsl:text disable-output-escaping=\"yes\">]]&gt;</xsl:text>" +
				"		  </xsl:otherwise>" +
				"	  </xsl:choose>" +
				"	</ee:set-variable>	" +
				"</xsl:for-each>" +
				"<xsl:for-each select=\"dw:set-variable\">" +
				"	<ee:set-variable>" +
				"			<xsl:attribute name=\"variableName\">" +
				"				<xsl:value-of select=\"@variableName\" />" +
				"			</xsl:attribute>" +
				"	  <xsl:choose>" +
				"		  <xsl:when test=\"@resource != ''\">" +
				"			<xsl:attribute name=\"resource\">" +
				"			  <xsl:choose>	"+
				"				<xsl:when test=\"starts-with(@resource,'classpath:')\">\r\n" + 
				"					<xsl:value-of select=\"substring-after(@resource,'classpath:')\" />" +
				"				</xsl:when>"+
				"				<xsl:otherwise>"+
				"					<xsl:value-of select=\"@resource\" />" +
				"				</xsl:otherwise>"+
				"			  </xsl:choose>	"+
				"			</xsl:attribute>" +
				"		  </xsl:when>" +
				"		  <xsl:otherwise>" +
				"			<xsl:text disable-output-escaping=\"yes\">&lt;![CDATA[</xsl:text>" +
				"			<xsl:value-of select=\".\"/>" +
				"			<xsl:text disable-output-escaping=\"yes\">]]&gt;</xsl:text>" +
				"		  </xsl:otherwise>" +
				"	  </xsl:choose>" +
				"	 </ee:set-variable>" +
				"</xsl:for-each>" +
				
				"</ee:variables>"+
				"</ee:transform>");
		
		transformerOf.put("jms:activemq-connector", "<jms:config>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@doc:description\">\r\n" + 
				"	 <xsl:attribute name=\"doc:description\">\r\n" + 
				"        <xsl:value-of select=\"@doc:description\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"<jms:active-mq-connection>\r\n" + 
				"	<xsl:if test=\"@username != ''\">\r\n" + 
				"		<xsl:attribute name=\"username\">\r\n" + 
				"			<xsl:value-of select=\"@username\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@password != ''\">\r\n" + 
				"		<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@clientId != ''\">\r\n" + 
				"		<xsl:attribute name=\"clientId\">\r\n" + 
				"				<xsl:value-of select=\"@clientId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@connectionFactory-ref != ''\">\r\n" + 
				"		<xsl:attribute name=\"connectionFactory\">\r\n" + 
				"				<xsl:value-of select=\"@connectionFactory-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@specification != ''\">\r\n" + 
				"		<xsl:attribute name=\"specification\">\r\n" + 
				"				<xsl:value-of select=\"@specification\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"<jms:caching-strategy >\r\n" + 
				"<jms:default-caching />\r\n" + 
				"</jms:caching-strategy>\r\n" + 
				"</jms:active-mq-connection>\r\n" + 
				"<jms:consumer-config>\r\n" + 
				"	<xsl:if test=\"@maxRedelivery != ''\">\r\n" + 
				"		<xsl:attribute name=\"maxRedelivery\">\r\n" + 
				"				<xsl:value-of select=\"@maxRedelivery\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@acknowledgementMode != ''\">\r\n" + 
				"		<xsl:attribute name=\"ackMode\">\r\n" + 
				"				<xsl:value-of select=\"@acknowledgementMode\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</jms:consumer-config>\r\n" + 
				"<jms:producer-config>\r\n" + 
				"	<xsl:if test=\"@persistentDelivery != ''\">\r\n" + 
				"		<xsl:attribute name=\"persistentDelivery\">\r\n" + 
				"				<xsl:value-of select=\"@persistentDelivery\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</jms:producer-config>\r\n" + 
				"</jms:config>");
		
		transformerOf.put("jms:outbound-endpoint", "<xsl:choose>\r\n" + 
				"	<xsl:when test=\"contains(@connector-ref, 'WMQ')\">\r\n" + 
				"	<ibm-mq:publish>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@queue != ''\">\r\n" + 
				"		<xsl:attribute name=\"destination\">\r\n" + 
				"			<xsl:value-of select=\"@queue\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"        <xsl:attribute name=\"destinationType\">\r\n" + 
				"			<xsl:text>QUEUE</xsl:text>\r\n" + 
				"		</xsl:attribute>		\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@topic != ''\">\r\n" + 
				"		<xsl:attribute name=\"destination\">\r\n" + 
				"			<xsl:value-of select=\"@topic\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"destinationType\">\r\n" + 
				"			<xsl:text>TOPIC</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"jms:outbound-endpoint/*/@action\">\r\n" + 
				"		<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"			<xsl:value-of select=\"jms:outbound-endpoint/*/@action\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<ibm-mq:message>\r\n" + 
				"	<xsl:if test=\"@mimeType != ''\">\r\n" + 
				"		<xsl:attribute name=\"outboundContentType\">\r\n" + 
				"			<xsl:value-of select=\"@mimeType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@encoding != ''\">\r\n" + 
				"		<xsl:attribute name=\"outboundEncoding\">\r\n" + 
				"			<xsl:value-of select=\"@encoding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</ibm-mq:message>\r\n" + 
				"</ibm-mq:publish>\r\n" + 
				"</xsl:when>\r\n" + 
				"<xsl:otherwise>\r\n" + 
				"<jms:publish>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@queue != ''\">\r\n" + 
				"		<xsl:attribute name=\"destination\">\r\n" + 
				"			<xsl:value-of select=\"@queue\" />\r\n" + 
				"		</xsl:attribute>	\r\n" + 
				"		<xsl:attribute name=\"destinationType\">\r\n" + 
				"			<xsl:text>QUEUE</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@topic != ''\">\r\n" + 
				"		<xsl:attribute name=\"destination\">\r\n" + 
				"			<xsl:value-of select=\"@topic\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"destinationType\">\r\n" + 
				"			<xsl:text>TOPIC</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"jms:outbound-endpoint/*/@action\">\r\n" + 
				"		<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"			<xsl:value-of select=\"jms:outbound-endpoint/*/@action\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<jms:message>\r\n" + 
				"	<xsl:if test=\"@mimeType != ''\">\r\n" + 
				"		<xsl:attribute name=\"outboundContentType\">\r\n" + 
				"			<xsl:value-of select=\"@mimeType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@encoding != ''\">\r\n" + 
				"		<xsl:attribute name=\"outboundEncoding\">\r\n" + 
				"			<xsl:value-of select=\"@encoding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</jms:message>\r\n" + 
				"</jms:publish>\r\n" + 
				"</xsl:otherwise>\r\n" + 
				"</xsl:choose>");
		
		transformerOf.put("jms:inbound-endpoint", "<xsl:choose>\r\n" + 
				"<xsl:when test=\"contains(@connector-ref, 'WMQ')\">\r\n" + 
				"<ibm-mq:listener>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@queue != ''\">\r\n" + 
				"		<xsl:attribute name=\"destination\">\r\n" + 
				"			<xsl:value-of select=\"@queue\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<ibm-mq:consumer-type >\r\n" + 
				"		<ibm-mq:queue-consumer />\r\n" + 
				"		</ibm-mq:consumer-type>	\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@topic != ''\">\r\n" + 
				"		<xsl:attribute name=\"destination\">\r\n" + 
				"			<xsl:value-of select=\"@topic\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<ibm-mq:consumer-type>\r\n" + 
				"		<ibm-mq:topic-consumer/>\r\n" + 
				"		</ibm-mq:consumer-type>	\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@mimeType\">\r\n" + 
				"	 <xsl:attribute name=\"contentType\">\r\n" + 
				"        <xsl:value-of select=\"@mimeType\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@encoding\">\r\n" + 
				"	 <xsl:attribute name=\"encoding\">\r\n" + 
				"        <xsl:value-of select=\"@encoding\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"xa-transaction\">\r\n" + 
				"	 <xsl:attribute name=\"transactionalAction\">\r\n" + 
				"        <xsl:value-of select=\"@action\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"transactionType\">\r\n" + 
				"        <xsl:text>XA</xsl:text>\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='idempotent-redelivery-policy']\">\r\n" + 
				"		<redelivery-policy >\r\n" + 
				"			<xsl:copy-of select=\"*[name()='idempotent-redelivery-policy']/@*\"/>\r\n" + 
				"		</redelivery-policy >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ibm-mq:listener>\r\n" + 
				"</xsl:when>\r\n" + 
				"<xsl:otherwise>\r\n" + 
				"<jms:listener>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@queue != ''\">\r\n" + 
				"		<xsl:attribute name=\"destination\">\r\n" + 
				"			<xsl:value-of select=\"@queue\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<jms:consumer-type >\r\n" + 
				"		<jms:queue-consumer />\r\n" + 
				"		</jms:consumer-type>	\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@topic != ''\">\r\n" + 
				"		<xsl:attribute name=\"destination\">\r\n" + 
				"			<xsl:value-of select=\"@topic\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<jms:consumer-type>\r\n" + 
				"		<jms:topic-consumer/>\r\n" + 
				"		</jms:consumer-type>	\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@mimeType\">\r\n" + 
				"	 <xsl:attribute name=\"inboundContentType\">\r\n" + 
				"        <xsl:value-of select=\"@mimeType\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@encoding\">\r\n" + 
				"	 <xsl:attribute name=\"inboundEncoding\">\r\n" + 
				"        <xsl:value-of select=\"@encoding\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='xa-transaction']\">\r\n" + 
				"	 <xsl:attribute name=\"transactionalAction\">\r\n" + 
				"        <xsl:value-of select=\"*[name()='xa-transaction']/@action\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"transactionType\">\r\n" + 
				"        <xsl:text>XA</xsl:text>\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='idempotent-redelivery-policy']\">\r\n" + 
				"		<redelivery-policy >\r\n" + 
				"			<xsl:copy-of select=\"*[name()='idempotent-redelivery-policy']/@*\"/>\r\n" + 
				"		</redelivery-policy >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<jms:response>\r\n" + 
				"	<xsl:if test=\"@mimeType\">\r\n" + 
				"	 <xsl:attribute name=\"outboundContentType\">\r\n" + 
				"        <xsl:value-of select=\"@mimeType\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@encoding\">\r\n" + 
				"	 <xsl:attribute name=\"outboundEncoding\">\r\n" + 
				"        <xsl:value-of select=\"@encoding\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	</jms:response>\r\n" + 
				"</jms:listener>\r\n" + 
				"</xsl:otherwise>\r\n" + 
				"</xsl:choose>");
		
		transformerOf.put("jms:custom-connector", "<jms:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"		<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@doc:description\">\r\n" + 
				"	 <xsl:attribute name=\"doc:description\">\r\n" + 
				"        <xsl:value-of select=\"@doc:description\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"<jms:generic-connection>\r\n" + 
				"	<xsl:if test=\"@username != ''\">\r\n" + 
				"		<xsl:attribute name=\"username\">\r\n" + 
				"			<xsl:value-of select=\"@username\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@password != ''\">\r\n" + 
				"		<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@clientId != ''\">\r\n" + 
				"		<xsl:attribute name=\"clientId\">\r\n" + 
				"				<xsl:value-of select=\"@clientId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@connectionFactory-ref != ''\">\r\n" + 
				"		<xsl:attribute name=\"connectionFactory\">\r\n" + 
				"				<xsl:value-of select=\"@connectionFactory-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@specification != ''\">\r\n" + 
				"		<xsl:attribute name=\"specification\">\r\n" + 
				"				<xsl:value-of select=\"@specification\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<jms:connection-factory >\r\n" + 
				"		<jms:jndi-connection-factory>\r\n" + 
				"			<xsl:if test=\"@connectionFactoryJndiName\">\r\n" + 
				"				<xsl:attribute name=\"connectionFactoryJndiName\">\r\n" + 
				"					<xsl:value-of select=\"@connectionFactoryJndiName\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<jms:custom-jndi-name-resolver >\r\n" + 
				"				<jms:cached-jndi-name-resolver>\r\n" + 
				"					<xsl:if test=\"@jndiInitialFactory\">\r\n" + 
				"						<xsl:attribute name=\"jndiInitialFactory\">\r\n" + 
				"							<xsl:value-of select=\"@jndiInitialFactory\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"@jndiProviderUrl\">\r\n" + 
				"						<xsl:attribute name=\"jndiProviderUrl\">\r\n" + 
				"							<xsl:value-of select=\"@jndiProviderUrl\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"@jndiProviderProperties-ref\">\r\n" + 
				"						<xsl:attribute name=\"jndiProviderProperties\">\r\n" + 
				"							<xsl:value-of select=\"@jndiProviderProperties-ref\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</jms:cached-jndi-name-resolver>\r\n" + 
				"			</jms:custom-jndi-name-resolver >\r\n" + 
				"		</jms:jndi-connection-factory>\r\n" + 
				"	</jms:connection-factory >\r\n" + 
				"</jms:generic-connection>\r\n" + 
				"<jms:consumer-config>\r\n" + 
				"	<xsl:if test=\"@maxRedelivery != ''\">\r\n" + 
				"		<xsl:attribute name=\"maxRedelivery\">\r\n" + 
				"				<xsl:value-of select=\"@maxRedelivery\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@acknowledgementMode != ''\">\r\n" + 
				"		<xsl:attribute name=\"ackMode\">\r\n" + 
				"				<xsl:value-of select=\"@acknowledgementMode\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</jms:consumer-config>\r\n" + 
				"<jms:producer-config>\r\n" + 
				"	<xsl:if test=\"@persistentDelivery != ''\">\r\n" + 
				"		<xsl:attribute name=\"persistentDelivery\">\r\n" + 
				"				<xsl:value-of select=\"@persistentDelivery\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</jms:producer-config>\r\n" + 
				"</jms:config>");
		
		transformerOf.put("wmq:connector", "<ibm-mq:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"		<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@doc:description\">\r\n" + 
				"	 <xsl:attribute name=\"doc:description\">\r\n" + 
				"        <xsl:value-of select=\"@doc:description\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"<ibm-mq:connection>\r\n" + 
				"	<xsl:if test=\"@username != ''\">\r\n" + 
				"		<xsl:attribute name=\"username\">\r\n" + 
				"			<xsl:value-of select=\"@username\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@password != ''\">\r\n" + 
				"		<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@clientId != ''\">\r\n" + 
				"		<xsl:attribute name=\"clientId\">\r\n" + 
				"				<xsl:value-of select=\"@clientId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@specification != ''\">\r\n" + 
				"		<xsl:attribute name=\"specification\">\r\n" + 
				"				<xsl:value-of select=\"@specification\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@temporaryModel != ''\">\r\n" + 
				"		<xsl:attribute name=\"temporaryModel\">\r\n" + 
				"				<xsl:value-of select=\"@temporaryModel\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<ibm-mq:connection-mode >\r\n" + 
				"		<ibm-mq:client>\r\n" + 
				"			<xsl:if test=\"@hostName\">\r\n" + 
				"				<xsl:attribute name=\"host\">\r\n" + 
				"					<xsl:value-of select=\"@hostName\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"@port\">\r\n" + 
				"				<xsl:attribute name=\"port\">\r\n" + 
				"					<xsl:value-of select=\"@port\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"@queueManager\">\r\n" + 
				"				<xsl:attribute name=\"queueManager\">\r\n" + 
				"					<xsl:value-of select=\"@queueManager\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"@channel\">\r\n" + 
				"				<xsl:attribute name=\"channel\">\r\n" + 
				"					<xsl:value-of select=\"@channel\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</ibm-mq:client>\r\n" + 
				"	</ibm-mq:connection-mode >\r\n" + 
				"	<ibm-mq:handlers-config>\r\n" + 
				"		<xsl:if test=\"@receiveExitHandler\">\r\n" + 
				"			<xsl:attribute name=\"receiveExitHandler\">\r\n" + 
				"				<xsl:value-of select=\"@receiveExitHandler\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@receiveExitHandlerInit\">\r\n" + 
				"			<xsl:attribute name=\"receiveExitHandlerInit\">\r\n" + 
				"				<xsl:value-of select=\"@receiveExitHandlerInit\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@sendExitHandler\">\r\n" + 
				"			<xsl:attribute name=\"sendExitHandler\">\r\n" + 
				"				<xsl:value-of select=\"@sendExitHandler\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@sendExitHandlerInit\">\r\n" + 
				"			<xsl:attribute name=\"sendExitHandlerInit\">\r\n" + 
				"				<xsl:value-of select=\"@sendExitHandlerInit\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@securityExitHandler\">\r\n" + 
				"			<xsl:attribute name=\"securityExitHandler\">\r\n" + 
				"				<xsl:value-of select=\"@securityExitHandler\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@securityExitHandlerInit\">\r\n" + 
				"			<xsl:attribute name=\"securityExitHandlerInit\">\r\n" + 
				"				<xsl:value-of select=\"@securityExitHandlerInit\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</ibm-mq:handlers-config>\r\n" + 
				"</ibm-mq:connection>\r\n" + 
				"<ibm-mq:consumer-config>\r\n" + 
				"	<xsl:if test=\"@acknowledgementMode != ''\">\r\n" + 
				"		<xsl:attribute name=\"ackMode\">\r\n" + 
				"				<xsl:value-of select=\"@acknowledgementMode\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ibm-mq:consumer-config>\r\n" + 
				"</ibm-mq:config>");
		
		transformerOf.put("vm:connector", "<vm:config>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"    <xsl:attribute name=\"name\">\r\n" + 
				"		<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"<xsl:if test=\"vm:queue-profile\">\r\n" + 
				"<vm:queues>\r\n" + 
				"<vm:queue>\r\n" + 
				"        <xsl:attribute name=\"queueName\">\r\n" + 
				"			<xsl:text>myQueue</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"maxOutstandingMessages\">\r\n" + 
				"			<xsl:value-of select=\"vm:queue-profile/@maxOutstandingMessages\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"        <xsl:if test=\"vm:queue-profile/default-persistent-queue-store\">\r\n" + 
				"                <xsl:attribute name=\"queueType\">\r\n" + 
				"					<xsl:text>PERSISTENT</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"        </xsl:if>\r\n" + 
				"</vm:queue>\r\n" + 
				"</vm:queues>\r\n" + 
				"</xsl:if>\r\n" + 
				"</vm:config>");
		
		transformerOf.put("vm:outbound-endpoint", "<xsl:choose>\r\n" + 
				"<xsl:when test=\"@exchange-pattern = 'one-way' or @exchange-pattern = ''\">\r\n" + 
				"<vm:publish>\r\n" + 
				"	<xsl:attribute name=\"queueName\">\r\n" + 
				"		<xsl:value-of select=\"@path\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"		<xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"sendCorrelationId\">\r\n" + 
				"		<xsl:text>ALWAYS</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"xa-transaction/@action\">\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"xa-transaction/@action = 'NOT_SUPPORTED'\">\r\n" + 
				"				<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"					<xsl:text>NOT_SUPPORTED</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"xa-transaction/@action = 'ALWAYS_BEGIN'\">\r\n" + 
				"				<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"					<xsl:text>ALWAYS_BEGIN</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"					<xsl:text>JOIN_IF_POSSIBLE</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</vm:publish>\r\n" + 
				"</xsl:when>\r\n" + 
				"<xsl:otherwise>\r\n" + 
				"<vm:publish-consume>\r\n" + 
				"    <xsl:attribute name=\"queueName\">\r\n" + 
				"		<xsl:value-of select=\"@path\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"		<xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"sendCorrelationId\">\r\n" + 
				"		<xsl:text>ALWAYS</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"xa-transaction/@action\">\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"xa-transaction/@action = 'NOT_SUPPORTED'\">\r\n" + 
				"				<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"					<xsl:text>NOT_SUPPORTED</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"xa-transaction/@action = 'ALWAYS_BEGIN'\">\r\n" + 
				"				<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"					<xsl:text>ALWAYS_BEGIN</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"					<xsl:text>JOIN_IF_POSSIBLE</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</vm:publish-consume>\r\n" + 
				"</xsl:otherwise>\r\n" + 
				"</xsl:choose>");
		
		transformerOf.put("vm:inbound-endpoint", "<vm:listener>\r\n" + 
				"	<xsl:attribute name=\"queueName\">\r\n" + 
				"		<xsl:value-of select=\"@path\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"		<xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"*[name() = 'xa-transaction']\">\r\n" + 
				"		<xsl:attribute name=\"transactionType\">\r\n" + 
				"			<xsl:text>XA</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name() = 'xa-transaction']/@timeout\">\r\n" + 
				"		<xsl:attribute name=\"timeout\">\r\n" + 
				"			<xsl:value-of select=\"*[name() = 'xa-transaction']/@timeout\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"timeoutUnit\">\r\n" + 
				"			<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"*[name() = 'xa-transaction']/@action = 'ALWAYS_BEGIN'\">\r\n" + 
				"		<xsl:attribute name=\"transactionalAction\">\r\n" + 
				"			<xsl:value-of select=\"*[name() = 'xa-transaction']/@action\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:attribute name=\"numberOfConsumers\">\r\n" + 
				"			<xsl:text>4</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"</vm:listener>");

//		transformerOf.put("poll", "<scheduler>\r\n" + 
//				"		<xsl:attribute name=\"doc:name\">\r\n" + 
//				"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
//				"		</xsl:attribute>\r\n" + 
//				" </scheduler>"); 
		
		transformerOf.put("fixed-frequency-scheduler", "<scheduler>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"			<xsl:text>scheduler</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				" <scheduling-strategy>\r\n" + 
				"              <fixed-frequency>\r\n" + 
				"						<xsl:attribute name=\"frequency\">\r\n" + 
				"								<xsl:value-of select=\"@frequency\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					<xsl:if test=\"@startDelay\">\r\n" + 
				"						<xsl:attribute name=\"startDelay\">\r\n" + 
				"								<xsl:value-of select=\"@startDelay\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"@timeUnit\">\r\n" + 
				"						<xsl:attribute name=\"timeUnit\">\r\n" + 
				"								<xsl:value-of select=\"@timeUnit\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>					\r\n" + 
				"			  </fixed-frequency>\r\n" + 
				" </scheduling-strategy>\r\n" + 
				" </scheduler>");
		
		transformerOf.put("schedulers:cron-scheduler", "<scheduler>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"			<xsl:text>scheduler</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				" <scheduling-strategy>\r\n" + 
				"              <cron>\r\n" + 
				"					<xsl:attribute name=\"expression\">\r\n" + 
				"								<xsl:value-of select=\"@expression\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				<xsl:if test=\"@timeZone\">\r\n" + 
				"					<xsl:attribute name=\"timeZone\">\r\n" + 
				"								<xsl:value-of select=\"@timeZone\" />\r\n" + 
				"					</xsl:attribute>					\r\n" + 
				"				</xsl:if>	\r\n" + 
				"			  </cron>\r\n" + 
				"</scheduling-strategy>\r\n" + 
				"</scheduler>");
		
		transformerOf.put("ws:consumer-config", "<wsc:config>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"name\">\r\n" + 
				"                         <xsl:value-of select=\"@name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"<wsc:connection>\r\n" + 
				"                <xsl:attribute name=\"wsdlLocation\">\r\n" + 
				"                        <xsl:value-of select=\"@wsdlLocation\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"service\">\r\n" + 
				"                        <xsl:value-of select=\"@service\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"port\">\r\n" + 
				"                        <xsl:value-of select=\"@port\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"address\">\r\n" + 
				"                        <xsl:value-of select=\"@serviceAddress\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"</wsc:connection>\r\n" + 
				"</wsc:config>");
		
		transformerOf.put("ws:consumer", "<wsc:consume>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" +  
				"                <xsl:attribute name=\"operation\">\r\n" + 
				"                        <xsl:value-of select=\"@operation\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"config-ref\">\r\n" + 
				"                        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"</wsc:consume>");
		
		transformerOf.put("transactional", "<try>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"        <xsl:attribute name=\"transactionalAction\">\r\n" + 
				"                        <xsl:value-of select=\"@action\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"</try>\r\n" + 
				"");
		
		transformerOf.put("ee:object-store-caching-strategy", "<ee:object-store-caching-strategy>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"name\">\r\n" + 
				"                        <xsl:value-of select=\"@name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"				<xsl:if test=\"@keyGenerationExpression\">\r\n" + 
				"					<xsl:attribute name=\"keyGenerationExpression\">\r\n" + 
				"							<xsl:value-of select=\"@keyGenerationExpression\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"@keyGenerator-ref\">\r\n" + 
				"					<xsl:attribute name=\"keyGenerator-ref\">\r\n" + 
				"							<xsl:value-of select=\"@keyGenerator-ref\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"*[name()='managed-store']\">\r\n" + 
				"					<os:private-object-store>\r\n" + 
				"						<xsl:if test=\"*[name()='managed-store']/@storeName\">\r\n" + 
				"							<xsl:attribute name=\"alias\"><xsl:value-of select=\"*[name()='managed-store']/@storeName\"/></xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"                        <xsl:if test=\"*[name()='managed-store']/@maxEntries\">\r\n" + 
				"							<xsl:attribute name=\"maxEntries\">\r\n" + 
				"									<xsl:value-of select=\"*[name()='managed-store']/@maxEntries\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"*[name()='managed-store']/@entryTTL\">\r\n" + 
				"							<xsl:attribute name=\"entryTtl\">\r\n" + 
				"									<xsl:value-of select=\"*[name()='managed-store']/@entryTTL\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"							<xsl:attribute name=\"entryTtlUnit\">MILLISECONDS</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"*[name()='managed-store']/@expirationInterval\">\r\n" + 
				"							<xsl:attribute name=\"expirationInterval\">\r\n" + 
				"									<xsl:value-of select=\"*[name()='managed-store']/@expirationInterval\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"							<xsl:attribute name=\"expirationIntervalUnit\">MILLISECONDS</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"                        \r\n" + 
				"					</os:private-object-store>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"*[name()='in-memory-store']\">\r\n" + 
				"					<os:private-object-store>\r\n" + 
				"						<xsl:if test=\"*[name()='in-memory-store']/@name\">\r\n" + 
				"							<xsl:attribute name=\"alias\"><xsl:value-of select=\"*[name()='in-memory-store']/@name\"/></xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"*[name()='in-memory-store']/@maxEntries\">\r\n" + 
				"							<xsl:attribute name=\"maxEntries\">\r\n" + 
				"									<xsl:value-of select=\"*[name()='in-memory-store']/@maxEntries\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"                        <xsl:if test=\"*[name()='in-memory-store']/@entryTTL\">\r\n" + 
				"							<xsl:attribute name=\"entryTTL\">\r\n" + 
				"                                <xsl:value-of select=\"*[name()='in-memory-store']/@entryTTL\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"							<xsl:attribute name=\"entryTtlUnit\">MILLISECONDS</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"                        <xsl:if test=\"*[name()='in-memory-store']/@expirationInterval\">\r\n" + 
				"							<xsl:attribute name=\"expirationInterval\">\r\n" + 
				"									<xsl:value-of select=\"*[name()='in-memory-store']/@expirationInterval\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"							<xsl:attribute name=\"expirationIntervalUnit\">MILLISECONDS</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"					</os:private-object-store>\r\n" + 
				"				</xsl:if>\r\n" + 
				"</ee:object-store-caching-strategy>");
		
		transformerOf.put("ee:cache", "<ee:cache>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" +  
				"                <xsl:attribute name=\"cachingStrategy-ref\">\r\n" + 
				"                        <xsl:value-of select=\"@cachingStrategy-ref\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"</ee:cache>");
		
		transformerOf.put("until-successful", "<until-successful>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"    <xsl:attribute name=\"maxRetries\">\r\n" + 
				"        <xsl:value-of select=\"@maxRetries\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@millisBetweenRetries\">\r\n" + 
				"		<xsl:attribute name=\"millisBetweenRetries\">\r\n" + 
				"			<xsl:value-of select=\"@millisBetweenRetries\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</until-successful>");
	
		transformerOf.put("oauth2:token-manager-config", "<oauth:token-manager-config>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" +  
				"        <xsl:attribute name=\"name\">\r\n" + 
				"                        <xsl:value-of select=\"@name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"</oauth:token-manager-config>");
		
		transformerOf.put("oauth2:invalidate-oauth-context", "<oauth:invalidate-oauth-context>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" +  
				"        <xsl:attribute name=\"tokenManager\">\r\n" + 
				"                        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"</oauth:invalidate-oauth-context>");
		
//		transformerOf.put("json:validate-schema", "<json:validate-schema schema=\"jsonSchema.json\">\r\n" + 
//				"                <xsl:attribute name=\"doc:name\">\r\n" + 
//				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
//				"                </xsl:attribute>\r\n" +  
//				"<xsl:attribute name=\"schema\">\r\n" + 
//				"                        <xsl:value-of select=\"@schemaLocation\" />\r\n" + 
//				"        </xsl:attribute>\r\n" + 
//				"</json:validate-schema>");
		
		transformerOf.put("dotnet:externalConfig", "<dotnet:dot-net-config>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" +  
				"        <xsl:attribute name=\"name\">\r\n" + 
				"                        <xsl:value-of select=\"@name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"        <dotnet:external-connection>\r\n" + 
				"                <xsl:attribute name=\"scope\">\r\n" + 
				"                                <xsl:value-of select=\"@scope\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"path\">\r\n" + 
				"                                <xsl:value-of select=\"@path\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"        </dotnet:external-connection>\r\n" + 
				"</dotnet:dot-net-config>");
		
		transformerOf.put("dotnet:execute", "<dotnet:execute>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" +  
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"type\">\r\n" + 
				"			<xsl:value-of select=\"substring-before(@methodName, '||')\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"method\">\r\n" + 
				"			<xsl:value-of select=\"substring-after(@methodName, '||')\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"</dotnet:execute>");
		
		transformerOf.put("sftp:connector", "<sftp:config>            \r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"           <xsl:value-of select=\"sftp:connector/@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"sftp:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"sftp:connector/@sizeCheckWaitTime\">\r\n" + 
				"	<xsl:attribute name=\"timeBetweenSizeCheck\">\r\n" + 
				"        <xsl:value-of select=\"sftp:connector/@sizeCheckWaitTime\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<sftp:connection>\r\n" + 
				"		<xsl:if test=\"sftp:connector/@passphrase\">\r\n" + 
				"			<xsl:attribute name=\"passphrase\">\r\n" + 
				"				<xsl:value-of select=\"sftp:connector/@passphrase\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"sftp:connector/@identityFile\">\r\n" + 
				"			<xsl:attribute name=\"identityFile\">\r\n" + 
				"				<xsl:value-of select=\"sftp:connector/@identityFile\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"sftp:outbound-endpoint\">\r\n" + 
				"			<xsl:if test=\"sftp:outbound-endpoint/@port\">\r\n" + 
				"				<xsl:attribute name=\"port\">\r\n" + 
				"					<xsl:value-of select=\"sftp:outbound-endpoint/@port\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:attribute name=\"workingDir\">\r\n" + 
				"				<xsl:value-of select=\"sftp:outbound-endpoint/@path\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"sftp:outbound-endpoint/@host\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"sftp:outbound-endpoint/@user\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"sftp:outbound-endpoint/@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:if test=\"sftp:outbound-endpoint/@responseTimeout\">\r\n" + 
				"			<xsl:attribute name=\"responseTimeout\">\r\n" + 
				"				<xsl:value-of select=\"sftp:outbound-endpoint/@responseTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"responseTimeoutUnit\">\r\n" + 
				"				<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"sftp:outbound-endpoint/@passphrase\">\r\n" + 
				"				<xsl:attribute name=\"passphrase\">\r\n" + 
				"					<xsl:value-of select=\"sftp:outbound-endpoint/@passphrase\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"sftp:outbound-endpoint/@identityFile\">\r\n" + 
				"				<xsl:attribute name=\"identityFile\">\r\n" + 
				"					<xsl:value-of select=\"sftp:outbound-endpoint/@identityFile\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"sftp:inbound-endpoint\">\r\n" + 
				"			<xsl:if test=\"sftp:inbound-endpoint/@port\">\r\n" + 
				"				<xsl:attribute name=\"port\">\r\n" + 
				"					<xsl:value-of select=\"sftp:inbound-endpoint/@port\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:attribute name=\"workingDir\">\r\n" + 
				"				<xsl:value-of select=\"sftp:inbound-endpoint/@path\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"sftp:inbound-endpoint/@host\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"sftp:inbound-endpoint/@user\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"sftp:inbound-endpoint/@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:if test=\"sftp:inbound-endpoint/@responseTimeout\">\r\n" + 
				"			<xsl:attribute name=\"responseTimeout\">\r\n" + 
				"				<xsl:value-of select=\"sftp:inbound-endpoint/@responseTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"responseTimeoutUnit\">\r\n" + 
				"				<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"sftp:inbound-endpoint/@passphrase\">\r\n" + 
				"				<xsl:attribute name=\"passphrase\">\r\n" + 
				"					<xsl:value-of select=\"sftp:inbound-endpoint/@passphrase\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"sftp:inbound-endpoint/@identityFile\">\r\n" + 
				"				<xsl:attribute name=\"identityFile\">\r\n" + 
				"					<xsl:value-of select=\"sftp:inbound-endpoint/@identityFile\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		\r\n" + 
				"		<xsl:if test=\"sftp:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"sftp:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"sftp:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"sftp:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sftp:connection>\r\n" + 
				"</sftp:config>");
		
		transformerOf.put("sftp:outbound-endpoint", "<sftp:write>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"sftp:outbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"		<xsl:value-of select=\"sftp:outbound-endpoint/@connector-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"path\">\r\n" + 
				"		<xsl:choose>\r\n" + 
				"		   <xsl:when test=\"sftp:outbound-endpoint/@outputPattern != ''\">\r\n" + 
				"				<xsl:value-of select=\"concat(sftp:outbound-endpoint/@path, '/', sftp:outbound-endpoint/@outputPattern)\" />\r\n" + 
				"			</xsl:when>			\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:value-of select=\"sftp:outbound-endpoint/@path\"/>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>	\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:if test=\"sftp:outbound-endpoint/@encoding\">\r\n" + 
				"	<xsl:attribute name=\"encoding\">\r\n" + 
				"		<xsl:value-of select=\"sftp:outbound-endpoint/@encoding\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sftp:write>");
		
		transformerOf.put("sftp:inbound-endpoint", "<sftp:listener>\r\n" + 
				"    <xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"sftp:inbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"    <xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"sftp:inbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"    <xsl:attribute name=\"directory\">\r\n" + 
				"        <xsl:value-of select=\"sftp:inbound-endpoint/@path\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"sftp:connector/@sizeCheckWaitTime\">\r\n" + 
				"	<xsl:attribute name=\"timeBetweenSizeCheck\">\r\n" + 
				"        <xsl:value-of select=\"sftp:connector/@sizeCheckWaitTime\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"timeBetweenSizeCheckUnit\">\r\n" + 
				"        <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sftp:inbound-endpoint/@mimeType\">\r\n" + 
				"	<xsl:attribute name=\"outputMimeType\">\r\n" + 
				"        <xsl:value-of select=\"sftp:inbound-endpoint/@mimeType\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sftp:inbound-endpoint/@encoding\">\r\n" + 
				"	<xsl:attribute name=\"outputEncoding\">\r\n" + 
				"        <xsl:value-of select=\"sftp:inbound-endpoint/@encoding\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"    <xsl:if test=\"sftp:inbound-endpoint/@pollingFrequency\">\r\n" + 
				"        <scheduling-strategy >\r\n" + 
				"            <fixed-frequency >\r\n" + 
				"                <xsl:attribute name=\"frequency\">\r\n" + 
				"                    <xsl:value-of select=\"sftp:inbound-endpoint/@pollingFrequency\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"timeUnit\">MILLISECONDS</xsl:attribute>\r\n" + 
				"            </fixed-frequency>\r\n" + 
				"        </scheduling-strategy>\r\n" + 
				"    </xsl:if>\r\n" + 
				"</sftp:listener>");
		
		transformerOf.put("ftp:connector", "<ftp:config>\r\n" + 
				"        <xsl:attribute name=\"name\">\r\n" + 
				"            <xsl:value-of select=\"ftp:connector/@name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"ftp:connector/@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"ftp:connector/@doc:description\">\r\n" + 
				"		<xsl:attribute name=\"doc:description\">\r\n" + 
				"            <xsl:value-of select=\"ftp:connector/@doc:description\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"    <ftp:connection>\r\n" + 
				"                <xsl:if test=\"ftp:outbound-endpoint\">\r\n" + 
				"						<xsl:if test=\"ftp:outbound-endpoint/@path\">\r\n" + 
				"                        <xsl:attribute name=\"workingDir\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:outbound-endpoint/@path\" />\r\n" + 
				"                        </xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"                        <xsl:attribute name=\"host\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:outbound-endpoint/@host\" />\r\n" + 
				"                        </xsl:attribute>\r\n" + 
				"						<xsl:if test=\"ftp:outbound-endpoint/@port\">\r\n" + 
				"							<xsl:attribute name=\"port\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:outbound-endpoint/@port\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:outbound-endpoint/@user\">\r\n" + 
				"							<xsl:attribute name=\"username\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:outbound-endpoint/@user\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:outbound-endpoint/@password\">\r\n" + 
				"							<xsl:attribute name=\"password\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:outbound-endpoint/@password\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:connector/@connectionTimeout\">\r\n" + 
				"							<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:connector/@connectionTimeout\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:attribute name=\"connectionTimeoutUnit\">\r\n" + 
				"                                <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"						<xsl:if test=\"ftp:outbound-endpoint/@passive\">\r\n" + 
				"							<xsl:attribute name=\"passive\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:outbound-endpoint/@passive\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:outbound-endpoint/@binary\">\r\n" + 
				"							<xsl:attribute name=\"transferMode\">\r\n" + 
				"                                <xsl:text>ASCII</xsl:text>\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:outbound-endpoint/@responseTimeout\">\r\n" + 
				"							<xsl:attribute name=\"responseTimeout\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:outbound-endpoint/@responseTimeout\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:outbound-endpoint/@responseTimeout\">\r\n" + 
				"							<xsl:attribute name=\"responseTimeoutUnit\">\r\n" + 
				"                                <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"					</xsl:if>\r\n" + 
				"                <xsl:if test=\"ftp:inbound-endpoint\">\r\n" + 
				"                        <xsl:attribute name=\"workingDir\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:inbound-endpoint/@path\" />\r\n" + 
				"                        </xsl:attribute>\r\n" + 
				"                        <xsl:attribute name=\"host\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:inbound-endpoint/@host\" />\r\n" + 
				"                        </xsl:attribute>\r\n" + 
				"						<xsl:if test=\"ftp:inbound-endpoint/@port\">\r\n" + 
				"							<xsl:attribute name=\"port\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:inbound-endpoint/@port\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"                        <xsl:attribute name=\"username\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:inbound-endpoint/@user\" />\r\n" + 
				"                        </xsl:attribute>\r\n" + 
				"                        <xsl:attribute name=\"password\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:inbound-endpoint/@password\" />\r\n" + 
				"                        </xsl:attribute>\r\n" + 
				"						<xsl:if test=\"ftp:inbound-endpoint/@passive\">\r\n" + 
				"							<xsl:attribute name=\"passive\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:inbound-endpoint/@passive\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:inbound-endpoint/@binary\">\r\n" + 
				"							<xsl:attribute name=\"transferMode\">\r\n" + 
				"                                <xsl:text>ASCII</xsl:text>\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"                </xsl:if>\r\n" + 
				"				<xsl:if test=\"ftp:connector/@connectionTimeout\">\r\n" + 
				"                        <xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:connector/@connectionTimeout\" />\r\n" + 
				"                        </xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"                <xsl:attribute name=\"connectionTimeoutUnit\">\r\n" + 
				"                   <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"				<xsl:if test=\"ftp:inbound-endpoint/@responseTimeout\">\r\n" + 
				"							<xsl:attribute name=\"responseTimeout\">\r\n" + 
				"                                <xsl:value-of select=\"ftp:inbound-endpoint/@responseTimeout\" />\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:inbound-endpoint/@responseTimeout\">\r\n" + 
				"							<xsl:attribute name=\"responseTimeoutUnit\">\r\n" + 
				"                                <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"							</xsl:attribute>\r\n" + 
				"						</xsl:if>\r\n" + 
				"					<xsl:if test=\"ftp:connector/*[name()='reconnect']\">\r\n" + 
				"						<reconnection >\r\n" + 
				"							<xsl:copy-of select=\"ftp:connector/*[name()='reconnect']\"/>\r\n" + 
				"						</reconnection >\r\n" + 
				"					</xsl:if>\r\n" + 
				"						<xsl:if test=\"ftp:connector/*[name()='reconnect-forever']\">\r\n" + 
				"							<reconnection >\r\n" + 
				"								<xsl:copy-of select=\"ftp:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"							</reconnection >\r\n" + 
				"						</xsl:if>\r\n" + 
				"        </ftp:connection>\r\n" + 
				"</ftp:config>");
		
		transformerOf.put("ftp:inbound-endpoint", "<ftp:listener>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"ftp:inbound-endpoint/@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"				<xsl:attribute name=\"config-ref\">\r\n" + 
				"					<xsl:value-of select=\"ftp:inbound-endpoint/@connector-ref\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:attribute name=\"directory\">\r\n" + 
				"					<xsl:value-of select=\"ftp:inbound-endpoint/@path\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:if test=\"ftp:inbound-endpoint/@mimeType\">\r\n" + 
				"						<xsl:attribute name=\"outputMimeType\">\r\n" + 
				"                            <xsl:value-of select=\"ftp:inbound-endpoint/@mimeType\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"ftp:inbound-endpoint/@encoding\">\r\n" + 
				"					<xsl:attribute name=\"outputEncoding\">\r\n" + 
				"                        <xsl:value-of select=\"ftp:inbound-endpoint/@encoding\"/>\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"ftp:connector/@moveToDirectory\">\r\n" + 
				"					<xsl:attribute name=\"moveToDirectory\">\r\n" + 
				"                        <xsl:value-of select=\"ftp:connector/@moveToDirectory\"/>\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"                <xsl:if test=\"ftp:inbound-endpoint/@pollingFrequency\">\r\n" + 
				"                        <scheduling-strategy >\r\n" + 
				"                                <fixed-frequency>\r\n" + 
				"                                                <xsl:attribute name=\"frequency\">\r\n" + 
				"                                                        <xsl:value-of select=\"ftp:inbound-endpoint/@pollingFrequency\" />\r\n" + 
				"                                                </xsl:attribute>\r\n" + 
				"                                                <xsl:attribute name=\"timeUnit\">\r\n" + 
				"													<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
				"												</xsl:attribute>\r\n" + 
				"                                </fixed-frequency>\r\n" + 
				"                        </scheduling-strategy>\r\n" + 
				"                </xsl:if>\r\n" + 
				"				<xsl:if test=\"ftp:inbound-endpoint/*[name()='idempotent-redelivery-policy']\">\r\n" + 
				"						<redelivery-policy >\r\n" + 
				"							<xsl:copy-of select=\"ftp:inbound-endpoint/*[name()='idempotent-redelivery-policy']/@*\"/>\r\n" + 
				"						</redelivery-policy >\r\n" + 
				"				</xsl:if>\r\n" + 
				"</ftp:listener>");
		
		transformerOf.put("ftp:outbound-endpoint", "<ftp:write>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"ftp:outbound-endpoint/@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"				<xsl:attribute name=\"config-ref\">\r\n" + 
				"					<xsl:value-of select=\"ftp:outbound-endpoint/@connector-ref\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:attribute name=\"path\">\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"ftp:outbound-endpoint/@outputPattern != ''\">\r\n" + 
				"						<xsl:value-of select=\"concat(ftp:outbound-endpoint/@path, '/', ftp:outbound-endpoint/@outputPattern)\" />\r\n" + 
				"					</xsl:when>			\r\n" + 
				"				<xsl:otherwise>\r\n" + 
				"					<xsl:value-of select=\"ftp:outbound-endpoint/@path\"/>\r\n" + 
				"				</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"				<xsl:if test=\"ftp:outbound-endpoint/@encoding\">\r\n" + 
				"					<xsl:attribute name=\"encoding\">\r\n" + 
				"                        <xsl:value-of select=\"ftp:outbound-endpoint/@encoding\"/>\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"</ftp:write>");
		
		transformerOf.put("batch:job", "<flow>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<batch:job>\r\n" + 
				"		<xsl:attribute name=\"jobName\">\r\n" + 
				"			<xsl:value-of select=\"concat(@name,'_1')\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@job-instance-id\">\r\n" + 
				"				<xsl:attribute name=\"jobInstanceId\">\r\n" + 
				"					<xsl:value-of select=\"@job-instance-id\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</batch:job>\r\n" + 
				"</flow>");
		
		transformerOf.put("batch:commit", "<batch:aggregator>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" +  
				"	<xsl:attribute name=\"size\">\r\n" + 
				"			<xsl:value-of select=\"@size\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"</batch:aggregator>");
		
		transformerOf.put("catch-exception-strategy", "<on-error-continue>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">On Error Continue</xsl:attribute>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@enableNotifications\">\r\n" + 
				"				<xsl:attribute name=\"enableNotifications\">\r\n" + 
				"					<xsl:value-of select=\"@enableNotifications\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			 </xsl:when>\r\n" + 
				"			 <xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"enableNotifications\">true</xsl:attribute>\r\n" + 
				"			 </xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@logException\">\r\n" + 
				"				<xsl:attribute name=\"logException\">\r\n" + 
				"					<xsl:value-of select=\"@logException\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			 </xsl:when>\r\n" + 
				"			 <xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"logException\">true</xsl:attribute>\r\n" + 
				"			 </xsl:otherwise>	\r\n" + 
				"		</xsl:choose>	 \r\n" + 
				"  <xsl:choose>\r\n" + 
				"    <xsl:when test=\"@when\">\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"contains(@when, 'apikit.exception.BadRequestException')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:BAD_REQUEST</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"contains(@when, 'apikit.exception.MethodNotAllowedException')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:METHOD_NOT_ALLOWED</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"contains(@when, 'apikit.exception.NotFoundException')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:NOT_FOUND</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"contains(@when, 'apikit.exception.NotAcceptableException')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:NOT_ACCEPTABLE</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"contains(@when, 'apikit.exception.UnsupportedMediaTypeException')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:UNSUPPORTED_MEDIA_TYPE</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"when\">\r\n" + 
				"				  <xsl:choose>\r\n" + 
				"					<xsl:when test=\"starts-with(@when,'#[')\">\r\n" + 
				"						<xsl:value-of select=\"@when\" />\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:text>#[</xsl:text><xsl:value-of select=\"@when\" /><xsl:text>]</xsl:text>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				  </xsl:choose>	\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>		\r\n" + 
				"	 </xsl:when>	 \r\n" + 
				"	 <xsl:otherwise>\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"				<xsl:text>ANY</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	 </xsl:otherwise>\r\n" + 
				"  </xsl:choose>\r\n" + 
				"</on-error-continue>");
		
		transformerOf.put("choice-exception-strategy", "<error-handler>\r\n" +
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				" </error-handler>");
		
		transformerOf.put("apikit:mapping-exception-strategy", "<error-handler>\r\n" +
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				" </error-handler>");
		
		transformerOf.put("apikit:mapping", "<on-error-continue>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">On Error Continue</xsl:attribute>\r\n" + 
				"  <xsl:choose>\r\n" + 
				"    <xsl:when test=\"@statusCode\">\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"contains(@statusCode, '400')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:BAD_REQUEST</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"contains(@statusCode, '405')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:METHOD_NOT_ALLOWED</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"contains(@statusCode, '404')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:NOT_FOUND</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"contains(@statusCode, '406')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:NOT_ACCEPTABLE</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:when test=\"contains(@statusCode, '415')\">\r\n" + 
				"				<xsl:attribute name=\"type\">\r\n" + 
				"					<xsl:text>APIKIT:UNSUPPORTED_MEDIA_TYPE</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"when\">\r\n" + 
				"				  	<xsl:text>#[vars.httpStatus == </xsl:text><xsl:value-of select=\"@statusCode\" /><xsl:text>]</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>		\r\n" + 
				"	 </xsl:when>	 \r\n" + 
				"	 <xsl:otherwise>\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"				<xsl:text>ANY</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	 </xsl:otherwise>\r\n" + 
				"  </xsl:choose>\r\n" + 
				"<set-variable doc:name=\"Set HTTP Status\" variableName=\"httpStatus\">\r\n" + 
				"	<xsl:attribute name=\"value\">\r\n" + 
				"		<xsl:value-of select=\"@statusCode\"/>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"</set-variable>"+
				"</on-error-continue>");
		
		transformerOf.put("rollback-exception-strategy", "<on-error-propagate>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">On Error Propagate</xsl:attribute>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@enableNotifications\">\r\n" + 
				"				<xsl:attribute name=\"enableNotifications\">\r\n" + 
				"					<xsl:value-of select=\"@enableNotifications\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			 </xsl:when>\r\n" + 
				"			 <xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"enableNotifications\">true</xsl:attribute>\r\n" + 
				"			 </xsl:otherwise>\r\n" + 
				"		</xsl:choose>	 \r\n" + 
				"		<xsl:choose>\r\n" + 
				"			 <xsl:when test=\"@logException\">\r\n" + 
				"				<xsl:attribute name=\"logException\">\r\n" + 
				"					<xsl:value-of select=\"@logException\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			 </xsl:when>\r\n" + 
				"			 <xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"logException\">true</xsl:attribute>\r\n" + 
				"			 </xsl:otherwise>	\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:attribute name=\"when\">\r\n" + 
				"				<xsl:value-of select=\"@when\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</on-error-propagate>");
		
		transformerOf.put("exception-strategy", "<error-handler>\r\n" + 
				"	<xsl:attribute name=\"ref\">\r\n" + 
				"		<xsl:value-of select=\"@ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				" </error-handler>");
		
		transformerOf.put("munit:test", "<munit:test>\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"description\">\r\n" + 
				"			<xsl:value-of select=\"@description\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<munit:behavior >\r\n" + 
				"		</munit:behavior>\r\n" + 
				"		<munit:execution>\r\n" + 
				"		</munit:execution>\r\n" + 
				"		<munit:validation>\r\n" + 
				"		</munit:validation>\r\n" + 
				"</munit:test>");
		
		transformerOf.put("mock:when", "<munit-tools:mock-when>\r\n" + 
				"	<xsl:attribute name=\"processor\">\r\n" + 
				"			<xsl:value-of select=\"@messageProcessor\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"</munit-tools:mock-when>");
		
		transformerOf.put("mock:with-attributes", "<munit-tools:with-attributes>\r\n" + 
				"  </munit-tools:with-attributes>");
		
		transformerOf.put("mock:then-return", "<munit-tools:then-return>\r\n" + 
				"	<xsl:if test=\"@payload\">\r\n" + 
				"		<munit-tools:payload>\r\n" + 
				"			<xsl:attribute name=\"value\">\r\n" + 
				"				<xsl:value-of select=\"@payload\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</munit-tools:payload>\r\n" + 
				"	</xsl:if>\r\n" + 
				" </munit-tools:then-return>");
		
		transformerOf.put("mock:invocation-properties", "<munit-tools:variables>\r\n" + 
				"    <munit-tools:variable>\r\n" + 
				"		<xsl:attribute name=\"key\">\r\n" + 
				"			<xsl:value-of select=\"mock:invocation-property/@key\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"value\">\r\n" + 
				"			<xsl:value-of select=\"mock:invocation-property/@value\" />\r\n" + 
				"		</xsl:attribute>	\r\n" + 
				"	</munit-tools:variable>\r\n" + 
				"</munit-tools:variables>");
		
		transformerOf.put("mock:inbound-properties", "<munit-tools:inbound-properties>\r\n" + 
				"   <munit-tools:property>\r\n" + 
				"		<xsl:attribute name=\"key\">\r\n" + 
				"			<xsl:value-of select=\"mock:inbound-property/@key\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"value\">\r\n" + 
				"			<xsl:value-of select=\"mock:inbound-property/@value\" />\r\n" + 
				"		</xsl:attribute>	\r\n" + 
				"   </munit-tools:property>\r\n" + 
				"</munit-tools:inbound-properties>");
		
		transformerOf.put("mock:outbound-properties", "<munit-tools:outbound-properties>\r\n" + 
				"   <munit-tools:property>\r\n" + 
				"		<xsl:attribute name=\"key\">\r\n" + 
				"			<xsl:value-of select=\"mock:outbound-property/@key\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"value\">\r\n" + 
				"			<xsl:value-of select=\"mock:outbound-property/@value\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"   </munit-tools:property>\r\n" + 
				"</munit-tools:outbound-properties>");
		
		transformerOf.put("batch:execute", "<flow-ref>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"		<xsl:value-of select=\"@name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"</flow-ref>");
		
		transformerOf.put("http:headers", "<http:headers>\r\n" + 
				"      #[{\r\n" + 
				"        '<xsl:value-of select=\"@headerName\"/>' : '<xsl:value-of select=\"@value\"/>'\r\n" + 
				"      }]\r\n" + 
				"   </http:headers>");
		
		transformerOf.put("http:uri-param", "<http:uri-params>\r\n" + 
				"      #[{ '<xsl:value-of select=\"@paramName\"/>' : \r\n" + 
				"                  <xsl:if test=\"(contains(@value, '#[') and contains(@value, ']'))\">\r\n" + 
				"                        <xsl:variable name=\"myVar\" select=\"substring-after(@value, '#[')\"/>\r\n" + 
				"                        <xsl:value-of select=\"substring-before($myVar, ']')\"/> \r\n" + 
				"                  </xsl:if>         \r\n" + 
				"          }]\r\n" + 
				"    </http:uri-params>");
		
		transformerOf.put("http:query-params", "<http:query-params>\r\n" + 
				"      <xsl:value-of select=\"@expression\"/> \r\n" + 
				"    </http:query-params>");

	/*	transformerOf.put("schedulers:cron-scheduler", "<scheduler>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">Scheduler</xsl:attribute>\r\n" + 
				"	<scheduling-strategy >\r\n" + 
				"		<cron>\r\n" + 
				"			<xsl:attribute name=\"expression\">\r\n" + 
				"				<xsl:value-of select=\"@expression\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</cron>\r\n" + 
				"	</scheduling-strategy>\r\n" + 
				"</scheduler>"); */
		
		transformerOf.put("munit:set", "<munit:set-event>\r\n" + 
				"  <munit:payload>\r\n" + 
				"	<xsl:attribute name=\"value\">\r\n" + 
				"		<xsl:value-of select=\"@payload\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"mediaType\">text/plain</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"encoding\">UTF-8</xsl:attribute>	\r\n" + 
				"   </munit:payload>	\r\n" + 
				"</munit:set-event>");
		
		transformerOf.put("munit:invocation-properties", "<munit:variables>\r\n" + 
				"</munit:variables>");
		
		transformerOf.put("munit:invocation-property", "<munit:variable>\r\n" + 
				"	<xsl:attribute name=\"key\">\r\n" + 
				"		<xsl:value-of select=\"@key\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"value\">\r\n" + 
				"		<xsl:value-of select=\"@value\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"mediaType\">text/plain</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"encoding\">UTF-8</xsl:attribute>\r\n" + 
				"</munit:variable>");
		
		transformerOf.put("mock:verify-call", "<munit-tools:verify-call>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" +  
				"	<xsl:attribute name=\"processor\">\r\n" + 
				"		<xsl:value-of select=\"@messageProcessor\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"</munit-tools:verify-call>");

		transformerOf.put("mock:with-attribute", "<munit-tools:with-attribute>\r\n" + 
				"        <xsl:attribute name=\"attributeName\">\r\n" + 
				"                <xsl:value-of select=\"@name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"        <xsl:attribute name=\"whereValue\">\r\n" + 
				"                <xsl:value-of select=\"@whereValue\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"</munit-tools:with-attribute>");
		
		transformerOf.put("http:header", "<http:headers>\r\n" + 
				"      #[{\r\n" + 
				"        '<xsl:value-of select=\"@headerName\"/>' : '<xsl:value-of select=\"@value\"/>'\r\n" + 
				"      }]\r\n" + 
				"    </http:headers>");
		
		transformerOf.put("db:stored-procedure", "<db:stored-procedure>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\"/>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"		<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"			<db:sql><xsl:value-of select=\"db:parameterized-query\" disable-output-escaping=\"yes\"/></db:sql>\r\n" + 
				"			<db:in-out-parameters >\r\n" + 
				"				<xsl:for-each select=\"db:in-param\">\r\n" + 
				"					<db:in-out-parameter>\r\n" + 
				"						<xsl:attribute name=\"key\">\r\n" + 
				"							<xsl:value-of select=\"@name\"/>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"						<xsl:attribute name=\"value\">\r\n" + 
				"							<xsl:value-of select=\"@value\"/>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</db:in-out-parameter>\r\n" + 
				"				</xsl:for-each>\r\n" + 
				"			</db:in-out-parameters>\r\n" + 
				"			<db:output-parameters >\r\n" + 
				"				<xsl:for-each select=\"db:out-param\">\r\n" + 
				"					<db:output-parameter>\r\n" + 
				"						<xsl:attribute name=\"key\">\r\n" + 
				"							<xsl:value-of select=\"@name\"/>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"						<xsl:attribute name=\"type\">\r\n" + 
				"							<xsl:value-of select=\"@type\"/>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</db:output-parameter>\r\n" + 
				"				</xsl:for-each>\r\n" + 
				"			</db:output-parameters>\r\n" + 
				"</db:stored-procedure>");
		transformerOf.put("http:basic-authentication", "<http:authentication>\r\n" + 
				"    <http:basic-authentication>\r\n" + 
				"		<xsl:attribute name=\"username\">\r\n" + 
				"			<xsl:value-of select=\"@username\"/>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"password\">\r\n" + 
				"			<xsl:value-of select=\"@password\"/>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@preemptive\">\r\n" + 
				"			<xsl:attribute name=\"preemptive\">\r\n" + 
				"				<xsl:value-of select=\"@preemptive\"/>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</http:basic-authentication>\r\n" + 
				"</http:authentication>");
		

		transformerOf.put("http:request", "<http:request>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\"/>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"		    <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	 <xsl:attribute name=\"path\">\r\n" + 
				"			<xsl:value-of select=\"@path\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"method\">\r\n" + 
				"		<xsl:value-of select=\"@method\" />\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	 <xsl:if test=\"@source\">\r\n" + 
				"		 <http:body>\r\n" + 
				"		  <xsl:value-of select=\"@source\" />\r\n" + 
				"		 </http:body>  \r\n" + 
				"    </xsl:if>\r\n" + 
				"		 <xsl:if test=\"http:request-builder/http:header\">\r\n" + 
				"			<http:headers>\r\n" + 
				"			<xsl:text>#[output applicaton/java\r\n" + 
				"				---{\r\n" + 
				"			</xsl:text>\r\n" + 
				"			<xsl:for-each select=\"http:request-builder/http:header\">\r\n" + 
				"				\"<xsl:value-of select=\"@headerName\" />\" :<xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\" /></xsl:when><xsl:when test=\"contains(@value,'#[') and not(starts-with(@value,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\"@value\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\"@value\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"			<xsl:text> }]</xsl:text>\r\n" + 
				"		</http:headers>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:request-builder/http:uri-param\">\r\n" + 
				"		<http:uri-params>\r\n" + 
				"			<xsl:text>#[output applicaton/java\r\n" + 
				"				---{\r\n" + 
				"			</xsl:text>\r\n" + 
				"			<xsl:for-each select=\"http:request-builder/http:uri-param\">\r\n" + 
				"				\"<xsl:value-of select=\"@paramName\" />\" :<xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\" /></xsl:when><xsl:when test=\"contains(@value,'#[') and not(starts-with(@value,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\"@value\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\"@value\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"			<xsl:text> }]</xsl:text>\r\n" + 
				"		</http:uri-params>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:request-builder/http:query-param\">\r\n" + 
				"		<http:query-params>\r\n" + 
				"			<xsl:text>#[output applicaton/java\r\n" + 
				"				---{\r\n" + 
				"			</xsl:text>\r\n" + 
				"			<xsl:for-each select=\"http:request-builder/http:query-param\">\r\n" + 
				"				\"<xsl:value-of select=\"@paramName\" />\" :<xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\" /></xsl:when><xsl:when test=\"contains(@value,'#[') and not(starts-with(@value,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\"@value\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\"@value\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"			<xsl:text> }]</xsl:text>\r\n" + 
				"		</http:query-params>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</http:request>");
		
		transformerOf.put("assert:payload-equals", "<munit-tools:assert-that>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\"/>\r\n" + 
				"	</xsl:attribute>\r\n" +
				"		<xsl:attribute name=\"expression\"><xsl:text>#[payload]</xsl:text></xsl:attribute>\r\n" + 
				"        <xsl:attribute name=\"is\">\r\n" + 
				"<xsl:choose>\r\n" + 
				"	<xsl:when test=\"starts-with(@expectedValue,'#[')\">\r\n" + 
				"		<xsl:text>#[MunitTools::equalTo(</xsl:text>\r\n" + 
				"		<xsl:value-of select=\"@expectedValue\"/>\r\n" + 
				"		<xsl:text>)]</xsl:text>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<xsl:text>\"</xsl:text><xsl:value-of select=\"@expectedValue\"/><xsl:text>\"</xsl:text>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"</xsl:choose>\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"message\">\r\n" + 
				"            <xsl:value-of select=\"@message\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"</munit-tools:assert-that>");
		
		transformerOf.put("munit:assert-null", "<munit-tools:assert-that>\n" +
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"		<xsl:value-of select=\"@doc:name\"/>\r\n" + 
				"	</xsl:attribute>\r\n" +
				"		<xsl:attribute name=\"expression\"><xsl:text>#[payload]</xsl:text></xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"is\">\r\n" + 
				"            <xsl:text>#[MunitTools::nullValue()]</xsl:text>\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"message\">\r\n" + 
				"            <xsl:value-of select=\"@message\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"</munit-tools:assert-that>");
		
		transformerOf.put("munit:assert-payload-equals", "<munit-tools:assert-that>\n" + 
				"		<xsl:attribute name=\"expression\"><xsl:text>#[payload]</xsl:text></xsl:attribute>\r\n" + 
				"        <xsl:attribute name=\"is\">\r\n" + 
				"<xsl:choose>\r\n" + 
				"	<xsl:when test=\"(starts-with(@expectedValue,'#[') and (@expectedValue != '#[]' ))\">\r\n" + 
				"		<xsl:text>#[MunitTools::equalTo(</xsl:text>\r\n" + 
				"		<xsl:value-of select=\"substring(@expectedValue,3,string-length(@expectedValue) - 3)\"/>\r\n" + 
				"		<xsl:text>)]</xsl:text>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:when test=\"@expectedValue = '#[]' \" >\r\n" + 
				"		<xsl:text>#[MunitTools::equalTo('')]</xsl:text>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<xsl:text>\"</xsl:text><xsl:value-of select=\"@expectedValue\"/><xsl:text>\"</xsl:text>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"</xsl:choose>\r\n" + 
				"</xsl:attribute>"+
				"		<xsl:attribute name=\"message\">\r\n" + 
				"            <xsl:value-of select=\"@message\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"        <xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
				"</munit-tools:assert-that>");
		
		transformerOf.put("munit:assert-not-null", "<munit-tools:assert-that>\r\n" + 
				"		<xsl:attribute name=\"expression\"><xsl:text>#[payload]</xsl:text></xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"is\">\r\n" + 
				"            <xsl:text>#[MunitTools::notNullValue()]</xsl:text>\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"message\">\r\n" + 
				"            <xsl:value-of select=\"@message\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"        <xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
				"</munit-tools:assert-that>");
		
		transformerOf.put("munit:assert-not-same", "<munit-tools:assert-that>\r\n" + 
				"        <xsl:attribute name=\"expression\">\r\n" + 
				"                <xsl:value-of select=\"@expectedValue\"/>\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"         <xsl:attribute name=\"is\">\r\n" + 
				"<xsl:choose>\r\n" + 
				"	<xsl:when test=\"starts-with(@actualValue,'#[')\">\r\n" + 
				"		<xsl:text>#[MunitTools::not(equalTo(</xsl:text>\r\n" + 
				"		<xsl:value-of select=\"substring(@actualValue,3,string-length(@actualValue) - 3)\"/>\r\n" + 
				"		<xsl:text>))]</xsl:text>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<xsl:text>\"</xsl:text><xsl:value-of select=\"@actualValue\"/><xsl:text>\"</xsl:text>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"</xsl:choose>\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"message\">\r\n" + 
				"            <xsl:value-of select=\"@message\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"</munit-tools:assert-that>");
		
		transformerOf.put("munit:assert-on-equals", "<munit-tools:assert-that>\r\n" + 
				"        <xsl:attribute name=\"expression\">\r\n" + 
				"                <xsl:value-of select=\"@expectedValue\"/>\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"         <xsl:attribute name=\"is\">\r\n" + 
				"<xsl:choose>\r\n" + 
				"	<xsl:when test=\"starts-with(@actualValue,'#[')\">\r\n" + 
				"		<xsl:text>#[MunitTools::equalTo(</xsl:text>\r\n" + 
				"		<xsl:value-of select=\"substring(@actualValue,3,string-length(@actualValue) - 3)\"/>\r\n" + 
				"		<xsl:text>)]</xsl:text>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<xsl:text>\"</xsl:text><xsl:value-of select=\"@actualValue\"/><xsl:text>\"</xsl:text>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"</xsl:choose>\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"message\">\r\n" + 
				"            <xsl:value-of select=\"@message\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"                <xsl:attribute name=\"doc:name\">\r\n" + 
				"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"                </xsl:attribute>\r\n" + 
				"</munit-tools:assert-that>");
		
		 transformerOf.put("munit:assert-true", "<munit-tools:assert-that>\r\n" + 
		 		"        <xsl:attribute name=\"expression\">\r\n" + 
		 		"                <xsl:value-of select=\"@condition\"/>\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"        <xsl:attribute name=\"is\">\r\n" + 
		 		"        <xsl:text>#[MunitTools::equalTo(true)]</xsl:text>\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"        <xsl:attribute name=\"message\">\r\n" + 
		 		"        <xsl:value-of select=\"@message\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"        <xsl:attribute name=\"doc:name\">\r\n" + 
		 		"                <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"</munit-tools:assert-that>");
		 
		 transformerOf.put("munit:assert-false", "<munit-tools:assert-that>\r\n" + 
		 		"        <xsl:attribute name=\"expression\">\r\n" + 
		 		"                <xsl:value-of select=\"@condition\"/>\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"        <xsl:attribute name=\"is\">\r\n" + 
		 		"        <xsl:text>#[MunitTools::equalTo(false)]</xsl:text>\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"        <xsl:attribute name=\"message\">\r\n" + 
		 		"        <xsl:value-of select=\"@message\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"        <xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</munit-tools:assert-that>");
		 
		 transformerOf.put("mock:spy", "<munit-tools:spy>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"processor\">\r\n" + 
		 		"		<xsl:value-of select=\"@messageProcessor\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"mock:with-attributes\">\r\n" + 
		 		"		<munit-tools:with-attributes>\r\n" + 
		 		"			<munit-tools:with-attribute>\r\n" + 
		 		"				<xsl:attribute name=\"attributeName\">\r\n" + 
		 		"					<xsl:value-of select=\"@name\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"				<xsl:attribute name=\"whereValue\">\r\n" + 
		 		"					<xsl:value-of select=\"@whereValue\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</munit-tools:with-attribute>\r\n" + 
		 		"		</munit-tools:with-attributes>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</munit-tools:spy>");
		 
		 transformerOf.put("mock:assertions-before-call", "<munit-tools:before-call>\r\n" + 
		 		"</munit-tools:before-call>");
		 
		 transformerOf.put("mock:assertions-after-call", "<munit-tools:after-call>\r\n" + 
		 		"</munit-tools:after-call>");
		 
		 transformerOf.put("apikit:config", "<apikit:config>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">Router</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"		<xsl:value-of select=\"@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"raml\">\r\n" + 
		 		"		<xsl:value-of select=\"@raml\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"outboundHeadersMapName\">\r\n" + 
		 		"		<xsl:text>outBoundHeadersMap</xsl:text>\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"httpStatusVarName\">\r\n" + 
		 		"	<xsl:text>httpStatus</xsl:text>\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@keepRamlBaseUri\">\r\n" + 
		 		"	<xsl:attribute name=\"keepRamlBaseUri\">\r\n" + 
		 		"		<xsl:value-of select=\"@keepRamlBaseUri\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"apikit:flow-mapping\">\r\n" + 
		 		"		<apikit:flow-mappings>\r\n" + 
		 		"				<xsl:for-each select=\"apikit:flow-mapping\">\r\n" + 
		 		"					<apikit:flow-mapping>	 \r\n" + 
		 		"						<xsl:choose>		\r\n" + 
		 		"							<xsl:when test=\"contains(@resource, '/' ) or contains(@resource, '{')\">			\r\n" + 
		 		"							  <xsl:attribute name=\"resource\">\r\n" + 
		 		"								<xsl:value-of select=\"translate(translate(translate(@resource,'/', '\\\\'),'{','(' ), '}', ')' )\" />\r\n" + 
		 		"						      </xsl:attribute>\r\n" + 
		 		"							</xsl:when>\r\n" + 
		 		"							<xsl:otherwise>\r\n" + 
		 		"							  <xsl:attribute name=\"resource\">\r\n" + 
		 		"								<xsl:value-of select=\"@resource\" />\r\n" + 
		 		"							  </xsl:attribute>\r\n" + 
		 		"							</xsl:otherwise>\r\n" + 
		 		"						</xsl:choose>\r\n" + 
		 		"						<xsl:attribute name=\"action\">\r\n" + 
		 		"							<xsl:value-of select=\"@action\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						<xsl:if test=\"@content-type\">\r\n" + 
		 		"							<xsl:attribute name=\"content-type\">\r\n" + 
		 		"								<xsl:value-of select=\"@content-type\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:attribute name=\"flow-ref\">\r\n" + 
		 		"							<xsl:value-of select=\"@flow-ref\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						<xsl:choose>		\r\n" + 
		 		"							<xsl:when test=\"contains(@flow-ref, '/' ) or contains(@flow-ref, '{')\">			\r\n" + 
		 		"							  <xsl:attribute name=\"flow-ref\">\r\n" + 
		 		"								<xsl:value-of select=\"translate(translate(translate(@flow-ref,'/', '\\\\'),'{','(' ), '}', ')' )\" />\r\n" + 
		 		"						      </xsl:attribute>\r\n" + 
		 		"							</xsl:when>\r\n" + 
		 		"							<xsl:otherwise>\r\n" + 
		 		"							  <xsl:attribute name=\"flow-ref\">\r\n" + 
		 		"								<xsl:value-of select=\"@flow-ref\" />\r\n" + 
		 		"							  </xsl:attribute>\r\n" + 
		 		"							</xsl:otherwise>\r\n" + 
		 		"						</xsl:choose>\r\n" + 
		 		"					</apikit:flow-mapping>\r\n" + 
		 		"				</xsl:for-each>\r\n" + 
		 		"		</apikit:flow-mappings>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</apikit:config>");
		 
		 transformerOf.put("message-properties-transformer", "<ee:transform>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"		<ee:variables>\r\n" + 
		 		"			\r\n" + 
		 		"		</ee:variables>\r\n" + 
		 		"</ee:transform>");
		 
		 transformerOf.put("add-message-property", "<ee:set-variable> \r\n" + 
		 		"	<xsl:attribute name=\"variableName\">\r\n" + 
		 		"		<xsl:value-of select=\"@key\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:choose>\r\n" + 
		 		"		<xsl:when test=\"starts-with(@value,'#[')\">\r\n" + 
		 		"			<xsl:value-of select=\"@value\" />\r\n" + 
		 		"		</xsl:when>\r\n" + 
		 		"		<xsl:otherwise>\r\n" + 
		 		"			<xsl:text disable-output-escaping=\"yes\">&lt;![CDATA[#[%dw 2.0\r\n" + 
		 		"			output application/java \r\n" + 
		 		"			---\r\n"+
		 		"'</xsl:text>\r\n" + 
		 		"				<xsl:value-of select=\"@value\" />\r\n" + 
		 		"			<xsl:text disable-output-escaping=\"yes\">']]]&gt;</xsl:text>\r\n" + 
		 		"		</xsl:otherwise>\r\n" + 
		 		"	</xsl:choose>	\r\n" + 
		 		"</ee:set-variable>");
		 
		 transformerOf.put("api-platform-gw:api", "<api-gateway:autodiscovery>\r\n" + 
		 		"	<xsl:attribute name=\"apiId\">\r\n" + 
		 		"		<xsl:value-of select=\"@apiName\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"flowRef\">\r\n" + 
		 		"		<xsl:value-of select=\"@flowRef\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" +
		 		"</api-gateway:autodiscovery>");
		 
		 transformerOf.put("secure-property-placeholder:config", "<secure-properties:config>\r\n" + 
		 		"    <xsl:attribute name=\"file\">\r\n" + 
		 		"       <xsl:value-of select=\"@location\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"key\">\r\n" + 
		 		"       <xsl:value-of select=\"@key\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"       <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<secure-properties:encrypt>\r\n" +
		 		"	  <xsl:if test=\"@encryptionAlgorithm\">"+
		 		"		<xsl:attribute name=\"algorithm\">\r\n" + 
		 		"		   <xsl:value-of select=\"@encryptionAlgorithm\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	  </xsl:if>"+
		 		"	  <xsl:if test=\"@encryptionMode\">"+
		 		"		<xsl:attribute name=\"mode\">\r\n" + 
		 		"		   <xsl:value-of select=\"@encryptionMode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	  </xsl:if>"+
		 		"	</secure-properties:encrypt>\r\n" + 
		 		"</secure-properties:config>");
		 
		 transformerOf.put("context:property-placeholder", "<configuration-properties doc:name=\"Configuration properties\" file=\"DEV.yaml\">\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">Configuration properties</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"file\">\r\n" + 
		 		"       <xsl:value-of select=\"@location\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</configuration-properties>");
		 
		 transformerOf.put("echo-component", "<logger>\r\n" + 
		 		"	<xsl:attribute name=\"level\">\r\n" + 
		 		"		<xsl:value-of select=\"INFO\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"message\">\r\n" + 
		 		"		<xsl:text>#[payload]</xsl:text>\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</logger>");
		 
		 transformerOf.put("object-to-json-transformer", "<ee:transform>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<ee:message >\r\n" + 
		 		"		<ee:set-payload ><xsl:text><![CDATA[%dw 2.0\r\n" + 
		 		"output application/json\r\n" + 
		 		"---\r\n" + 
		 		"payload]]></xsl:text>\r\n" + 
		 		"		</ee:set-payload>\r\n" + 
		 		"	</ee:message>\r\n" + 
		 		"</ee:transform>");
		 
		 transformerOf.put("json:object-to-json-transformer", "<ee:transform>\r\n" + 
			 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
			 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
			 		"	</xsl:attribute>\r\n" + 
			 		"	<ee:message >\r\n" + 
			 		"		<ee:set-payload ><xsl:text><![CDATA[%dw 2.0\r\n" + 
			 		"output application/json\r\n" + 
			 		"---\r\n" + 
			 		"payload]]></xsl:text>\r\n" + 
			 		"		</ee:set-payload>\r\n" + 
			 		"	</ee:message>\r\n" + 
			 		"</ee:transform>");
		 
		 transformerOf.put("object-to-string-transformer", "<ee:transform>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<ee:message >\r\n" + 
		 		"		<ee:set-payload ><xsl:text><![CDATA[%dw 2.0\r\n" + 
		 		"output application/json\r\n" + 
		 		"---\r\n" + 
		 		"payload]]></xsl:text>\r\n" + 
		 		"		</ee:set-payload>\r\n" + 
		 		"	</ee:message>\r\n" + 
		 		"</ee:transform>");
		 
		 transformerOf.put("json:json-to-object-transformer", "<ee:transform>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<ee:message >\r\n" + 
		 		"		<ee:set-payload ><xsl:text><![CDATA[%dw 2.0\r\n" + 
		 		"output application/java\r\n" + 
		 		"---\r\n" + 
		 		"payload]]></xsl:text>\r\n" + 
		 		"		</ee:set-payload>\r\n" + 
		 		"	</ee:message>\r\n" + 
		 		"</ee:transform>");
		 
		 transformerOf.put("byte-array-to-object-transformer", "<ee:transform>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<ee:message >\r\n" + 
		 		"		<ee:set-payload ><xsl:text><![CDATA[%dw 2.0\r\n" + 
		 		"output application/java\r\n" + 
		 		"---\r\n" + 
		 		"payload]]></xsl:text>\r\n" + 
		 		"		</ee:set-payload>\r\n" + 
		 		"	</ee:message>\r\n" + 
		 		"</ee:transform>");

		 transformerOf.put("mulexml:xslt-transformer", "<xml-module:xslt-transform>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"    <xml-module:xslt>${file::<xsl:value-of select=\"@xsl-file\" />}</xml-module:xslt>\r\n" + 
		 		"	 <xml-module:context-properties>\r\n" + 
		 		"		  <xsl:text>#[{</xsl:text>\r\n" + 
		 		"		  <xsl:for-each select=\"mulexml:context-property\">\r\n" + 
		 		"			 '<xsl:value-of select=\"@key\"/>'<xsl:text>:</xsl:text><xsl:choose>\r\n" + 
		 		"			 <xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when>\r\n" + 
		 		"			 <xsl:when test=\"contains(@value,'#[') and not(starts-with(@value,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\"@value\"/><xsl:text>]</xsl:text></xsl:when>\r\n" + 
		 		"			<xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\"@value\"/><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose>\r\n" + 
		 		"			<xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
		 		"		  </xsl:for-each>\r\n" + 
		 		"		 <xsl:text>}]</xsl:text>\r\n" + 
		 		"	</xml-module:context-properties>\r\n" + 
		 		"</xml-module:xslt-transform>\r\n");
		 
		 transformerOf.put("mule-xml:xpath-extractor-transformer", "<xml-module:xpath-extract>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"xpath\">\r\n" + 
		 		"	    <xsl:value-of select=\"@expression\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</xml-module:xpath-extract>");
		 
		 transformerOf.put("mulexml:namespace-manager", "<xml-module:namespace-directory>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"	    <xsl:value-of select=\"fullNs\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"    <xml-module:namespaces>\r\n" + 
		 		"		<xsl:for-each select=\"xml-module:namespace\">\r\n" + 
		 		"			<xml-module:namespace>\r\n" + 
		 		"					<xsl:attribute name=\"prefix\">\r\n" + 
		 		"						<xsl:value-of select=\"mulexml:namespace/@prefix\" />						\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:attribute name=\"uri\">\r\n" + 
		 		"						<xsl:value-of select=\"mulexml:namespace/@uri\" />						\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"			</xml-module:namespace>\r\n" + 
		 		"		</xsl:for-each>\r\n" + 
		 		"    </xml-module:namespaces>\r\n" + 
		 		"</xml-module:namespace-directory>");
		 
		 transformerOf.put("mxml:xquery-transformer", "<xml-module:xquery-transform>\r\n" + 
		 		"    <xml-module:xquery>\r\n" + 
		 		"        <xsl:value-of select=\"/mxml:xquery-text\"/>\r\n" + 
		 		"    </xml-module:xquery>\r\n" + 
		 		"    <xml-module:context-properties>\r\n" + 
		 		"		  <xsl:text>#[{</xsl:text>\r\n" + 
		 		"		  <xsl:for-each select=\"mulexml:context-property\">\r\n" + 
		 		"			 '<xsl:value-of select=\"@key\"/>'<xsl:text>:</xsl:text><xsl:choose><xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when>\r\n" + 
		 		"			 <xsl:when test=\"contains(@value,'#[') and not(starts-with(@value,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\"@value\"/><xsl:text>]</xsl:text></xsl:when>\r\n" + 
		 		"			<xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\"@value\"/><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose>	\r\n" + 
		 		"			 <xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
		 		"		  </xsl:for-each>\r\n" + 
		 		"		 <xsl:text>}]</xsl:text>\r\n" + 
		 		"	</xml-module:context-properties>\r\n" + 
		 		"</xml-module:xquery-transform>");
		 
		 transformerOf.put("mxml:schema-validation-filter", "<xml-module:validate-schema>\r\n" + 
		 		"	<xsl:attribute name=\"schemas\">\r\n" + 
		 		"	    <xsl:value-of select=\"@schemaLocations\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</xml-module:validate-schema>");
		 
		 transformerOf.put("set-session-variable", "<set-variable>\r\n" + 
		 		"	<xsl:copy-of select=\"@*\"/>\r\n" + 
		 		"</set-variable>");
		 
		 transformerOf.put("variable-transformer", "<set-variable>\r\n" + 
			 		"	<xsl:copy-of select=\"@*\"/>\r\n" + 
			 		"</set-variable>");
		 
		 transformerOf.put("session-variable-transformer", "<set-variable>\r\n" + 
			 		"	<xsl:copy-of select=\"@*\"/>\r\n" + 
			 		"</set-variable>");
		 
		 transformerOf.put("batch:remove-record-variable", "<set-variable>\r\n" + 
			 		"	<xsl:copy-of select=\"@*\"/>\r\n" + 
			 		"</set-variable>");
		 
		 transformerOf.put("set-property", "<ee:transform >\r\n" + 
		 		"<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			 			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"			 		</xsl:attribute>\r\n" + 
		 		"  <xsl:choose>\r\n" + 
		 		"	<xsl:when test=\"starts-with(@propertyName,'http.status')\">\r\n" + 
		 		" <ee:variables>\r\n" + 
		 		" <ee:set-variable variableName=\"httpStatus\">\r\n" + 
		 		"    <xsl:value-of select=\"@value\" />\r\n" + 
		 		" </ee:set-variable>\r\n" + 
		 		"</ee:variables>\r\n" + 
		 		"        </xsl:when> \r\n" + 
		 		"	<xsl:otherwise>\r\n" + 
		 		"<ee:message>\r\n" + 
		 		"  <ee:set-attributes><xsl:text>attributes ++ {</xsl:text>'<xsl:value-of select=\"@propertyName\"/>' : <xsl:choose>\r\n" + 
		 		"<xsl:when test=\"starts-with(@value,'#[')\"><xsl:value-of select=\"substring(@value,3,string-length(@value) - 3)\"/></xsl:when><xsl:otherwise>'<xsl:value-of select=\"@value\"/>'</xsl:otherwise></xsl:choose>\r\n" + 
		 		"<xsl:text>}</xsl:text>\r\n" + 
		 		"</ee:set-attributes>\r\n" + 
		 		"</ee:message>\r\n" + 
		 		"</xsl:otherwise>\r\n" + 
		 		"</xsl:choose>\r\n" + 
		 		"</ee:transform>");

		 transformerOf.put("spring:import", "<import>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"	<xsl:text>Import</xsl:text>" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"file\">\r\n" + 
		 		"			  <xsl:choose>	"+
				"				<xsl:when test=\"starts-with(@resource,'classpath:')\">\r\n" + 
				"					<xsl:value-of select=\"substring-after(@resource,'classpath:')\" />" +
				"				</xsl:when>"+
				"				<xsl:otherwise>"+
				"					<xsl:value-of select=\"@resource\" />" +
				"				</xsl:otherwise>"+
				"			  </xsl:choose>	"+
		 		"	</xsl:attribute>\r\n" + 
		 		"</import>");
		 
		 transformerOf.put("sqs:config", "<sqs:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"		<xsl:value-of select=\"@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	\r\n" + 
		 		"	<xsl:if test=\"@url\">\r\n" + 
		 		"		<xsl:attribute name=\"defaultQueueUrl\">\r\n" + 
		 		"			<xsl:value-of select=\"@url\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:choose>\r\n" + 
		 		"			<xsl:when test=\"@roleARN\">\r\n" + 
		 		"				<sqs:role-connection>\r\n" + 
		 		"					<xsl:if test=\"@roleARN\">\r\n" + 
		 		"						<xsl:attribute name=\"roleARN\">\r\n" + 
		 		"							<xsl:value-of select=\"@roleARN\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>					\r\n" + 
		 		"					<xsl:if test=\"@defaultQueueName\">\r\n" + 
		 		"						<xsl:attribute name=\"testQueueArn\">\r\n" + 
		 		"							<xsl:value-of select=\"@defaultQueueName\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@region\">\r\n" + 
		 		"						<xsl:attribute name=\"region\">\r\n" + 
		 		"							<xsl:value-of select=\"@region\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:attribute name=\"accessKey\">\r\n" + 
		 		"						<xsl:value-of select=\"@accessKey\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:attribute name=\"secretKey\">\r\n" + 
		 		"						<xsl:value-of select=\"@secretKey\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyDomain\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyDomain\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyDomain\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyWorkstation\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyWorkstation\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyWorkstation\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"						<xsl:attribute name=\"tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"							<xsl:value-of select=\"@tryDefaultAWSCredentialsProviderChain\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"					<reconnection >\r\n" + 
		 		"						<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"					</reconnection >\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"					<reconnection >\r\n" + 
		 		"						<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"					</reconnection >\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</sqs:role-connection>\r\n" + 
		 		"			</xsl:when>\r\n" + 
		 		"			<xsl:otherwise>\r\n" + 
		 		"				<sqs:basic-connection>\r\n" + 
		 		"					<xsl:if test=\"@defaultQueueName\">\r\n" + 
		 		"						<xsl:attribute name=\"testQueueArn\">\r\n" + 
		 		"							<xsl:value-of select=\"@defaultQueueName\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@region\">\r\n" + 
		 		"						<xsl:attribute name=\"region\">\r\n" + 
		 		"							<xsl:value-of select=\"@region\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:attribute name=\"accessKey\">\r\n" + 
		 		"						<xsl:value-of select=\"@accessKey\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:attribute name=\"secretKey\">\r\n" + 
		 		"						<xsl:value-of select=\"@secretKey\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyDomain\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyDomain\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyDomain\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyWorkstation\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyWorkstation\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyWorkstation\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"						<xsl:attribute name=\"tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"							<xsl:value-of select=\"@tryDefaultAWSCredentialsProviderChain\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"					<reconnection >\r\n" + 
		 		"						<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"					</reconnection >\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"					<reconnection >\r\n" + 
		 		"						<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"					</reconnection >\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"			</sqs:basic-connection>\r\n" + 
		 		"		</xsl:otherwise>\r\n" + 
		 		"	</xsl:choose>\r\n" + 
		 		"</sqs:config>");
		 
		 transformerOf.put("sqs:add-permission", "<sqs:add-permission>  \r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		 <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"label\">\r\n" + 
		 		"		<xsl:value-of select=\"@label\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"queueUrl\">\r\n" + 
		 		"		 <xsl:value-of select=\"@queueUrl\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"accountIds\">\r\n" + 
		 		"		<xsl:value-of select=\"sqs:account-ids/@ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"actions\">\r\n" + 
		 		"		<xsl:value-of select=\"sqs:actions/@ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</sqs:add-permission>");
		 
		 transformerOf.put("sqs:get-queue-attributes", "<sqs:get-queue-attributes >\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		 <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sqs:attribute-names\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeNames\">\r\n" + 
		 		"			<xsl:value-of select=\"sqs:attributeNames/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>		\r\n" + 
		 		"</sqs:get-queue-attributes>");
		 
		 transformerOf.put("sqs:delete-message-batch", "<sqs:delete-message-batch >\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		 <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sqs:receipt-handles/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"entries\">\r\n" + 
		 		"			<xsl:value-of select=\"sqs:receipt-handles/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sqs:delete-message-batch>");
		 
		 transformerOf.put("sqs:send-message", "<sqs:send-message>		\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		 <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"queueUrl\">\r\n" + 
		 		"		 <xsl:value-of select=\"@queueUrl\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<sqs:message>\r\n" + 
		 		"		<xsl:text>#[output applicaton/java\r\n" + 
		 		"				---{ </xsl:text>\r\n" + 
		 		"						 <xsl:for-each select=\"sqs:message/@*\">\r\n" + 
		 		"				\"<xsl:value-of select=\"name()\" />\" : <xsl:value-of select=\".\"/>\r\n" + 
		 		"					 <xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
		 		"					 </xsl:for-each>\r\n" + 
		 		"				<xsl:text>}]</xsl:text>\r\n" + 
		 		"	</sqs:message>\r\n" + 
		 		"</sqs:send-message>");
		 
		 transformerOf.put("sqs:send-message-batch", "<sqs:send-message-batch>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"		 <xsl:value-of select=\"@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		 <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"queueUrl\">\r\n" + 
		 		"		 <xsl:value-of select=\"@queueUrl\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<sqs:messages>\r\n" + 
		 		"		#[output applicaton/java\r\n" + 
		 		"				---{ </xsl:text>\r\n" + 
		 		"						 <xsl:for-each select=\"sqs:messages/sqs:message/@*\">\r\n" + 
		 		"				\"<xsl:value-of select=\"name()\" />\" : <xsl:value-of select=\".\"/>\r\n" + 
		 		"					 <xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
		 		"					 </xsl:for-each>\r\n" + 
		 		"				<xsl:text >	}]\r\n" + 
		 		"	</sqs:messages>\r\n" + 
		 		"</sqs:send-message-batch>");
		 
		 
		 transformerOf.put("anypoint-mq:config", "<anypoint-mq:default-subscriber-config pollingTime=\"10000\" acknowledgementTimeout=\"1\">\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"anypoint-mq:config/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"			<xsl:value-of select=\"anypoint-mq:config/@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"anypoint-mq:config/@pollingTime\">\r\n" + 
		 		"		<xsl:attribute name=\"pollingTime\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:config/@pollingTime\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"anypoint-mq:config/@acknowledgementTimeout\">\r\n" + 
		 		"		<xsl:attribute name=\"acknowledgementTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:config/@acknowledgementTimeout\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"anypoint-mq:subscriber/@acknowledgementTimeout\">\r\n" + 
		 		"		<xsl:attribute name=\"acknowledgementTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:subscriber/@acknowledgementTimeout\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"anypoint-mq:config/@maxRedelivery\">\r\n" + 
		 		"		<xsl:attribute name=\"maxRedelivery\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:config/@maxRedelivery\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"anypoint-mq:config/@acknowledgementMode\">\r\n" + 
		 		"		<xsl:attribute name=\"acknowledgementMode\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:config/@acknowledgementMode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"anypoint-mq:subscriber/@acknowledgementMode\">\r\n" + 
		 		"		<xsl:attribute name=\"acknowledgementMode\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:subscriber/@acknowledgementMode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	\r\n" + 
		 		"	<xsl:if test=\"anypoint-mq:config/anypoint-mq:prefetch\">\r\n" + 
		 		"	   <xsl:if test=\"anypoint-mq:config/anypoint-mq:prefetch/@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"fetchSize\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:config/anypoint-mq:prefetch/@fetchSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	   </xsl:if>\r\n" + 
		 		"	   <xsl:if test=\"anypoint-mq:config/anypoint-mq:prefetch/@fetchTimeout\">\r\n" + 
		 		"		<xsl:attribute name=\"fetchTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:config/anypoint-mq:prefetch/@fetchTimeout\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	   </xsl:if>\r\n" + 
		 		"	   <xsl:if test=\"anypoint-mq:config/anypoint-mq:prefetch/@frequency\">\r\n" + 
		 		"		<xsl:attribute name=\"frequency\">\r\n" + 
		 		"				<xsl:value-of select=\"anypoint-mq:config/anypoint-mq:prefetch/@frequency\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	   </xsl:if>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"tls:context\">\r\n" + 
		 		"		<xsl:copy-of select=\"tls:context\"/>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"		<anypoint-mq:connection>\r\n" + 
		 		"			<xsl:if test=\"anypoint-mq:config/anypoint-mq:provider/@url\">\r\n" + 
		 		"				<xsl:attribute name=\"url\">\r\n" + 
		 		"						<xsl:value-of select=\"anypoint-mq:config/anypoint-mq:provider/@url\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"anypoint-mq:config/anypoint-mq:provider/@clientId\">\r\n" + 
		 		"				<xsl:attribute name=\"clientId\">\r\n" + 
		 		"						<xsl:value-of select=\"anypoint-mq:config/anypoint-mq:provider/@clientId\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"anypoint-mq:config/anypoint-mq:provider/@clientSecret\">\r\n" + 
		 		"				<xsl:attribute name=\"clientSecret\">\r\n" + 
		 		"						<xsl:value-of select=\"anypoint-mq:config/anypoint-mq:provider/@clientSecret\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>	\r\n" + 
		 		"			<xsl:if test=\"anypoint-mq:config/@tlsContext-ref\">\r\n" + 
		 		"				<xsl:attribute name=\"tlsContext\">\r\n" + 
		 		"						<xsl:value-of select=\"anypoint-mq:config/@tlsContext-ref\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"anypoint-mq:config/http:proxy\" >\r\n" + 
		 		"			<anypoint-mq:proxy-config>\r\n" + 
		 		"				<xsl:if test=\"anypoint-mq:config/http:proxy/@host\">\r\n" + 
		 		"					<xsl:attribute name=\"host\">\r\n" + 
		 		"							<xsl:value-of select=\"anypoint-mq:config/http:proxy/@host\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"anypoint-mq:config/http:proxy/@port\">\r\n" + 
		 		"					<xsl:attribute name=\"port\">\r\n" + 
		 		"							<xsl:value-of select=\"anypoint-mq:config/http:proxy/@port\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"anypoint-mq:config/http:proxy/@username\">\r\n" + 
		 		"					<xsl:attribute name=\"username\">\r\n" + 
		 		"							<xsl:value-of select=\"anypoint-mq:config/http:proxy/@username\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"anypoint-mq:config/http:proxy/@password\">\r\n" + 
		 		"					<xsl:attribute name=\"password\">\r\n" + 
		 		"							<xsl:value-of select=\"anypoint-mq:config/http:proxy/@password\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"			</anypoint-mq:proxy-config>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</anypoint-mq:connection>\r\n" + 
		 		"</anypoint-mq:default-subscriber-config>");
		 
		 transformerOf.put("anypoint-mq:subscriber", "<anypoint-mq:subscriber>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"anypoint-mq:subscriber/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"anypoint-mq:subscriber/@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"destination\">\r\n" + 
		 		"			<xsl:value-of select=\"anypoint-mq:subscriber/@destination\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</anypoint-mq:subscriber>");
		 
		 transformerOf.put("anypoint-mq:publish", "<anypoint-mq:publish>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"         <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"                <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"destination\">\r\n" + 
		 		"                <xsl:value-of select=\"@destination\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"<anypoint-mq:body>#[payload]</anypoint-mq:body>	\r\n" + 
		 		"	\r\n" + 
		 		"		<anypoint-mq:properties>\r\n" + 
		 		"		 <xsl:for-each select=\"anypoint-mq:properties/anypoint-mq:property\">\r\n" + 
		 		"		   <anypoint-mq:property>\r\n" + 
		 		"				<xsl:attribute name=\"key\">\r\n" + 
		 		"						   <xsl:value-of select=\"@propertyName\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"				\r\n" + 
		 		"				<xsl:attribute name=\"value\">\r\n" + 
		 		"						   <xsl:value-of select=\"@value\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</anypoint-mq:property>\r\n" + 
		 		"		 </xsl:for-each>\r\n" + 
		 		"		</anypoint-mq:properties>\r\n" + 
		 		"</anypoint-mq:publish>");
		 
		 transformerOf.put("anypoint-mq:consume", "<anypoint-mq:consume>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"         <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"                <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"destination\">\r\n" + 
		 		"                <xsl:value-of select=\"@destination\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	\r\n" + 
		 		"	<xsl:attribute name=\"pollingTime\">\r\n" + 
		 		"                <xsl:value-of select=\"@pollingTime\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	\r\n" + 
		 		"	<xsl:attribute name=\"acknowledgementTimeout\">\r\n" + 
		 		"                <xsl:value-of select=\"@acknowledgementTimeout\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@acknowledgementMode\">\r\n" + 
		 		"		<xsl:attribute name=\"acknowledgementMode\">\r\n" + 
		 		"				<xsl:if test=\"@acknowledgementMode == 'NONE'\">\r\n" + 
		 		"					<xsl:text>IMMEDIATE</xsl:text>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</anypoint-mq:consume>");
		 
		 transformerOf.put("anypoint-mq:ack", "<anypoint-mq:ack>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"         <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"                <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"messageContext\">\r\n" + 
		 		"                <xsl:text>#[attributes]</xsl:text>\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</anypoint-mq:ack>");
		 
		 transformerOf.put("anypoint-mq:nack", "<anypoint-mq:nack>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"         <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"                <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"messageContext\">\r\n" + 
		 		"                <xsl:text>#[attributes]</xsl:text>\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</anypoint-mq:nack>");
		 
		 transformerOf.put("s3:config","<s3:config>\r\n" + 
		 		"		<xsl:attribute name=\"name\">\r\n" + 
		 		"			<xsl:value-of select=\"@name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@doc:description\">\r\n" + 
		 		"			<xsl:attribute name=\"doc:description\">\r\n" + 
		 		"				<xsl:value-of select=\"@doc:description\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:choose>\r\n" + 
		 		"			<xsl:when test=\"@roleARN\">\r\n" + 
		 		"				<s3:role-connection>\r\n" + 
		 		"					<xsl:if test=\"@roleARN\">\r\n" + 
		 		"						<xsl:attribute name=\"roleARN\">\r\n" + 
		 		"							<xsl:value-of select=\"@roleARN\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:attribute name=\"accessKey\">\r\n" + 
		 		"						<xsl:value-of select=\"@accessKey\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:attribute name=\"secretKey\">\r\n" + 
		 		"						<xsl:value-of select=\"@secretKey\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyDomain\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyDomain\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyDomain\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyWorkstation\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyWorkstation\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyWorkstation\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"						<xsl:attribute name=\"tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"							<xsl:value-of select=\"@tryDefaultAWSCredentialsProviderChain\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"					<reconnection >\r\n" + 
		 		"						<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"					</reconnection >\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"					<reconnection >\r\n" + 
		 		"						<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"					</reconnection >\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</s3:role-connection>\r\n" + 
		 		"			</xsl:when>\r\n" + 
		 		"			<xsl:otherwise>\r\n" + 
		 		"				<s3:basic-connection>\r\n" + 
		 		"					<xsl:attribute name=\"accessKey\">\r\n" + 
		 		"						<xsl:value-of select=\"@accessKey\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:attribute name=\"secretKey\">\r\n" + 
		 		"						<xsl:value-of select=\"@secretKey\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyDomain\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyDomain\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyDomain\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@proxyWorkstation\">\r\n" + 
		 		"						<xsl:attribute name=\"proxyWorkstation\">\r\n" + 
		 		"							<xsl:value-of select=\"@proxyWorkstation\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"						<xsl:attribute name=\"tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"							<xsl:value-of select=\"@tryDefaultAWSCredentialsProviderChain\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"@roleARN\">\r\n" + 
		 		"						<xsl:attribute name=\"roleARN\">\r\n" + 
		 		"							<xsl:value-of select=\"@roleARN\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"					<reconnection >\r\n" + 
		 		"						<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"					</reconnection >\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"					<reconnection >\r\n" + 
		 		"						<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"					</reconnection >\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"			</s3:basic-connection>\r\n" + 
		 		"		</xsl:otherwise>\r\n" + 
		 		"	</xsl:choose>\r\n" + 
		 		"</s3:config>");
		 
		 transformerOf.put("s3:complete-multipart-upload", "<s3:complete-multipart-upload>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"uploadId\">\r\n" + 
		 		"			<xsl:value-of select=\"@uploadId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"s3:part-e-tags/@ref\">\r\n" + 
		 		"					<s3:part-e-tags >\r\n" + 
		 		"						<xsl:value-of select=\"s3:part-e-tags/@ref\" />\r\n" + 
		 		"					</s3:part-e-tags >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"    </s3:complete-multipart-upload>");
		 
		 transformerOf.put("s3:create-object", "<s3:create-object>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@bucketName\">\r\n" + 
		 		"			<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"				<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@key\">\r\n" + 
		 		"			<xsl:attribute name=\"key\">\r\n" + 
		 		"				<xsl:value-of select=\"@key\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@acl\">\r\n" + 
		 		"			<xsl:attribute name=\"acl\">\r\n" + 
		 		"				<xsl:value-of select=\"@acl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@kmsMasterKey\">\r\n" + 
		 		"			<xsl:attribute name=\"kmsMasterKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@kmsMasterKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@contentLength\">\r\n" + 
		 		"			<xsl:attribute name=\"contentLength\">\r\n" + 
		 		"				<xsl:value-of select=\"@contentLength\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@contentType\">\r\n" + 
		 		"			<xsl:attribute name=\"contentType\">\r\n" + 
		 		"				<xsl:value-of select=\"@contentType\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@contentMd5\">\r\n" + 
		 		"			<xsl:attribute name=\"contentMD5\">\r\n" + 
		 		"				<xsl:value-of select=\"@contentMd5\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@contentDisposition\">\r\n" + 
		 		"			<xsl:attribute name=\"contentDisposition\">\r\n" + 
		 		"				<xsl:value-of select=\"@contentDisposition\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@storageClass\">\r\n" + 
		 		"			<xsl:attribute name=\"storageClass\">\r\n" + 
		 		"				<xsl:value-of select=\"@storageClass\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</s3:create-object>");
		 
		 transformerOf.put("s3:delete-bucket", "<s3:delete-bucket>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@force\">\r\n" + 
		 		"				<xsl:attribute name=\"force\">\r\n" + 
		 		"					<xsl:value-of select=\"@force\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"    </s3:delete-bucket>");
		 
		 transformerOf.put("s3:delete-objects", "<s3:delete-objects>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"s3:keys/@ref\">\r\n" + 
		 		"				<xsl:attribute name=\"keys\">\r\n" + 
		 		"					<xsl:value-of select=\"s3:keys/@ref\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</s3:delete-objects>");
		 
		 transformerOf.put("s3:copy-object","<s3:copy-object>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@sourceBucketName\">\r\n" + 
		 		"		<xsl:attribute name=\"sourceBucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@sourceBucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sourceKey\">\r\n" + 
		 		"				<xsl:attribute name=\"sourceKey\">\r\n" + 
		 		"					<xsl:value-of select=\"@sourceKey\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sourceVersionId\">\r\n" + 
		 		"				<xsl:attribute name=\"sourceVersionId\">\r\n" + 
		 		"					<xsl:value-of select=\"@sourceVersionId\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@destinationBucketName\">\r\n" + 
		 		"				<xsl:attribute name=\"destinationBucketName\">\r\n" + 
		 		"					<xsl:value-of select=\"@destinationBucketName\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@destinationKey\">\r\n" + 
		 		"				<xsl:attribute name=\"destinationKey\">\r\n" + 
		 		"					<xsl:value-of select=\"@destinationKey\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@modifiedSince\">\r\n" + 
		 		"				<xsl:attribute name=\"modifiedSince\">\r\n" + 
		 		"					<xsl:value-of select=\"@modifiedSince\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@unmodifiedSince\">\r\n" + 
		 		"				<xsl:attribute name=\"unmodifiedSince\">\r\n" + 
		 		"					<xsl:value-of select=\"@unmodifiedSince\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@encryption\">\r\n" + 
		 		"				<xsl:attribute name=\"encryption\">\r\n" + 
		 		"					<xsl:value-of select=\"@encryption\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@contentType\">\r\n" + 
		 		"				<xsl:attribute name=\"contentType\">\r\n" + 
		 		"					<xsl:value-of select=\"@contentType\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"s3:copy-object/s3:destination-user-metadata/@ref\">\r\n" + 
		 		"				<xsl:attribute name=\"destinationUserMetadata\">\r\n" + 
		 		"					<xsl:value-of select=\"s3:copy-object/s3:destination-user-metadata/@ref\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@destinationAcl\">\r\n" + 
		 		"				<xsl:attribute name=\"destinationAcl\">\r\n" + 
		 		"					<xsl:value-of select=\"@destinationAcl\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@destinationStorageClass\">\r\n" + 
		 		"				<xsl:attribute name=\"destinationStorageClass\">\r\n" + 
		 		"					<xsl:value-of select=\"@destinationStorageClass\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"    </s3:copy-object>");
		 
		 transformerOf.put("s3:initiate-multipart-upload", "<s3:initiate-multipart-upload>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@key\">\r\n" + 
		 		"				<xsl:attribute name=\"key\">\r\n" + 
		 		"					<xsl:value-of select=\"@key\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@acl\">\r\n" + 
		 		"				<xsl:attribute name=\"acl\">\r\n" + 
		 		"					<xsl:value-of select=\"@acl\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@redirectLocation\">\r\n" + 
		 		"				<xsl:attribute name=\"redirectLocation\">\r\n" + 
		 		"					<xsl:value-of select=\"@redirectLocation\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"s3:initiate-multipart-upload/s3:object-metadata/s3:user-metadata/@ref\">\r\n" + 
		 		"				<xsl:attribute name=\"objectMetadata\">\r\n" + 
		 		"					<xsl:value-of select=\"s3:initiate-multipart-upload/s3:object-metadata/s3:user-metadata/@ref\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</s3:initiate-multipart-upload>");
		 
		 transformerOf.put("s3:set-bucket-cors-configuration", "<s3:set-bucket-cors-configuration>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"s3:cross-origin-configuration-rules/@ref\">\r\n" + 
		 		"				<s3:rules >\r\n" + 
		 		"					<xsl:value-of select=\"s3:cross-origin-configuration-rules/@ref\"/>\r\n" + 
		 		"				</s3:rules >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-bucket-cors-configuration>");
		 
		 transformerOf.put("s3:set-bucket-lifecycle-configuration", "<s3:set-bucket-lifecycle-configuration>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"s3:lifecycle-configuration-rules/@ref\">\r\n" + 
		 		"				<s3:lifecycle-configuration-rules >\r\n" + 
		 		"					<xsl:value-of select=\"s3:lifecycle-configuration-rules/@ref\"/>\r\n" + 
		 		"				</s3:lifecycle-configuration-rules >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-bucket-lifecycle-configuration>");
		 
		 transformerOf.put("s3:set-bucket-notification-configuration", "<s3:set-bucket-notification-configuration>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"s3:topic-configurations/@ref\">\r\n" + 
		 		"				<s3:topic-configurations >\r\n" + 
		 		"					<xsl:value-of select=\"s3:topic-configurations/@ref\"/>\r\n" + 
		 		"				</s3:topic-configurations >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-bucket-notification-configuration>");
		 
		 transformerOf.put("s3:set-bucket-policy", "<s3:set-bucket-policy>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@policyText\">\r\n" + 
		 		"				<s3:policy-text >\r\n" + 
		 		"					<xsl:value-of select=\"@policyText\"/>\r\n" + 
		 		"				</s3:policy-text>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-bucket-policy>");
		 
		 transformerOf.put("s3:set-bucket-tagging-configuration", "<s3:set-bucket-tagging-configuration>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"s3:tag-sets/@ref\">\r\n" + 
		 		"				<s3:tag-sets >\r\n" + 
		 		"					<xsl:value-of select=\"s3:tag-sets/@ref\"/>\r\n" + 
		 		"				</s3:tag-sets>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-bucket-tagging-configuration>");
		 
		 transformerOf.put("s3:set-bucket-versioning-configuration", "<s3:set-bucket-versioning-configuration>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@status\">\r\n" + 
		 		"				<s3:versioning-status >\r\n" + 
		 		"					<xsl:value-of select=\"@status\" />\r\n" + 
		 		"				</s3:versioning-status >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-bucket-versioning-configuration>");
		 
		 transformerOf.put("s3:set-bucket-website-configuration", "<s3:set-bucket-website-configuration>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"s3:bucket-website-configuration/@ref\">\r\n" + 
		 		"				<s3:bucket-website-configuration >\r\n" + 
		 		"					<xsl:value-of select=\"s3:bucket-website-configuration/@ref\" />\r\n" + 
		 		"				</s3:bucket-website-configuration>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-bucket-website-configuration>");
		 
		 transformerOf.put("s3:set-object-acl", "<s3:set-object-acl>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"versionId\">\r\n" + 
		 		"			<xsl:value-of select=\"@versionId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@storageClass\">\r\n" + 
		 		"				<xsl:attribute name=\"storageClass\">\r\n" + 
		 		"					'<xsl:value-of select=\"@storageClass\" />'\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-object-acl>");
		 
		 transformerOf.put("s3:set-object-storage-class", "<s3:set-object-storage-class>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@bucketName\">\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@storageClass\">\r\n" + 
		 		"			<s3:storage-class >\r\n" + 
		 		"				<xsl:value-of select=\"@storageClass\" />\r\n" + 
		 		"			</s3:storage-class >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:set-object-storage-class>");
		 
		 transformerOf.put("s3:upload-part", "<s3:upload-part>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@bucketName\">\r\n" + 
		 		"		<xsl:attribute name=\"bucketName\">\r\n" + 
		 		"			<xsl:value-of select=\"@bucketName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@uploadId\">\r\n" + 
		 		"		<xsl:attribute name=\"uploadId\">\r\n" + 
		 		"			<xsl:value-of select=\"@uploadId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@partNumber\">\r\n" + 
		 		"		<xsl:attribute name=\"partNumber\">\r\n" + 
		 		"			<xsl:value-of select=\"@partNumber\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@partSize\">\r\n" + 
		 		"		<xsl:attribute name=\"partSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@partSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@md5Digest\">\r\n" + 
		 		"		<xsl:attribute name=\"md5Digest\">\r\n" + 
		 		"			<xsl:value-of select=\"@md5Digest\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@fileOffset\">\r\n" + 
		 		"		<xsl:attribute name=\"fileOffset\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileOffset\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@isLastPart\">\r\n" + 
		 		"		<xsl:attribute name=\"isLastPart\">\r\n" + 
		 		"			<xsl:value-of select=\"@isLastPart\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@content-ref\">\r\n" + 
		 		"			<s3:content >\r\n" + 
		 		"				<xsl:value-of select=\"@content-ref\" />\r\n" + 
		 		"			</s3:content >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:upload-part>");
		 
		 transformerOf.put("s3:upload-part-copy", "<s3:upload-part-copy>\r\n" + 
		 		"		<xsl:copy-of select=\"@*\"/> \r\n" + 
		 		"		<xsl:if test=\"s3:matching-e-tag-constraints/@ref\">\r\n" + 
		 		"				<xsl:attribute name=\"matchingETagConstraints\">\r\n" + 
		 		"					<xsl:value-of select=\"s3:matching-e-tag-constraints/@ref\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</s3:upload-part-copy>");
		 
		 transformerOf.put("cloudhub:list-notifications", "<cloudhub:list-notifications>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@domain\">\r\n" + 
		 		"		<xsl:attribute name=\"domain\">\r\n" + 
		 		"			<xsl:value-of select=\"@domain\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:choose>\r\n" + 
		 		"		<xsl:when test=\"@status\">\r\n" + 
		 		"		<xsl:attribute name=\"status\">\r\n" + 
		 		"			<xsl:value-of select=\"@status\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:when>\r\n" + 
		 		"		<xsl:otherwise>\r\n" + 
		 		"		<xsl:attribute name=\"status\">\r\n" + 
		 		"			<xsl:text>READ</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:otherwise>\r\n" + 
		 		"		</xsl:choose>\r\n" + 
		 		"</cloudhub:list-notifications>");
		 
		 transformerOf.put("cloudhub:create-notification", "<cloudhub:create-notification>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@domain\">\r\n" + 
		 		"		<xsl:attribute name=\"domain\">\r\n" + 
		 		"			<xsl:value-of select=\"@domain\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@priority\">\r\n" + 
		 		"		<xsl:attribute name=\"priority\">\r\n" + 
		 		"			<xsl:value-of select=\"@priority\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@message\">\r\n" + 
		 		"		<cloudhub:message >\r\n" + 
		 		"		<xsl:text>&lt;![CDATA[#[</xsl:text>\r\n" + 
		 		"		<xsl:value-of select=\"@message\" />\r\n" + 
		 		"		<xsl:text>]]]&gt;</xsl:text>\r\n" + 
		 		"		</cloudhub:message>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</cloudhub:create-notification>");
		 
		 transformerOf.put("cloudhub:change-notification-status", "<cloudhub:mark-notification>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@notificationId\">\r\n" + 
		 		"		<xsl:attribute name=\"notificationId\">\r\n" + 
		 		"			<xsl:value-of select=\"@notificationId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@status\">\r\n" + 
		 		"		<xsl:attribute name=\"markAs\">\r\n" + 
		 		"			<xsl:value-of select=\"@status\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</cloudhub:mark-notification>");
		 
		 transformerOf.put("cloudhub:config", "<cloudhub:config>\r\n" + 
		 		"		<xsl:attribute name=\"name\">\r\n" + 
		 		"			<xsl:value-of select=\"@name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<cloudhub:connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"		<xsl:attribute name=\"username\">\r\n" + 
		 		"			<xsl:value-of select=\"@username\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"		<xsl:attribute name=\"password\">\r\n" + 
		 		"			<xsl:value-of select=\"@password\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@url\">\r\n" + 
		 		"		<xsl:attribute name=\"anypointPlatformUrl\">\r\n" + 
		 		"			<xsl:value-of select=\"@url\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		</cloudhub:connection>\r\n" + 
		 		"</cloudhub:config>");
		 
		 transformerOf.put("smtp:connector", "<email:smtp-config>\r\n" + 
		 		"			<xsl:if test=\"smtp:connector\">\r\n" + 
		 		"			<xsl:attribute name=\"name\">\r\n" + 
		 		"				<xsl:value-of select=\"smtp:connector/@name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"				<xsl:value-of select=\"smtp:connector/@doc:name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<email:smtp-connection>\r\n" + 
		 		"				<xsl:if test=\"smtp:outbound-endpoint\">\r\n" + 
		 		"					<xsl:if test=\"smtp:outbound-endpoint/@host\">\r\n" + 
		 		"						<xsl:attribute name=\"host\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@host\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"smtp:outbound-endpoint/@user\">\r\n" + 
		 		"						<xsl:attribute name=\"user\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@user\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"smtp:outbound-endpoint/@password\">\r\n" + 
		 		"						<xsl:attribute name=\"password\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@password\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"smtp:outbound-endpoint/@port\">\r\n" + 
		 		"						<xsl:attribute name=\"port\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@port\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"			</email:smtp-connection>\r\n" + 
		 		"	</email:smtp-config>");
		 
		 transformerOf.put("smtp:outbound-endpoint", "<email:send>\r\n" + 
		 		"			<xsl:if test=\"smtp:outbound-endpoint\">\r\n" + 
		 		"				<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"					<xsl:value-of select=\"smtp:outbound-endpoint/@doc:name\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"				<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"					<xsl:value-of select=\"smtp:outbound-endpoint/@connector-ref\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"				<xsl:if test=\"smtp:outbound-endpoint/@from\">\r\n" + 
		 		"					<xsl:attribute name=\"fromAddress\">\r\n" + 
		 		"						<xsl:value-of select=\"smtp:outbound-endpoint/@from\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:outbound-endpoint/@subject\">\r\n" + 
		 		"					<xsl:attribute name=\"subject\">\r\n" + 
		 		"						<xsl:value-of select=\"smtp:outbound-endpoint/@subject\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:connector/*\">\r\n" + 
		 		"					<xsl:copy-of select=\"smtp:connector/*[name()='reconnect']\"/>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:connector/*\">\r\n" + 
		 		"					<xsl:copy-of select=\"smtp:connector/*[name()='reconnect-forever']\"/>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:outbound-endpoint/@to\">\r\n" + 
		 		"					<email:to-addresses >\r\n" + 
		 		"						<email:to-address>\r\n" + 
		 		"						<xsl:attribute name=\"value\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@to\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</email:to-address>\r\n" + 
		 		"					</email:to-addresses >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:outbound-endpoint/@cc\">\r\n" + 
		 		"					<email:cc-addresses >\r\n" + 
		 		"						<email:cc-address>\r\n" + 
		 		"						<xsl:attribute name=\"value\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@cc\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</email:cc-address>\r\n" + 
		 		"					</email:cc-addresses >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:outbound-endpoint/@bcc\">\r\n" + 
		 		"					<email:bcc-addresses >\r\n" + 
		 		"						<email:bcc-address>\r\n" + 
		 		"						<xsl:attribute name=\"value\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@bcc\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</email:bcc-address>\r\n" + 
		 		"					</email:bcc-addresses >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:outbound-endpoint/@replyTo\">\r\n" + 
		 		"					<email:reply-to-addresses >\r\n" + 
		 		"						<email:reply-to-address >\r\n" + 
		 		"						<xsl:attribute name=\"value\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@replyTo\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</email:reply-to-address >\r\n" + 
		 		"					</email:reply-to-addresses >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:outbound-endpoint/@mimeType\">\r\n" + 
		 		"					<email:body >\r\n" + 
		 		"						<xsl:attribute name=\"contentType\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@mimeType\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						<xsl:if test=\"smtp:outbound-endpoint/@encoding\">\r\n" + 
		 		"							<xsl:attribute name=\"encoding\">\r\n" + 
		 		"							<xsl:value-of select=\"smtp:outbound-endpoint/@encoding\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</xsl:if>	\r\n" + 
		 		"					</email:body>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"				\r\n" + 
		 		"	</email:send>");
		 
		 transformerOf.put("smtps:connector", "<email:smtp-config>\r\n" + 
		 		"			<xsl:if test=\"smtps:connector/@name\">\r\n" + 
		 		"			<xsl:attribute name=\"name\">\r\n" + 
		 		"				<xsl:value-of select=\"smtps:connector/@name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"smtps:connector/@doc:name\">\r\n" + 
		 		"			<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"				<xsl:value-of select=\"smtps:connector/@doc:name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<email:smtps-connection>\r\n" + 
		 		"				<xsl:if test=\"smtps:outbound-endpoint\">\r\n" + 
		 		"					<xsl:if test=\"smtps:outbound-endpoint/@host\">\r\n" + 
		 		"						<xsl:attribute name=\"host\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@host\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"smtps:outbound-endpoint/@user\">\r\n" + 
		 		"						<xsl:attribute name=\"user\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@user\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"smtps:outbound-endpoint/@password\">\r\n" + 
		 		"						<xsl:attribute name=\"password\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@password\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"smtps:outbound-endpoint/@port\">\r\n" + 
		 		"						<xsl:attribute name=\"port\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@port\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtps:connector/smtps:tls-trust-store\">\r\n" + 
		 		"				<tls:context >\r\n" + 
		 		"					<tls:trust-store>\r\n" + 
		 		"						<xsl:attribute name=\"path\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:connector/smtps:tls-trust-store/@path\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						<xsl:attribute name=\"password\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:connector/smtps:tls-trust-store/@storePassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</tls:trust-store>\r\n" + 
		 		"				</tls:context >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"			</email:smtps-connection>\r\n" + 
		 		"			\r\n" + 
		 		"	</email:smtp-config>");
		 
		 transformerOf.put("smtps:outbound-endpoint", "<email:send>\r\n" + 
		 		"			<xsl:if test=\"smtps:outbound-endpoint\">\r\n" + 
		 		"				<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"					<xsl:value-of select=\"smtps:outbound-endpoint/@doc:name\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"				<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"					<xsl:value-of select=\"smtps:outbound-endpoint/@connector-ref\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"				<xsl:if test=\"smtps:outbound-endpoint/@from\">\r\n" + 
		 		"					<xsl:attribute name=\"fromAddress\">\r\n" + 
		 		"						<xsl:value-of select=\"smtps:outbound-endpoint/@from\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtps:outbound-endpoint/@subject\">\r\n" + 
		 		"					<xsl:attribute name=\"subject\">\r\n" + 
		 		"						<xsl:value-of select=\"smtps:outbound-endpoint/@subject\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:connector/*\">\r\n" + 
		 		"					<xsl:copy-of select=\"smtp:connector/*[name()='reconnect']\"/>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtp:connector/*\">\r\n" + 
		 		"					<xsl:copy-of select=\"smtp:connector/*[name()='reconnect-forever']\"/>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtps:outbound-endpoint/@to\">\r\n" + 
		 		"					<email:to-addresses >\r\n" + 
		 		"						<email:to-address>\r\n" + 
		 		"						<xsl:attribute name=\"value\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@to\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</email:to-address>\r\n" + 
		 		"					</email:to-addresses >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtps:outbound-endpoint/@cc\">\r\n" + 
		 		"					<email:cc-addresses >\r\n" + 
		 		"						<email:cc-address>\r\n" + 
		 		"						<xsl:attribute name=\"value\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@cc\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</email:cc-address>\r\n" + 
		 		"					</email:cc-addresses >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtps:outbound-endpoint/@bcc\">\r\n" + 
		 		"					<email:bcc-addresses >\r\n" + 
		 		"						<email:bcc-address>\r\n" + 
		 		"						<xsl:attribute name=\"value\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@bcc\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</email:bcc-address>\r\n" + 
		 		"					</email:bcc-addresses >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtps:outbound-endpoint/@replyTo\">\r\n" + 
		 		"					<email:reply-to-addresses >\r\n" + 
		 		"						<email:reply-to-address >\r\n" + 
		 		"						<xsl:attribute name=\"value\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@replyTo\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</email:reply-to-address >\r\n" + 
		 		"					</email:reply-to-addresses >\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"smtps:outbound-endpoint/@mimeType\">\r\n" + 
		 		"					<email:body >\r\n" + 
		 		"						<xsl:attribute name=\"contentType\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@mimeType\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						<xsl:if test=\"smtps:outbound-endpoint/@encoding\">\r\n" + 
		 		"							<xsl:attribute name=\"encoding\">\r\n" + 
		 		"							<xsl:value-of select=\"smtps:outbound-endpoint/@encoding\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"						</xsl:if>	\r\n" + 
		 		"					</email:body>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"	</email:send>");
		 
		 transformerOf.put("pop3:connector", "<email:pop3-config>\r\n" + 
		 		"        <xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"pop3:connector/@name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"pop3:connector/@doc:name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"pop3:connector/@doc:description\">\r\n" + 
		 		"		<xsl:attribute name=\"doc:description\">\r\n" + 
		 		"            <xsl:value-of select=\"pop3:connector/@doc:description\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"    <email:pop3-connection>\r\n" + 
		 		"                <xsl:if test=\"pop3:inbound-endpoint\">\r\n" + 
		 		"						<xsl:if test=\"pop3:inbound-endpoint/@host\">\r\n" + 
		 		"                        <xsl:attribute name=\"host\">\r\n" + 
		 		"                                <xsl:value-of select=\"pop3:inbound-endpoint/@host\" />\r\n" + 
		 		"                        </xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"pop3:inbound-endpoint/@port\">\r\n" + 
		 		"							<xsl:attribute name=\"port\">\r\n" + 
		 		"                                <xsl:value-of select=\"pop3:inbound-endpoint/@port\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"pop3:inbound-endpoint/@user\">\r\n" + 
		 		"							<xsl:attribute name=\"user\">\r\n" + 
		 		"                                <xsl:value-of select=\"pop3:inbound-endpoint/@user\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"pop3:inbound-endpoint/@password\">\r\n" + 
		 		"							<xsl:attribute name=\"password\">\r\n" + 
		 		"                                <xsl:value-of select=\"pop3:inbound-endpoint/@password\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"pop3:outbound-endpoint\">\r\n" + 
		 		"					<xsl:if test=\"pop3:outbound-endpoint/@host\">\r\n" + 
		 		"                        <xsl:attribute name=\"host\">\r\n" + 
		 		"                                <xsl:value-of select=\"pop3:outbound-endpoint/@host\" />\r\n" + 
		 		"                        </xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"pop3:outbound-endpoint/@port\">\r\n" + 
		 		"							<xsl:attribute name=\"port\">\r\n" + 
		 		"                                <xsl:value-of select=\"pop3:outbound-endpoint/@port\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"pop3:outbound-endpoint/@user\">\r\n" + 
		 		"							<xsl:attribute name=\"user\">\r\n" + 
		 		"                                <xsl:value-of select=\"pop3:outbound-endpoint/@user\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"pop3:outbound-endpoint/@password\">\r\n" + 
		 		"							<xsl:attribute name=\"password\">\r\n" + 
		 		"                                <xsl:value-of select=\"pop3:outbound-endpoint/@password\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"pop3:connector/*[name()='reconnect']\">\r\n" + 
		 		"						<reconnection >\r\n" + 
		 		"							<xsl:copy-of select=\"pop3:connector/*[name()='reconnect']\"/>\r\n" + 
		 		"						</reconnection >\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"pop3:connector/*[name()='reconnect-forever']\">\r\n" + 
		 		"							<reconnection >\r\n" + 
		 		"								<xsl:copy-of select=\"pop3:connector/*[name()='reconnect-forever']\"/>\r\n" + 
		 		"							</reconnection >\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"        </email:pop3-connection>\r\n" + 
		 		"</email:pop3-config>");
		 
		 transformerOf.put("pop3s:connector", "<email:pop3-config>\r\n" + 
		 		"	<xsl:if test=\"pop3s:connector\">\r\n" + 
		 		"		<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"pop3s:connector/@name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"pop3s:connector/@doc:name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"pop3s:connector/@doc:description\">\r\n" + 
		 		"			<xsl:attribute name=\"doc:description\">\r\n" + 
		 		"				<xsl:value-of select=\"pop3s:connector/@doc:description\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<email:pop3s-connection>\r\n" + 
		 		"		<xsl:if test=\"pop3s:inbound-endpoint\">\r\n" + 
		 		"		<xsl:if test=\"pop3s:inbound-endpoint/@host\">\r\n" + 
		 		"				<xsl:attribute name=\"host\">\r\n" + 
		 		"					<xsl:value-of select=\"pop3s:inbound-endpoint/@host\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"pop3s:inbound-endpoint/@port\">\r\n" + 
		 		"				<xsl:attribute name=\"port\">\r\n" + 
		 		"					<xsl:value-of select=\"pop3s:inbound-endpoint/@port\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"pop3s:inbound-endpoint/@user\">\r\n" + 
		 		"				<xsl:attribute name=\"user\">\r\n" + 
		 		"					<xsl:value-of select=\"pop3s:inbound-endpoint/@user\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"pop3s:inbound-endpoint/@password\">\r\n" + 
		 		"				<xsl:attribute name=\"password\">\r\n" + 
		 		"					<xsl:value-of select=\"pop3s:inbound-endpoint/@password\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</xsl:if>	\r\n" + 
		 		"		<xsl:if test=\"pop3s:outbound-endpoint\">\r\n" + 
		 		"		<xsl:if test=\"pop3s:outbound-endpoint/@host\">\r\n" + 
		 		"				<xsl:attribute name=\"host\">\r\n" + 
		 		"					<xsl:value-of select=\"pop3s:outbound-endpoint/@host\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"pop3s:outbound-endpoint/@port\">\r\n" + 
		 		"				<xsl:attribute name=\"port\">\r\n" + 
		 		"					<xsl:value-of select=\"pop3s:outbound-endpoint/@port\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"pop3s:outbound-endpoint/@user\">\r\n" + 
		 		"				<xsl:attribute name=\"user\">\r\n" + 
		 		"					<xsl:value-of select=\"pop3s:outbound-endpoint/@user\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"pop3s:outbound-endpoint/@password\">\r\n" + 
		 		"				<xsl:attribute name=\"password\">\r\n" + 
		 		"					<xsl:value-of select=\"pop3s:outbound-endpoint/@password\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"pop3s:connector/pop3s:tls-client\">\r\n" + 
		 		"			<tls:context >\r\n" + 
		 		"				<tls:key-store>\r\n" + 
		 		"					<xsl:if test=\"pop3s:connector/pop3s:tls-client/@path\">\r\n" + 
		 		"						<xsl:attribute name=\"path\">\r\n" + 
		 		"							<xsl:value-of select=\"pop3s:connector/pop3s:tls-client/@path\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"pop3s:connector/pop3s:tls-client/@storePassword\">\r\n" + 
		 		"						<xsl:attribute name=\"password\">\r\n" + 
		 		"							<xsl:value-of select=\"pop3s:connector/pop3s:tls-client/@storePassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</tls:key-store>\r\n" + 
		 		"				<tls:trust-store>\r\n" + 
		 		"					<xsl:if test=\"pop3s:connector/pop3s:tls-trust-store/@path\">\r\n" + 
		 		"						<xsl:attribute name=\"path\">\r\n" + 
		 		"							<xsl:value-of select=\"pop3s:connector/pop3s:tls-trust-store/@path\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"pop3s:connector/pop3s:tls-trust-store/@storePassword\">\r\n" + 
		 		"						<xsl:attribute name=\"password\">\r\n" + 
		 		"							<xsl:value-of select=\"pop3s:connector/pop3s:tls-trust-store/@storePassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</tls:trust-store>\r\n" + 
		 		"			</tls:context >\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</email:pop3s-connection>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</email:pop3-config>");
		 
		 transformerOf.put("pop3:inbound-endpoint", "<scheduler>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"pop3:connector/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"pop3:connector/@checkFrequency\">\r\n" + 
		 		"		<scheduling-strategy >\r\n" + 
		 		"		<fixed-frequency>\r\n" + 
		 		"			<xsl:attribute name=\"frequency\">\r\n" + 
		 		"				<xsl:value-of select=\"pop3:connector/@checkFrequency\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</fixed-frequency>\r\n" + 
		 		"		</scheduling-strategy >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</scheduler>\r\n" + 
		 		"<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"<email:list-pop3>\r\n" + 
		 		"	<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"		<xsl:copy-of select=\"*[name()='reconnect']\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"		<xsl:copy-of select=\"*[name()='reconnect-forever']\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</email:list-pop3>\r\n" + 
		 		"</xsl:if>");
		 
		 transformerOf.put("pop3:outbound-endpoint", "<email:list-pop3>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"pop3:connector/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"pop3:connector/@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"pop3:connector/reconnect\">\r\n" + 
		 		"		<xsl:copy-of select=\"pop3:connector/reconnect\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"pop3:connector/reconnect-forever\">\r\n" + 
		 		"		<xsl:copy-of select=\"pop3:connector/reconnect-forever\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</email:list-pop3>");
		 
		 transformerOf.put("pop3s:inbound-endpoint", "<scheduler>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"pop3:connector/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"pop3:connector/@checkFrequency\">\r\n" + 
		 		"		<scheduling-strategy >\r\n" + 
		 		"		<fixed-frequency>\r\n" + 
		 		"			<xsl:attribute name=\"frequency\">\r\n" + 
		 		"				<xsl:value-of select=\"pop3:connector/@checkFrequency\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</fixed-frequency>\r\n" + 
		 		"		</scheduling-strategy >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</scheduler>\r\n" + 
		 		"<xsl:if test=\"pop3s:connector/*[name()='reconnect']\">\r\n" + 
		 		"<email:list-pop3>\r\n" + 
		 		"	<xsl:if test=\"pop3s:connector/*[name()='reconnect']\">\r\n" + 
		 		"		<xsl:copy-of select=\"pop3s:connector/*[name()='reconnect']\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"pop3s:connector/*[name()='reconnect-forever']\">\r\n" + 
		 		"		<xsl:copy-of select=\"pop3s:connector/*[name()='reconnect-forever']\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</email:list-pop3>\r\n" + 
		 		"</xsl:if>");
		 
		 transformerOf.put("pop3s:outbound-endpoint", "<email:list-imap>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"pop3s:outbound-endpoint/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"pop3s:outbound-endpoint/@connector-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"pop3s:connector/*[name()='reconnect']\">\r\n" + 
		 		"		<xsl:copy-of select=\"pop3s:connector/*[name()='reconnect']\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"pop3s:connector/*[name()='reconnect-forever']\">\r\n" + 
		 		"		<xsl:copy-of select=\"pop3s:connector/*[name()='reconnect-forever']\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</email:list-imap>");
		 
		 transformerOf.put("imap:connector", "<email:imap-config>\r\n" + 
		 		"        <xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"imap:connector/@name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"imap:connector/@doc:name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"imap:connector/@doc:description\">\r\n" + 
		 		"		<xsl:attribute name=\"doc:description\">\r\n" + 
		 		"            <xsl:value-of select=\"imap:connector/@doc:description\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"    <email:imap-connection>\r\n" + 
		 		"                <xsl:if test=\"imap:inbound-endpoint\">\r\n" + 
		 		"						<xsl:if test=\"imap:inbound-endpoint/@host\">\r\n" + 
		 		"                        <xsl:attribute name=\"host\">\r\n" + 
		 		"                                <xsl:value-of select=\"imap:inbound-endpoint/@host\" />\r\n" + 
		 		"                        </xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"imap:inbound-endpoint/@port\">\r\n" + 
		 		"							<xsl:attribute name=\"port\">\r\n" + 
		 		"                                <xsl:value-of select=\"imap:inbound-endpoint/@port\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"imap:inbound-endpoint/@user\">\r\n" + 
		 		"							<xsl:attribute name=\"user\">\r\n" + 
		 		"                                <xsl:value-of select=\"imap:inbound-endpoint/@user\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"imap:inbound-endpoint/@password\">\r\n" + 
		 		"							<xsl:attribute name=\"password\">\r\n" + 
		 		"                                <xsl:value-of select=\"imap:inbound-endpoint/@password\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"imaps:outbound-endpoint\">\r\n" + 
		 		"						<xsl:if test=\"imaps:outbound-endpoint/@host\">\r\n" + 
		 		"                        <xsl:attribute name=\"host\">\r\n" + 
		 		"                                <xsl:value-of select=\"imaps:outbound-endpoint/@host\" />\r\n" + 
		 		"                        </xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"imaps:outbound-endpoint/@port\">\r\n" + 
		 		"							<xsl:attribute name=\"port\">\r\n" + 
		 		"                                <xsl:value-of select=\"imaps:outbound-endpoint/@port\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"imaps:outbound-endpoint/@user\">\r\n" + 
		 		"							<xsl:attribute name=\"user\">\r\n" + 
		 		"                                <xsl:value-of select=\"imaps:outbound-endpoint/@user\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"imaps:outbound-endpoint/@password\">\r\n" + 
		 		"							<xsl:attribute name=\"password\">\r\n" + 
		 		"                                <xsl:value-of select=\"imaps:outbound-endpoint/@password\" />\r\n" + 
		 		"							</xsl:attribute>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"imap:connector/*[name()='reconnect']\">\r\n" + 
		 		"						<reconnection >\r\n" + 
		 		"							<xsl:copy-of select=\"imap:connector/*[name()='reconnect']\"/>\r\n" + 
		 		"						</reconnection >\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"						<xsl:if test=\"imap:connector/*[name()='reconnect-forever']\">\r\n" + 
		 		"							<reconnection >\r\n" + 
		 		"								<xsl:copy-of select=\"imap:connector/*[name()='reconnect-forever']\"/>\r\n" + 
		 		"							</reconnection >\r\n" + 
		 		"						</xsl:if>\r\n" + 
		 		"        </email:imap-connection>\r\n" + 
		 		"</email:imap-config>");
		 
		 transformerOf.put("imaps:connector", "<email:imap-config>\r\n" + 
		 		"	<xsl:if test=\"imaps:connector\">\r\n" + 
		 		"		<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"imaps:connector/@name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"imaps:connector/@doc:name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"imaps:connector/@doc:description\">\r\n" + 
		 		"			<xsl:attribute name=\"doc:description\">\r\n" + 
		 		"				<xsl:value-of select=\"imaps:connector/@doc:description\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<email:imaps-connection>\r\n" + 
		 		"		<xsl:if test=\"imap:inbound-endpoint\">\r\n" + 
		 		"		<xsl:if test=\"imap:inbound-endpoint/@host\">\r\n" + 
		 		"				<xsl:attribute name=\"host\">\r\n" + 
		 		"					<xsl:value-of select=\"imap:inbound-endpoint/@host\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"imap:inbound-endpoint/@port\">\r\n" + 
		 		"				<xsl:attribute name=\"port\">\r\n" + 
		 		"					<xsl:value-of select=\"imap:inbound-endpoint/@port\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"imap:inbound-endpoint/@user\">\r\n" + 
		 		"				<xsl:attribute name=\"user\">\r\n" + 
		 		"					<xsl:value-of select=\"imap:inbound-endpoint/@user\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"imap:inbound-endpoint/@password\">\r\n" + 
		 		"				<xsl:attribute name=\"password\">\r\n" + 
		 		"					<xsl:value-of select=\"imap:inbound-endpoint/@password\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</xsl:if>	\r\n" + 
		 		"		<xsl:if test=\"imaps:outbound-endpoint\">\r\n" + 
		 		"		<xsl:if test=\"imaps:outbound-endpoint/@host\">\r\n" + 
		 		"				<xsl:attribute name=\"host\">\r\n" + 
		 		"					<xsl:value-of select=\"imaps:outbound-endpoint/@host\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"imaps:outbound-endpoint/@port\">\r\n" + 
		 		"				<xsl:attribute name=\"port\">\r\n" + 
		 		"					<xsl:value-of select=\"imaps:outbound-endpoint/@port\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"imaps:outbound-endpoint/@user\">\r\n" + 
		 		"				<xsl:attribute name=\"user\">\r\n" + 
		 		"					<xsl:value-of select=\"imaps:outbound-endpoint/@user\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"imaps:outbound-endpoint/@password\">\r\n" + 
		 		"				<xsl:attribute name=\"password\">\r\n" + 
		 		"					<xsl:value-of select=\"imaps:outbound-endpoint/@password\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"imaps:connector/imaps:tls-trust-store\">\r\n" + 
		 		"			<tls:context >\r\n" + 
		 		"				<tls:trust-store>                                \r\n" + 
		 		"					<xsl:if test=\"imaps:connector/imaps:tls-trust-store/@path\">\r\n" + 
		 		"						<xsl:attribute name=\"path\">\r\n" + 
		 		"							<xsl:value-of select=\"imaps:connector/imaps:tls-trust-store/@path\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"imaps:connector/imaps:tls-trust-store/@storePassword\">\r\n" + 
		 		"						<xsl:attribute name=\"password\">\r\n" + 
		 		"							<xsl:value-of select=\"imaps:connector/imaps:tls-trust-store/@storePassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</tls:trust-store>\r\n" + 
		 		"				<tls:key-store>\r\n" + 
		 		"				<xsl:if test=\"imaps:connector/imaps:tls-client\">\r\n" + 
		 		"					<xsl:if test=\"imaps:connector/imaps:tls-client/@path\">\r\n" + 
		 		"						<xsl:attribute name=\"path\">\r\n" + 
		 		"							<xsl:value-of select=\"imaps:connector/imaps:tls-client/@path\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"					<xsl:if test=\"imaps:connector/imaps:tls-client/@storePassword\">\r\n" + 
		 		"						<xsl:attribute name=\"password\">\r\n" + 
		 		"							<xsl:value-of select=\"imaps:connector/imaps:tls-client/@storePassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				</tls:key-store>\r\n" + 
		 		"			</tls:context >\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</email:imaps-connection>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</email:imap-config>");
		 
		 transformerOf.put("imap:inbound-endpoint", "<scheduler>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"imap:connector/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"imap:connector/@checkFrequency\">\r\n" + 
		 		"		<scheduling-strategy >\r\n" + 
		 		"		<fixed-frequency>\r\n" + 
		 		"			<xsl:attribute name=\"frequency\">\r\n" + 
		 		"				<xsl:value-of select=\"imap:connector/@checkFrequency\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</fixed-frequency>\r\n" + 
		 		"		</scheduling-strategy >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</scheduler>");
		 
		 transformerOf.put("imaps:outbound-endpoint", "<email:list-imap>\r\n" + 
		 		"	<xsl:if test=\"imaps:connector/*[name()='reconnect']\">\r\n" + 
		 		"		<xsl:copy-of select=\"imaps:connector/*[name()='reconnect']\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"imaps:connector/*[name()='reconnect-forever']\">\r\n" + 
		 		"		<xsl:copy-of select=\"imaps:connector/*[name()='reconnect-forever']\" />\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</email:list-imap>");
		 
		 transformerOf.put("sfdc:config", "<sfdc-marketing-cloud:sfdc-marketing-cloud-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"		<xsl:value-of select=\"@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@doc:description\">\r\n" + 
		 		"	<xsl:attribute name=\"doc:description\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:description\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<sfdc-marketing-cloud:basic-connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"		<xsl:attribute name=\"username\">\r\n" + 
		 		"			<xsl:value-of select=\"@username\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"		<xsl:attribute name=\"password\">\r\n" + 
		 		"			<xsl:value-of select=\"@password\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@url\">\r\n" + 
		 		"		<xsl:attribute name=\"authEndPoint\">\r\n" + 
		 		"			<xsl:value-of select=\"@url\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@readTimeout\">\r\n" + 
		 		"		<xsl:attribute name=\"readTimeout\">\r\n" + 
		 		"			<xsl:value-of select=\"@readTimeout\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"		<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"			<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</sfdc-marketing-cloud:basic-connection>\r\n" + 
		 		"</sfdc-marketing-cloud:sfdc-marketing-cloud-config>");
		 
		 transformerOf.put("sfdc:create", "<sfdc-marketing-cloud:create>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"objectType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sfdc:headers/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"createOptions\">\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:headers/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sfdc:objects/@ref\">\r\n" + 
		 		"	<sfdc-marketing-cloud:api-objects >\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:objects/@ref\" />\r\n" + 
		 		"	</sfdc-marketing-cloud:api-objects >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sfdc-marketing-cloud:create>");
		 
		 transformerOf.put("sfdc:config-oauth-user-pass", "<sfdc-marketing-cloud:sfdc-marketing-cloud-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"		<xsl:value-of select=\"@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@doc:description\">\r\n" + 
		 		"	<xsl:attribute name=\"doc:description\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:description\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<sfdc-marketing-cloud:oauth-user-pass-connection>\r\n" + 
		 		"		<xsl:if test=\"@consumerKey\">\r\n" + 
		 		"		<xsl:attribute name=\"clientId\">\r\n" + 
		 		"			<xsl:value-of select=\"@consumerKey\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@consumerSecret\">\r\n" + 
		 		"		<xsl:attribute name=\"clientSecret\">\r\n" + 
		 		"			<xsl:value-of select=\"@consumerSecret\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@tokenEndpoint\">\r\n" + 
		 		"		<xsl:attribute name=\"authEndpoint\">\r\n" + 
		 		"			<xsl:value-of select=\"@tokenEndpoint\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:attribute name=\"soapEndpoint\">\r\n" + 
		 		"			<xsl:text>https://login.salesforce.com/services/Soap/c/37.0/</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@readTimeout\">\r\n" + 
		 		"		<xsl:attribute name=\"readTimeout\">\r\n" + 
		 		"			<xsl:value-of select=\"@readTimeout\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"		<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"			<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</sfdc-marketing-cloud:oauth-user-pass-connection>\r\n" + 
		 		"</sfdc-marketing-cloud:sfdc-marketing-cloud-config>");
		 
		 transformerOf.put("sfdc:delete", "<sfdc-marketing-cloud:delete>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"objectType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sfdc:headers/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"deleteOptions\">\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:headers/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sfdc:ids/@ref\">\r\n" + 
		 		"	<sfdc-marketing-cloud:api-objects >\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:ids/@ref\" />\r\n" + 
		 		"	</sfdc-marketing-cloud:api-objects >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sfdc-marketing-cloud:delete>");
		 
		 transformerOf.put("sfdc:retrieve", "<sfdc-marketing-cloud:retrieve>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sfdc:headers/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"retrieveOptions\">\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:headers/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sfdc:ids/@ref\">\r\n" + 
		 		"	<sfdc-marketing-cloud:query >\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:ids/@ref\" />\r\n" + 
		 		"	</sfdc-marketing-cloud:query >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</sfdc-marketing-cloud:retrieve>");
		 
		 transformerOf.put("sfdc:update", "<sfdc-marketing-cloud:update>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"objectType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sfdc:headers/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"updateOptions\">\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:headers/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sfdc:objects/@ref\">\r\n" + 
		 		"	<sfdc-marketing-cloud:api-objects >\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:objects/@ref\" />\r\n" + 
		 		"	</sfdc-marketing-cloud:api-objects >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</sfdc-marketing-cloud:update>");
		 
		 transformerOf.put("sfdc:upsert", "<sfdc-marketing-cloud:upsert>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"objectType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sfdc:headers/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"upsertOptions\">\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:headers/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sfdc:objects/@ref\">\r\n" + 
		 		"	<sfdc-marketing-cloud:api-objects >\r\n" + 
		 		"			<xsl:value-of select=\"sfdc:objects/@ref\" />\r\n" + 
		 		"	</sfdc-marketing-cloud:api-objects >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</sfdc-marketing-cloud:upsert>");
		 
		 transformerOf.put("objectstore:config", "<os:object-store>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@maxEntries\">\r\n" + 
		 		"	<xsl:attribute name=\"maxEntries\">\r\n" + 
		 		"            <xsl:value-of select=\"@maxEntries\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@entryTtl\">\r\n" + 
		 		"	<xsl:attribute name=\"entryTtl\">\r\n" + 
		 		"            <xsl:value-of select=\"@entryTtl\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"entryTtlUnit\">\r\n" + 
		 		"            <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@expirationInterval\">\r\n" + 
		 		"	<xsl:attribute name=\"expirationInterval\">\r\n" + 
		 		"            <xsl:value-of select=\"@expirationInterval\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"expirationIntervalUnit\">\r\n" + 
		 		"            <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@persistent\">\r\n" + 
		 		"	<xsl:attribute name=\"persistent\">\r\n" + 
		 		"            <xsl:value-of select=\"@persistent\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</os:object-store>");
		 
		 transformerOf.put("objectstore:contains", "<os:contains>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"objectStore\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"	<xsl:attribute name=\"key\">\r\n" + 
		 		"            <xsl:value-of select=\"@key\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</os:contains>");
		 
		 transformerOf.put("objectstore:remove", "<os:remove>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"objectStore\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"	<xsl:attribute name=\"key\">\r\n" + 
		 		"            <xsl:value-of select=\"@key\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</os:remove>");
		 
		 transformerOf.put("objectstore:retrieve", "<os:retrieve>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"objectStore\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"	<xsl:attribute name=\"key\">\r\n" + 
		 		"            <xsl:value-of select=\"@key\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@defaultValue-ref\">\r\n" + 
		 		"	<os:default-value >\r\n" + 
		 		"		<xsl:value-of select=\"@defaultValue-ref\" />\r\n" + 
		 		"	</os:default-value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</os:retrieve>");
		 
		 transformerOf.put("objectstore:retrieve-all-keys", "<os:retrieve-all-keys>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"objectStore\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</os:retrieve-all-keys>");
		 
		 transformerOf.put("objectstore:store", "<os:store>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"objectStore\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"	<xsl:attribute name=\"key\">\r\n" + 
		 		"            <xsl:value-of select=\"@key\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@value-ref\">\r\n" + 
		 		"	<os:value >\r\n" + 
		 		"		<xsl:value-of select=\"@value-ref\" />\r\n" + 
		 		"	</os:value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</os:store>");
		 
		 transformerOf.put("objectstore:retrieve-and-store", "<multiple>\r\n" + 
		 		"	<os:retrieve>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"objectStore\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"	<xsl:attribute name=\"key\">\r\n" + 
		 		"            <xsl:value-of select=\"@key\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@defaultValue-ref\">\r\n" + 
		 		"	<os:default-value >\r\n" + 
		 		"		<xsl:value-of select=\"@defaultValue-ref\" />\r\n" + 
		 		"	</os:default-value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</os:retrieve>\r\n" + 
		 		"	<os:store>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"objectStore\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"	<xsl:attribute name=\"key\">\r\n" + 
		 		"            <xsl:value-of select=\"@key\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@storeValue-ref\">\r\n" + 
		 		"	<os:value >\r\n" + 
		 		"		<xsl:value-of select=\"@storeValue-ref\" />\r\n" + 
		 		"	</os:value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</os:store>\r\n" + 
		 		"  </multiple>");
		 
		 transformerOf.put("servicenow:config", "<servicenow:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<servicenow:basic-connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"		<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"		<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@serviceAddress\">\r\n" + 
		 		"		<xsl:attribute name=\"serviceAddress\">\r\n" + 
		 		"				<xsl:value-of select=\"@serviceAddress\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@serviceNowVersion\">\r\n" + 
		 		"		<xsl:attribute name=\"serviceNowVersion\">\r\n" + 
		 		"				<xsl:value-of select=\"@serviceNowVersion\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"servicenow:list-of-user-table/servicenow:list-of-user-table\">\r\n" + 
		 		"	<servicenow:user-tables >\r\n" + 
		 		"	<xsl:for-each select=\"servicenow:list-of-user-table/servicenow:list-of-user-table\">\r\n" + 
		 		"		<servicenow:user-table>\r\n" + 
		 		"			<xsl:attribute name=\"value\"><xsl:value-of select=\".\" /></xsl:attribute>\r\n" + 
		 		"		</servicenow:user-table>\r\n" + 
		 		"	</xsl:for-each>\r\n" + 
		 		"	</servicenow:user-tables >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</servicenow:basic-connection>\r\n" + 
		 		"</servicenow:config>");
		 
		 transformerOf.put("servicenow:invoke", "<servicenow:invoke>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"service\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-before(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	</servicenow:invoke>");
		
		  transformerOf.put("ws:security", "<wsc:web-service-security>\r\n</wsc:web-service-security>");
		  
		  transformerOf.put("ws:wss-username-token", "<wsc:username-token-security-strategy>\r\n"+
			"<xsl:copy-of select=\"@*\"/>\r\n"+
		    "</wsc:username-token-security-strategy>");
		 
		 transformerOf.put("ws:wss-timestamp", "<wsc:timestamp-security-strategy>\r\n"+
	    	"<xsl:attribute name=\"timeToLive\">"+
		     "<xsl:value-of select=\"@expires\"/>\r\n"+
	    	 "</xsl:attribute>"+
			"</wsc:timestamp-security-strategy>");
		 
		 transformerOf.put("mule-ss:security-manager", "<spring:security-manager>\r\n" + 
		 		"    <xsl:copy-of select=\"@*\"/>\r\n" + 
		 		"    <spring:delegate-security-provider>\r\n" + 
		 		"	    <xsl:copy-of select=\"mule-ss:delegate-security-provider/@*\"/>\r\n" + 
		 		"	</spring:delegate-security-provider>\r\n" + 
		 		"</spring:security-manager>");
		 
		 transformerOf.put("mule-ss:http-security-filter", "<http:basic-security-filter realm=\"mule\">\r\n" + 
		 		"	<xsl:copy-of select=\"@*[name()!='realm']\"/>\r\n" + 
		 		"</http:basic-security-filter>");
		 transformerOf.put("microsoftservicebus:windowsConfig", "<servicebus:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<servicebus:windows-connection>\r\n" + 
		 		"		<xsl:if test=\"@namespace\">\r\n" + 
		 		"		<xsl:attribute name=\"namespace\">\r\n" + 
		 		"				<xsl:value-of select=\"@namespace\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"		<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"		<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@fqdn\">\r\n" + 
		 		"		<xsl:attribute name=\"fqdn\">\r\n" + 
		 		"				<xsl:value-of select=\"@fqdn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
		 		"		<xsl:attribute name=\"disableCnCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		</servicebus:windows-connection>\r\n" + 
		 		"</servicebus:config>");
		 
		 transformerOf.put("microsoftservicebus:azureConfig", "<servicebus:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<servicebus:shared-access-signature-connection>\r\n" + 
		 		"		<xsl:if test=\"@namespace\">\r\n" + 
		 		"		<xsl:attribute name=\"namespace\">\r\n" + 
		 		"				<xsl:value-of select=\"@namespace\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"		<xsl:attribute name=\"blobAccountKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@userName\">\r\n" + 
		 		"		<xsl:attribute name=\"sharedAccessSignature\">\r\n" + 
		 		"				<xsl:value-of select=\"@userName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		</servicebus:shared-access-signature-connection>\r\n" + 
		 		"</servicebus:config>");
		 
		 transformerOf.put("microsoftservicebus:queue-create", "<servicebus:queue-create>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@queuePath\">\r\n" + 
		 		"		<xsl:attribute name=\"queuePath\">\r\n" + 
		 		"            <xsl:value-of select=\"@queuePath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"microsoftservicebus:queue-description/@*\">\r\n" + 
		 		"		<servicebus:queue-description >\r\n" + 
		 		"			<xsl:text>#[output applicaton/java\r\n" + 
		 		"				---{ </xsl:text>\r\n" + 
		 		"						 <xsl:for-each select=\"microsoftservicebus:queue-description/@*\">\r\n" + 
		 		"				\"<xsl:value-of select=\"name()\"/>\" : <xsl:choose><xsl:when test=\"starts-with(.,'#[')\"><xsl:value-of select=\"substring(.,3,string-length(.) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\".\"/></xsl:otherwise></xsl:choose>\r\n" + 
		 		"					 <xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
		 		"					 </xsl:for-each>\r\n" + 
		 		"			<xsl:text >	}]</xsl:text>		\r\n" + 
		 		"		</servicebus:queue-description >\r\n" + 
		 		"	</xsl:if>	\r\n" + 
		 		"</servicebus:queue-create>");
		 
		 transformerOf.put("microsoftservicebus:queue-delete", "<servicebus:queue-delete>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@queuePath\">\r\n" + 
		 		"		<servicebus:queue-path >\r\n" + 
		 		"            <xsl:value-of select=\"@queuePath\" />\r\n" + 
		 		"		</servicebus:queue-path >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:queue-delete>");
		 
		 transformerOf.put("microsoftservicebus:queue-get", "<servicebus:queue-get>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@queuePath\">\r\n" + 
		 		"		<servicebus:queue-path >\r\n" + 
		 		"            <xsl:value-of select=\"@queuePath\" />\r\n" + 
		 		"		</servicebus:queue-path >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:queue-get>");
		 
		 transformerOf.put("microsoftservicebus:queue-update", "<servicebus:queue-update>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@queuePath\">\r\n" + 
		 		"		<xsl:attribute name=\"queuePath\">\r\n" + 
		 		"            <xsl:value-of select=\"@queuePath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"microsoftservicebus:queue-description/@*\">\r\n" + 
		 		"		<servicebus:queue-description >\r\n" + 
		 		"			<xsl:text>#[output applicaton/java\r\n" + 
		 		"				---{ </xsl:text>\r\n" + 
		 		"						 <xsl:for-each select=\"microsoftservicebus:queue-description/@*\">\r\n" + 
		 		"				\"<xsl:value-of select=\"name()\"/>\" : <xsl:choose><xsl:when test=\"starts-with(.,'#[')\"><xsl:value-of select=\"substring(.,3,string-length(.) - 3)\"/></xsl:when><xsl:otherwise><xsl:value-of select=\".\"/></xsl:otherwise></xsl:choose>\r\n" + 
		 		"					 <xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
		 		"					 </xsl:for-each>\r\n" + 
		 		"			<xsl:text >	}]</xsl:text>		\r\n" + 
		 		"		</servicebus:queue-description >\r\n" + 
		 		"	</xsl:if>	\r\n" + 
		 		"</servicebus:queue-update>");
		 
		 transformerOf.put("microsoftservicebus:queues-list", "<servicebus:queues>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</servicebus:queues>");
		 
		 transformerOf.put("microsoftservicebus:rule-create", "<servicebus:rule-create>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@rulePath\">\r\n" + 
		 		"		<xsl:attribute name=\"rulePath\">\r\n" + 
		 		"            <xsl:value-of select=\"@rulePath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:rule-create>");
		 
		 transformerOf.put("microsoftservicebus:rule-delete", "<servicebus:rule-delete>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@rulePath\">\r\n" + 
		 		"		<xsl:attribute name=\"rulePath\">\r\n" + 
		 		"            <xsl:value-of select=\"@rulePath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:rule-delete>");
		 
		 transformerOf.put("microsoftservicebus:rule-get", "<servicebus:rule-get>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@rulePath\">\r\n" + 
		 		"		<xsl:attribute name=\"rulePath\">\r\n" + 
		 		"            <xsl:value-of select=\"@rulePath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:rule-get>");
		 
		 transformerOf.put("microsoftservicebus:rule-update", "<servicebus:rule-update>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@rulePath\">\r\n" + 
		 		"		<xsl:attribute name=\"rulePath\">\r\n" + 
		 		"            <xsl:value-of select=\"@rulePath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:rule-update>");
		 
		 transformerOf.put("microsoftservicebus:rules-list", "<servicebus:rules>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:rules>");
		 
		 transformerOf.put("microsoftservicebus:subscription-create", "<servicebus:subscription-create>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:subscription-create>");
		 
		 transformerOf.put("microsoftservicebus:subscription-delete", "<servicebus:subscription-delete>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:subscription-delete>");
		 
		 transformerOf.put("microsoftservicebus:subscription-get", "<servicebus:subscription-get>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:subscription-get>");
		 
		 transformerOf.put("microsoftservicebus:subscription-update", "<servicebus:subscription-update>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionPath\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@subscriptionPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:subscription-update>");
		 
		 transformerOf.put("microsoftservicebus:subscriptions-list", "<servicebus:subscriptions>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<servicebus:topic-path >\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</servicebus:topic-path >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:subscriptions>");
		 
		 transformerOf.put("microsoftservicebus:topic-create", "<servicebus:topic-create>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:topic-create>");
		 
		 transformerOf.put("microsoftservicebus:topic-delete", "<servicebus:topic-delete>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<servicebus:topic-path >\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</servicebus:topic-path >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:topic-delete>");
		 
		 transformerOf.put("microsoftservicebus:topic-get", "<servicebus:topic-get>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<servicebus:topic-path >\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</servicebus:topic-path >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:topic-get>");
		 
		 transformerOf.put("microsoftservicebus:topic-send", "<servicebus:topic-send>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@destinationTopic\">\r\n" + 
		 		"		<xsl:attribute name=\"destinationTopic\">\r\n" + 
		 		"            <xsl:value-of select=\"@destinationTopic\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@body-ref\">\r\n" + 
		 		"		<servicebus:message >\r\n" + 
		 		"			<servicebus:body >\r\n" + 
		 		"            <xsl:value-of select=\"@body-ref\" />\r\n" + 
		 		"			</servicebus:body >\r\n" + 
		 		"        </servicebus:message >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:topic-send>");
		 
		 transformerOf.put("microsoftservicebus:topic-update", "<servicebus:topic-update>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@topicPath\">\r\n" + 
		 		"		<xsl:attribute name=\"topicPath\">\r\n" + 
		 		"            <xsl:value-of select=\"@topicPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:topic-update>");
		 
		 transformerOf.put("microsoftservicebus:topics-list", "<servicebus:topics>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</servicebus:topics>");
		 
		 transformerOf.put("microsoftservicebus:queue-receive", "<servicebus:listener>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</servicebus:listener>");
		 
		 transformerOf.put("microsoftservicebus:topic-receive", "<servicebus:listener>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</servicebus:listener>");
		 
		 transformerOf.put("microsoftservicebus:queue-send", "<servicebus:queue-send>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@destinationQueue\">\r\n" + 
		 		"		<xsl:attribute name=\"destinationQueue\">\r\n" + 
		 		"            <xsl:value-of select=\"@destinationQueue\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"microsoftservicebus:header\">\r\n" + 
		 		"		<xsl:if test=\"microsoftservicebus:header/@priority\">\r\n" + 
		 		"			<xsl:attribute name=\"priority\">\r\n" + 
		 		"				<xsl:value-of select=\"microsoftservicebus:header/@priority\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"microsoftservicebus:header/@ttl\">\r\n" + 
		 		"			<xsl:attribute name=\"timeToLive\">\r\n" + 
		 		"				<xsl:value-of select=\"microsoftservicebus:header/@ttl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@body-ref\">\r\n" + 
		 		"		<servicebus:message >\r\n" + 
		 		"			<xsl:if test=\"microsoftservicebus:properties\">\r\n" + 
		 		"				<xsl:if test=\"microsoftservicebus:properties/@correlationId\">\r\n" + 
		 		"					<xsl:attribute name=\"correlationId\">\r\n" + 
		 		"						<xsl:value-of select=\"microsoftservicebus:properties/@correlationId\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"microsoftservicebus:properties/@contentType\">\r\n" + 
		 		"				<xsl:attribute name=\"outboundContentType\">\r\n" + 
		 		"					<xsl:value-of select=\"microsoftservicebus:properties/@contentType\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<servicebus:body >\r\n" + 
		 		"            <xsl:value-of select=\"@body-ref\" />\r\n" + 
		 		"			</servicebus:body >\r\n" + 
		 		"		</servicebus:message >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</servicebus:queue-send>");
		 
		 transformerOf.put("oauth2-provider:config", "<oauth2-provider:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@providerName\">\r\n" + 
		 		"		<xsl:attribute name=\"providerName\">\r\n" + 
		 		"				<xsl:value-of select=\"@providerName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@resourceOwnerSecurityProvider-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"resourceOwnerSecurityProvider\">\r\n" + 
		 		"				<xsl:value-of select=\"@resourceOwnerSecurityProvider-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@clientSecurityProvider-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"clientSecurityProvider\">\r\n" + 
		 		"				<xsl:value-of select=\"@clientSecurityProvider-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@scopes\">\r\n" + 
		 		"		<xsl:attribute name=\"scopes\">\r\n" + 
		 		"				<xsl:value-of select=\"@scopes\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@tokenTtlSeconds\">\r\n" + 
		 		"		<oauth2-provider:token-config>\r\n" + 
		 		"			<xsl:attribute name=\"tokenTtl\">\r\n" + 
		 		"				<xsl:value-of select=\"@tokenTtlSeconds\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:attribute name=\"tokenTtlTimeUnit\">\r\n" + 
		 		"				<xsl:text>MILLISECONDS</xsl:text>\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</oauth2-provider:token-config>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginPage\">\r\n" + 
		 		"		<oauth2-provider:authorization-config>\r\n" + 
		 		"			<xsl:attribute name=\"loginPage\">\r\n" + 
		 		"				<xsl:value-of select=\"@loginPage\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:if test=\"@authorizationEndpointPath\">\r\n" + 
		 		"			<xsl:attribute name=\"path\">\r\n" + 
		 		"			    <xsl:text>/</xsl:text>\r\n" + 
		 		"				<xsl:value-of select=\"@authorizationEndpointPath\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</oauth2-provider:authorization-config>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oauth2-provider:config>");
		 
		 transformerOf.put("oauth2-provider:create-client", "<oauth2-provider:create-client>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@clientId\">\r\n" + 
		 		"		<xsl:attribute name=\"clientId\">\r\n" + 
		 		"            <xsl:value-of select=\"@clientId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"type\">\r\n" + 
		 		"            <xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@secret\">\r\n" + 
		 		"		<xsl:attribute name=\"secret\">\r\n" + 
		 		"            <xsl:value-of select=\"@secret\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@clientName\">\r\n" + 
		 		"		<xsl:attribute name=\"clientName\">\r\n" + 
		 		"            <xsl:value-of select=\"@clientName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@description\">\r\n" + 
		 		"		<xsl:attribute name=\"description\">\r\n" + 
		 		"            <xsl:value-of select=\"@description\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@principal\">\r\n" + 
		 		"		<xsl:attribute name=\"principal\">\r\n" + 
		 		"            <xsl:value-of select=\"@principal\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"oauth2-provider:redirect-uris/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"redirectUris\">\r\n" + 
		 		"            <xsl:value-of select=\"oauth2-provider:redirect-uris/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"oauth2-provider:authorized-grant-types/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"authorizedGrantTypes\">\r\n" + 
		 		"            <xsl:value-of select=\"oauth2-provider:authorized-grant-types/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"oauth2-provider:scopes/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"scopes\">\r\n" + 
		 		"            <xsl:value-of select=\"oauth2-provider:scopes/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oauth2-provider:create-client>");
		 
		 transformerOf.put("oauth2-provider:validate", "<oauth2-provider:validate-token>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@scopes\">\r\n" + 
		 		"	<xsl:attribute name=\"scopes\">\r\n" + 
		 		"            <xsl:value-of select=\"@scopes\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@resourceOwnerRoles\">\r\n" + 
		 		"	<xsl:attribute name=\"resourceOwnerRoles\">\r\n" + 
		 		"            <xsl:value-of select=\"@resourceOwnerRoles\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oauth2-provider:validate-token>");
		 
		 transformerOf.put("sap:connector", "<xsl:if test=\"sap:inbound-endpoint\">\r\n" + 
		 		"<sap:inbound-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"sap:connector/@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"sap:connector/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<sap:simple-connection-provider-connection>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoAsHost\">\r\n" + 
		 		"			<xsl:attribute name=\"applicationServerHost\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoAsHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoUser\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoUser\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoPasswd\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoPasswd\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoSysnr\">\r\n" + 
		 		"			<xsl:attribute name=\"systemNumber\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoSysnr\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoLang\">\r\n" + 
		 		"			<xsl:attribute name=\"language\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoLang\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoClient\">\r\n" + 
		 		"			<xsl:attribute name=\"client\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoClient\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</sap:simple-connection-provider-connection>\r\n" + 
		 		"</sap:inbound-config>\r\n" + 
		 		"</xsl:if>\r\n" + 
		 		"<xsl:if test=\"sap:outbound-endpoint\">\r\n" + 
		 		"<sap:outbound-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"sap:connector/@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"sap:connector/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<sap:simple-connection-provider-connection>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoAsHost\">\r\n" + 
		 		"			<xsl:attribute name=\"applicationServerHost\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoAsHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoUser\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoUser\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoPasswd\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoPasswd\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoSysnr\">\r\n" + 
		 		"			<xsl:attribute name=\"systemNumber\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoSysnr\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoLang\">\r\n" + 
		 		"			<xsl:attribute name=\"language\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoLang\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sap:connector/@jcoClient\">\r\n" + 
		 		"			<xsl:attribute name=\"client\">\r\n" + 
		 		"					<xsl:value-of select=\"sap:connector/@jcoClient\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</sap:simple-connection-provider-connection>\r\n" + 
		 		"</sap:outbound-config>\r\n" + 
		 		"</xsl:if>");
		 
		 transformerOf.put("sap:inbound-endpoint", "<xsl:choose>\r\n" + 
		 		"<xsl:when test=\"sap:inbound-endpoint/@type='idoc'\">\r\n" + 
		 		"<sap:document-source>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@connector-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sap:inbound-endpoint/@jcoGwHost\">\r\n" + 
		 		"	<xsl:attribute name=\"gatewayHost\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@jcoGwHost\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sap:inbound-endpoint/@jcoGwService\">\r\n" + 
		 		"	<xsl:attribute name=\"gatewayService\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@jcoGwService\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sap:inbound-endpoint/@jcoProgramId\">\r\n" + 
		 		"	<xsl:attribute name=\"programID\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@jcoProgramId\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sap:inbound-endpoint/@jcoConnectionCount\">\r\n" + 
		 		"	<xsl:attribute name=\"connectionCount\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@jcoConnectionCount\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sap:document-source>\r\n" + 
		 		"</xsl:when>\r\n" + 
		 		"<xsl:otherwise>\r\n" + 
		 		"<sap:function-source>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@connector-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sap:inbound-endpoint/@jcoGwHost\">\r\n" + 
		 		"	<xsl:attribute name=\"gatewayHost\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@jcoGwHost\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sap:inbound-endpoint/@jcoGwService\">\r\n" + 
		 		"	<xsl:attribute name=\"gatewayService\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@jcoGwService\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sap:inbound-endpoint/@jcoProgramId\">\r\n" + 
		 		"	<xsl:attribute name=\"programID\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@jcoProgramId\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sap:inbound-endpoint/@jcoConnectionCount\">\r\n" + 
		 		"	<xsl:attribute name=\"connectionCount\">\r\n" + 
		 		"		<xsl:value-of select=\"sap:inbound-endpoint/@jcoConnectionCount\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	</xsl:if>	\r\n" + 
		 		"</sap:function-source>\r\n" + 
		 		"</xsl:otherwise>\r\n" + 
		 		"</xsl:choose>");
		 
		 transformerOf.put("sap:outbound-endpoint", "<xsl:if test=\"sap:outbound-endpoint/@type='function'\">\r\n" + 
		 		"<xsl:choose>\r\n" + 
		 		"	<xsl:when test=\"sap:outbound-endpoint/@rfcType='qrfc'\">\r\n" + 
		 		"		<sap:execute-queued-remote-function-call>\r\n" + 
		 		"			<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@doc:name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@connector-ref\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:if test=\"sap:outbound-endpoint/@queueName\">\r\n" + 
		 		"			<xsl:attribute name=\"queueName\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@queueName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"sap:outbound-endpoint/sap:transaction/@action\">\r\n" + 
		 		"			<xsl:attribute name=\"transactionalAction\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:inbound-endpoint/sap:transaction/@action\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</sap:execute-queued-remote-function-call>\r\n" + 
		 		"	</xsl:when>\r\n" + 
		 		"	<xsl:when test=\"sap:outbound-endpoint/@rfcType='trfc'\">\r\n" + 
		 		"		<sap:execute-transactional-remote-function-call>\r\n" + 
		 		"			<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@doc:name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@connector-ref\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:if test=\"sap:outbound-endpoint/@queueName\">\r\n" + 
		 		"			<xsl:attribute name=\"queueName\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@queueName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"sap:outbound-endpoint/sap:transaction/@action\">\r\n" + 
		 		"			<xsl:attribute name=\"transactionalAction\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:inbound-endpoint/sap:transaction/@action\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</sap:execute-transactional-remote-function-call>\r\n" + 
		 		"	</xsl:when>\r\n" + 
		 		"	<xsl:otherwise>\r\n" + 
		 		"		<sap:execute-synchronous-remote-function-call>\r\n" + 
		 		"			<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@doc:name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@connector-ref\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:if test=\"sap:outbound-endpoint/@queueName\">\r\n" + 
		 		"			<xsl:attribute name=\"queueName\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:outbound-endpoint/@queueName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"sap:outbound-endpoint/sap:transaction/@action\">\r\n" + 
		 		"			<xsl:attribute name=\"transactionalAction\">\r\n" + 
		 		"				<xsl:value-of select=\"sap:inbound-endpoint/sap:transaction/@action\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</sap:execute-synchronous-remote-function-call>\r\n" + 
		 		"	</xsl:otherwise>\r\n" + 
		 		"</xsl:choose>\r\n" + 
		 		"</xsl:if>");
		 
		 transformerOf.put("wd-connector:config", "<workday:config-version-30-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<workday:basic-authentication-api-v30-connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"		<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"		<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@tenantName\">\r\n" + 
		 		"		<xsl:attribute name=\"tenantName\">\r\n" + 
		 		"				<xsl:value-of select=\"@tenantName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@hostName\">\r\n" + 
		 		"		<xsl:attribute name=\"hostName\">\r\n" + 
		 		"				<xsl:value-of select=\"@hostName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</workday:basic-authentication-api-v30-connection>\r\n" + 
		 		"</workday:config-version-30-config>");
		 
		 transformerOf.put("wd-connector:invoke", "<xsl:if test=\"@type\">\r\n" + 
		 		"<xsl:if test=\"substring-before(@type, '||')='Absence_Management' \">\r\n" + 
		 		"<workday:absence-management>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:absence-management>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Academic_Advising' \">\r\n" + 
		 		"<workday:academic-advising>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:academic-advising>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Academic_Foundation' \">\r\n" + 
		 		"<workday:academic-foundation>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:academic-foundation>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Admissions' \">\r\n" + 
		 		"<workday:admissions>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:admissions>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Adoption' \">\r\n" + 
		 		"<workday:adoption>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:adoption>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Benefits_Administration' \">\r\n" + 
		 		"<workday:benefits-administration>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:benefits-administration>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Campus_Engagement' \">	\r\n" + 
		 		"<workday:campus-engagement>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:campus-engagement>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Cash_Management' \">	\r\n" + 
		 		"<workday:cash-management>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:cash-management>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Compensation' \">	\r\n" + 
		 		"<workday:compensation>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:compensation>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Compensation_Review' \">		\r\n" + 
		 		"<workday:compensation-review>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:compensation-review>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Dynamic_Document_Generation' \">		\r\n" + 
		 		"<workday:dynamic-document-generation>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:dynamic-document-generation>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='External_Integrations' \">		\r\n" + 
		 		"<workday:external-integrations>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:external-integrations>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Financial_Aid' \">			\r\n" + 
		 		"<workday:financial-aid>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:financial-aid>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Financial_Management' \">		\r\n" + 
		 		"<workday:financial-management>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:financial-management>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Human_Resources' \">\r\n" + 
		 		"<workday:human-resources>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:human-resources>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Identity_Management' \">	\r\n" + 
		 		"<workday:identity-management>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:identity-management>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Integrations' \">	\r\n" + 
		 		"<workday:integrations>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:integrations>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Interview_Feedback' \">	\r\n" + 
		 		"<workday:interview-feedback>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:interview-feedback>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Inventory' \">	\r\n" + 
		 		"<workday:inventory>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:inventory>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Learning' \">	\r\n" + 
		 		"<workday:learning>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:learning>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Notification' \">	\r\n" + 
		 		"<workday:notification>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:notification>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Payroll' \">\r\n" + 
		 		"<workday:payroll>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:payroll>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Payroll_CAN' \">\r\n" + 
		 		"<workday:payroll-can>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:payroll-can>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Payroll_FRA' \">\r\n" + 
		 		"<workday:payroll-fra>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:payroll-fra>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Payroll_GBR' \">\r\n" + 
		 		"<workday:payroll-gbr>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:payroll-gbr>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Payroll_Interface' \">\r\n" + 
		 		"	<workday:payroll-interface>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:payroll-interface>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Performance_Management' \">\r\n" + 
		 		"	<workday:performance-management>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:performance-management>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Professional_Services_Automation' \">\r\n" + 
		 		"<workday:professional-services-automation>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:professional-services-automation>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Recruiting' \">\r\n" + 
		 		"<workday:recruiting>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:recruiting>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Resource_Management' \">\r\n" + 
		 		"<workday:resource-management>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:resource-management>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Revenue_Management' \">\r\n" + 
		 		"<workday:revenue-management>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:revenue-management>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Settlement_Services' \">\r\n" + 
		 		"<workday:settlement-services>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:settlement-services>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Staffing' \">\r\n" + 
		 		"<workday:staffing>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:staffing>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Student_Finance' \">\r\n" + 
		 		"<workday:student-finance>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:student-finance>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Student_Records' \">\r\n" + 
		 		"<workday:student-records>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:student-records>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Student_Recruiting' \">\r\n" + 
		 		"<workday:student-recruiting>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:student-recruiting>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Talent' \">\r\n" + 
		 		"<workday:talent>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:talent>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Tenant_Data_Translation' \">\r\n" + 
		 		"<workday:tenant-data-translation>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:tenant-data-translation>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Time_Tracking' \">\r\n" + 
		 		"<workday:time-tracking>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:time-tracking>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Workday_Connect' \">\r\n" + 
		 		"<workday:workday-connect>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:workday-connect>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Workday_Extensibility' \">\r\n" + 
		 		"<workday:workday-extensibility>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:workday-extensibility>\r\n" + 
		 		"</xsl:if><xsl:if test=\"substring-before(@type, '||')='Workforce_Planning' \">\r\n" + 
		 		"<workday:workforce-planning>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"            <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"	<xsl:attribute name=\"operation\">\r\n" + 
		 		"            <xsl:value-of select=\"substring-after(@type, '||')\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</workday:workforce-planning>\r\n" + 
		 		"</xsl:if>\r\n" + 
		 		"</xsl:if>");
		 
		 transformerOf.put("ftps:config", "<ftps:config>\r\n" + 
		 		"        <xsl:attribute name=\"name\">\r\n" + 
		 		"                        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"                        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"    <ftps:connection>\r\n" + 
		 		"		<xsl:attribute name=\"host\">\r\n" + 
		 		"            <xsl:value-of select=\"@host\" />\r\n" + 
		 		"        </xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"@port\">\r\n" + 
		 		"            <xsl:attribute name=\"port\">\r\n" + 
		 		"                <xsl:value-of select=\"@port\" />\r\n" + 
		 		"            </xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"                <xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"                <xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"            <xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"                <xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"            </xsl:attribute>\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeoutUnit\">\r\n" + 
		 		"                   <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
		 		"            </xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"        <xsl:if test=\"@readTimeout\">\r\n" + 
		 		"            <xsl:attribute name=\"responseTimeout\">\r\n" + 
		 		"                <xsl:value-of select=\"@readTimeout\" />\r\n" + 
		 		"            </xsl:attribute>\r\n" + 
		 		"			<xsl:attribute name=\"responseTimeoutUnit\">\r\n" + 
		 		"                   <xsl:text>MILLISECONDS</xsl:text>\r\n" + 
		 		"            </xsl:attribute>\r\n" + 
		 		"		</xsl:if>    \r\n" + 
		 		"        <xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='ftps:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='ftps:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@keystorePath\">\r\n" + 
		 		"			<tls:context >\r\n" + 
		 		"				<tls:key-store>\r\n" + 
		 		"					<xsl:attribute name=\"path\">\r\n" + 
		 		"						<xsl:value-of select=\"@keystorePath\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"					<xsl:if test=\"@keystorePassword\">\r\n" + 
		 		"						<xsl:attribute name=\"keyPassword\">\r\n" + 
		 		"							<xsl:value-of select=\"@keystorePassword\" />\r\n" + 
		 		"						</xsl:attribute>\r\n" + 
		 		"					</xsl:if>\r\n" + 
		 		"				</tls:key-store>\r\n" + 
		 		"			</tls:context >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"    </ftps:connection>\r\n" + 
		 		"</ftps:config>");
		 
		 transformerOf.put("ftps:read", "<ftps:listener>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@filesPath\">\r\n" + 
		 		"		<xsl:attribute name=\"directory\">\r\n" + 
		 		"			<xsl:value-of select=\"@filesPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@moveToDir\">\r\n" + 
		 		"		<xsl:attribute name=\"moveToDirectory\">\r\n" + 
		 		"			<xsl:value-of select=\"@moveToDir\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@fileName\">\r\n" + 
		 		"		<xsl:attribute name=\"renameTo\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@pollingPeriod\">\r\n" + 
		 		"		<scheduling-strategy >\r\n" + 
		 		"			<fixed-frequency>\r\n" + 
		 		"			<xsl:attribute name=\"frequency\">\r\n" + 
		 		"				<xsl:value-of select=\"@pollingPeriod\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			</fixed-frequency>\r\n" + 
		 		"		</scheduling-strategy >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ftps:listener>");
		 
		 transformerOf.put("ftps:write", "<ftps:write>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@filePath\">\r\n" + 
		 		"		<xsl:attribute name=\"path\">\r\n" + 
		 		"			<xsl:value-of select=\"@filePath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<ftps:content >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</ftps:content >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ftps:write>");
		 
		 transformerOf.put("msmq:config", "<xsl:if test=\"msmq:receive\">\r\n" + 
		 		"	<msmq:msmq-receiver-config>\r\n" + 
		 		"		<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"msmq:config/@name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"msmq:receive/@messageFormatter\">\r\n" + 
		 		"			<xsl:attribute name=\"messageFormatter\">\r\n" + 
		 		"				<xsl:value-of select=\"msmq:receive/@messageFormatter\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"msmq:config/@doc:name\">\r\n" + 
		 		"			<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"				<xsl:value-of select=\"msmq:config/@doc:name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"msmq:receive/@messageCount\">\r\n" + 
		 		"			<xsl:attribute name=\"messageCount\">\r\n" + 
		 		"				<xsl:value-of select=\"msmq:receive/@messageCount\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"msmq:receive/@pollingFrecuency\">\r\n" + 
		 		"			<xsl:attribute name=\"pollingFrequency\">\r\n" + 
		 		"				<xsl:value-of select=\"msmq:receive/@pollingFrecuency\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<msmq:msmq-connection>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@serviceAddress\">\r\n" + 
		 		"				<xsl:attribute name=\"serviceAddress\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@serviceAddress\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@accessToken\">\r\n" + 
		 		"				<xsl:attribute name=\"accessToken\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@accessToken\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@rootQueueName\">\r\n" + 
		 		"				<xsl:attribute name=\"queueName\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@rootQueueName\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@rootUserName\">\r\n" + 
		 		"				<xsl:attribute name=\"rootUserName\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@rootUserName\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@rootPassword\">\r\n" + 
		 		"				<xsl:attribute name=\"rootPassword\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@rootPassword\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@rootPassword\">\r\n" + 
		 		"				<xsl:attribute name=\"rootPassword\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@rootPassword\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@ignoreSSLWarnings\">\r\n" + 
		 		"				<xsl:attribute name=\"ignoreSSLWarnings\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@ignoreSSLWarnings\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/*[name()='reconnect']\">\r\n" + 
		 		"				<reconnection >\r\n" + 
		 		"					<xsl:copy-of select=\"msmq:config/*[name()='reconnect']\"/>\r\n" + 
		 		"				</reconnection >\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/*[name()='reconnect-forever']\">\r\n" + 
		 		"				<reconnection >\r\n" + 
		 		"					<xsl:copy-of select=\"msmq:config/*[name()='reconnect-forever']\"/>\r\n" + 
		 		"				</reconnection >\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</msmq:msmq-connection>\r\n" + 
		 		"	</msmq:msmq-receiver-config>\r\n" + 
		 		"</xsl:if>\r\n" + 
		 		"<xsl:if test=\"msmq:send\">\r\n" + 
		 		"	<msmq:msmq-sender-config>\r\n" + 
		 		"		<xsl:attribute name=\"name\">\r\n" + 
		 		"            <xsl:value-of select=\"msmq:config/@name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"            <xsl:value-of select=\"msmq:config/@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<msmq:msmq-connection>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@serviceAddress\">\r\n" + 
		 		"				<xsl:attribute name=\"serviceAddress\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@serviceAddress\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@accessToken\">\r\n" + 
		 		"				<xsl:attribute name=\"accessToken\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@accessToken\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@rootQueueName\">\r\n" + 
		 		"				<xsl:attribute name=\"queueName\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@rootQueueName\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@rootUserName\">\r\n" + 
		 		"				<xsl:attribute name=\"rootUserName\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@rootUserName\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@rootPassword\">\r\n" + 
		 		"				<xsl:attribute name=\"rootPassword\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@rootPassword\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@rootPassword\">\r\n" + 
		 		"				<xsl:attribute name=\"rootPassword\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@rootPassword\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/@ignoreSSLWarnings\">\r\n" + 
		 		"				<xsl:attribute name=\"ignoreSSLWarnings\">\r\n" + 
		 		"					<xsl:value-of select=\"msmq:config/@ignoreSSLWarnings\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/*[name()='reconnect']\">\r\n" + 
		 		"				<reconnection >\r\n" + 
		 		"					<xsl:copy-of select=\"msmq:config/*[name()='reconnect']\"/>\r\n" + 
		 		"				</reconnection >\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"msmq:config/*[name()='reconnect-forever']\">\r\n" + 
		 		"				<reconnection >\r\n" + 
		 		"					<xsl:copy-of select=\"msmq:config/*[name()='reconnect-forever']\"/>\r\n" + 
		 		"				</reconnection >\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</msmq:msmq-connection>\r\n" + 
		 		"	</msmq:msmq-sender-config>\r\n" + 
		 		"</xsl:if>");
		 
		 transformerOf.put("msmq:receive", "<msmq:msmq>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"msmq:receive/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"msmq:receive/@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"</msmq:msmq>");
		 
		 transformerOf.put("msmq:send", "<msmq:send>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"msmq:send/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"msmq:send/@queueName\">\r\n" + 
		 		"		<xsl:attribute name=\"queueName\">\r\n" + 
		 		"			<xsl:value-of select=\"msmq:send/@queueName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"msmq:send/@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"msmq:send/@messageFormatter\">\r\n" + 
		 		"		<xsl:attribute name=\"messageFormatter\">\r\n" + 
		 		"			<xsl:value-of select=\"msmq:send/@messageFormatter\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"msmq:send/@userName\">\r\n" + 
		 		"		<xsl:attribute name=\"userName\">\r\n" + 
		 		"			<xsl:value-of select=\"msmq:send/@userName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"msmq:send/@password\">\r\n" + 
		 		"		<xsl:attribute name=\"password\">\r\n" + 
		 		"			<xsl:value-of select=\"msmq:send/@password\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"msmq:send/@timeToBeReceived\">\r\n" + 
		 		"		<xsl:attribute name=\"timeToBeReceived\">\r\n" + 
		 		"			<xsl:value-of select=\"msmq:send/@timeToBeReceived\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"msmq:send/@timeToReachQueue\">\r\n" + 
		 		"		<xsl:attribute name=\"timeToReachQueue\">\r\n" + 
		 		"			<xsl:value-of select=\"msmq:send/@timeToReachQueue\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"msmq:send/@payload-ref\">\r\n" + 
		 		"		<msmq:payload >\r\n" + 
		 		"			<xsl:value-of select=\"msmq:send/@payload-ref\" />\r\n" + 
		 		"		</msmq:payload >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</msmq:send>");
		 
		 transformerOf.put("wmq:xa-connector", "<ibm-mq:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"		<xsl:value-of select=\"@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"    <xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@doc:description\">\r\n" + 
		 		"	 <xsl:attribute name=\"doc:description\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:description\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"<ibm-mq:connection>\r\n" + 
		 		"	<xsl:if test=\"@username != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"username\">\r\n" + 
		 		"			<xsl:value-of select=\"@username\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@password != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@clientId != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"clientId\">\r\n" + 
		 		"				<xsl:value-of select=\"@clientId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@ccsId != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"cssId\">\r\n" + 
		 		"				<xsl:value-of select=\"@ccsId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@specification != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"specification\">\r\n" + 
		 		"				<xsl:value-of select=\"@specification\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@temporaryModel != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"temporaryModel\">\r\n" + 
		 		"				<xsl:value-of select=\"@temporaryModel\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@temporaryModel != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"temporaryModel\">\r\n" + 
		 		"				<xsl:value-of select=\"@temporaryModel\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"		<reconnection >\r\n" + 
		 		"			<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"		</reconnection >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"		<reconnection >\r\n" + 
		 		"			<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"		</reconnection >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<ibm-mq:connection-mode >\r\n" + 
		 		"		<ibm-mq:client>\r\n" + 
		 		"			<xsl:if test=\"@hostName\">\r\n" + 
		 		"				<xsl:attribute name=\"host\">\r\n" + 
		 		"					<xsl:value-of select=\"@hostName\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@port\">\r\n" + 
		 		"				<xsl:attribute name=\"port\">\r\n" + 
		 		"					<xsl:value-of select=\"@port\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@queueManager\">\r\n" + 
		 		"				<xsl:attribute name=\"queueManager\">\r\n" + 
		 		"					<xsl:value-of select=\"@queueManager\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@channel\">\r\n" + 
		 		"				<xsl:attribute name=\"channel\">\r\n" + 
		 		"					<xsl:value-of select=\"@channel\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</ibm-mq:client>\r\n" + 
		 		"	</ibm-mq:connection-mode >\r\n" + 
		 		"	<ibm-mq:handlers-config>\r\n" + 
		 		"		<xsl:if test=\"@receiveExitHandler\">\r\n" + 
		 		"			<xsl:attribute name=\"receiveExitHandler\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiveExitHandler\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@receiveExitHandlerInit\">\r\n" + 
		 		"			<xsl:attribute name=\"receiveExitHandlerInit\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiveExitHandlerInit\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sendExitHandler\">\r\n" + 
		 		"			<xsl:attribute name=\"sendExitHandler\">\r\n" + 
		 		"				<xsl:value-of select=\"@sendExitHandler\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sendExitHandlerInit\">\r\n" + 
		 		"			<xsl:attribute name=\"sendExitHandlerInit\">\r\n" + 
		 		"				<xsl:value-of select=\"@sendExitHandlerInit\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@securityExitHandler\">\r\n" + 
		 		"			<xsl:attribute name=\"securityExitHandler\">\r\n" + 
		 		"				<xsl:value-of select=\"@securityExitHandler\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@securityExitHandlerInit\">\r\n" + 
		 		"			<xsl:attribute name=\"securityExitHandlerInit\">\r\n" + 
		 		"				<xsl:value-of select=\"@securityExitHandlerInit\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</ibm-mq:handlers-config>\r\n" + 
		 		"</ibm-mq:connection>\r\n" + 
		 		"<ibm-mq:consumer-config>\r\n" + 
		 		"	<xsl:if test=\"@acknowledgementMode != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"ackMode\">\r\n" + 
		 		"				<xsl:value-of select=\"@acknowledgementMode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ibm-mq:consumer-config>\r\n" + 
		 		"<ibm-mq:producer-config>\r\n" + 
		 		"	<xsl:if test=\"@persistentDelivery != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"persistentDelivery\">\r\n" + 
		 		"				<xsl:value-of select=\"@persistentDelivery\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@maxRedelivery != ''\">\r\n" + 
		 		"		<xsl:attribute name=\"deliveryDelay\">\r\n" + 
		 		"				<xsl:value-of select=\"@maxRedelivery\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ibm-mq:producer-config>\r\n" + 
		 		"</ibm-mq:config>");
		 
		 transformerOf.put("wmq:inbound-endpoint", "<ibm-mq:listener>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@connector-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"*[name()='xa-transaction']\">\r\n" + 
		 		"	<xsl:attribute name=\"transactionType\">\r\n" + 
		 		"        <xsl:text>XA</xsl:text>\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"transactionalAction\">\r\n" + 
		 		"        <xsl:value-of select=\"*[name()='xa-transaction']/@action\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@queue\">\r\n" + 
		 		"		<xsl:attribute name=\"destination\">\r\n" + 
		 		"			<xsl:value-of select=\"@queue\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ibm-mq:listener>");
		 
		 transformerOf.put("wmq:outbound-endpoint", "<ibm-mq:publish>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@connector-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"*/@action\">\r\n" + 
		 		"	<xsl:attribute name=\"transactionalAction\">\r\n" + 
		 		"        <xsl:value-of select=\"*/@action\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@queue\">\r\n" + 
		 		"		<xsl:attribute name=\"destination\">\r\n" + 
		 		"			<xsl:value-of select=\"@queue\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ibm-mq:publish>");
		 
		 transformerOf.put("apachekafka:config", "<xsl:if test=\"apachekafka:consumer\">\r\n" + 
		 		"<kafka:kafka-consumer-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"apachekafka:config/@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"apachekafka:config/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<kafka:basic-kafka-consumer-connection>\r\n" + 
		 		"		<xsl:if test=\"apachekafka:config/@bootstrapServers\">\r\n" + 
		 		"			<xsl:attribute name=\"bootstrapServers\">\r\n" + 
		 		"				<xsl:value-of select=\"apachekafka:config/@bootstrapServers\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</kafka:basic-kafka-consumer-connection>\r\n" + 
		 		"</kafka:kafka-consumer-config>\r\n" + 
		 		"</xsl:if>\r\n" + 
		 		"<xsl:if test=\"apachekafka:producer\">\r\n" + 
		 		"<kafka:kafka-producer-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"apachekafka:config/@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"apachekafka:config/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<kafka:basic-kafka-producer-connection>\r\n" + 
		 		"		<xsl:if test=\"apachekafka:config/@bootstrapServers\">\r\n" + 
		 		"			<xsl:attribute name=\"bootstrapServers\">\r\n" + 
		 		"				<xsl:value-of select=\"apachekafka:config/@bootstrapServers\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</kafka:basic-kafka-producer-connection>\r\n" + 
		 		"</kafka:kafka-producer-config>\r\n" + 
		 		"</xsl:if>");
		 
		 transformerOf.put("apachekafka:consumer", "<kafka:consumer>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"apachekafka:consumer/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"apachekafka:consumer/@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"apachekafka:consumer/@topic\">\r\n" + 
		 		"		<xsl:attribute name=\"topic\">\r\n" + 
		 		"			<xsl:value-of select=\"apachekafka:consumer/@topic\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</kafka:consumer>");
		 
		 transformerOf.put("apachekafka:producer", "<kafka:producer>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"apachekafka:producer/@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"apachekafka:producer/@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"apachekafka:producer/@topic\">\r\n" + 
		 		"		<xsl:attribute name=\"topic\">\r\n" + 
		 		"			<xsl:value-of select=\"apachekafka:producer/@topic\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"apachekafka:producer/@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"apachekafka:producer/@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"apachekafka:producer/@message\">\r\n" + 
		 		"		<kafka:message >\r\n" + 
		 		"			<xsl:value-of select=\"apachekafka:producer/@message\" />\r\n" + 
		 		"		</kafka:message >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</kafka:producer>");
		 
		 transformerOf.put("redis:config", "<redis:redis-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:choose>\r\n" + 
		 		"	<xsl:when test=\"@clusterHosts\">\r\n" + 
		 		"		<redis:clustered-connection>\r\n" + 
		 		"			<xsl:attribute name=\"clusterHosts\">\r\n" + 
		 		"				<xsl:value-of select=\"@clusterHosts\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"			<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"				<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"					<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@entryTTL\">\r\n" + 
		 		"				<xsl:attribute name=\"entryTTL\">\r\n" + 
		 		"					<xsl:value-of select=\"@entryTTL\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</redis:clustered-connection>\r\n" + 
		 		"	</xsl:when>\r\n" + 
		 		"	<xsl:otherwise>\r\n" + 
		 		"	<redis:nonclustered-connection>\r\n" + 
		 		"		<xsl:if test=\"@host\">\r\n" + 
		 		"			<xsl:attribute name=\"host\">\r\n" + 
		 		"				<xsl:value-of select=\"@host\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@port\">\r\n" + 
		 		"			<xsl:attribute name=\"port\">\r\n" + 
		 		"				<xsl:value-of select=\"@port\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@entryTTL\">\r\n" + 
		 		"			<xsl:attribute name=\"entryTTL\">\r\n" + 
		 		"				<xsl:value-of select=\"@entryTTL\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		</redis:nonclustered-connection>\r\n" + 
		 		"	</xsl:otherwise>\r\n" + 
		 		"	</xsl:choose>\r\n" + 
		 		"</redis:redis-config>");
		 
		 transformerOf.put("redis:subscribe", "<redis:subscribe>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"redis:channels/@ref\">\r\n" + 
		 		"		<redis:channels >\r\n" + 
		 		"			<redis:channel>\r\n" + 
		 		"				<xsl:attribute name=\"value\">\r\n" + 
		 		"					<xsl:value-of select=\"redis:channels/@ref\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</redis:channel>\r\n" + 
		 		"		</redis:channels >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:subscribe>");
		 
		 transformerOf.put("redis:set-add", "<redis:add-to-set>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@mustSucceed\">\r\n" + 
		 		"		<xsl:attribute name=\"mustSucceed\">\r\n" + 
		 		"			<xsl:value-of select=\"@mustSucceed\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@value\">\r\n" + 
		 		"		<redis:value >\r\n" + 
		 		"			<xsl:value-of select=\"@value\" />\r\n" + 
		 		"		</redis:value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:add-to-set>");
		 
		 transformerOf.put("redis:sorted-set-add", "<redis:add-to-sorted-set>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@score\">\r\n" + 
		 		"		<xsl:attribute name=\"score\">\r\n" + 
		 		"			<xsl:value-of select=\"@score\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@mustSucceed\">\r\n" + 
		 		"		<xsl:attribute name=\"mustSucceed\">\r\n" + 
		 		"			<xsl:value-of select=\"@mustSucceed\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@value\">\r\n" + 
		 		"		<redis:value >\r\n" + 
		 		"			<xsl:value-of select=\"@value\" />\r\n" + 
		 		"		</redis:value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:add-to-sorted-set>");
		 
		 transformerOf.put("redis:sorted-set-select-range-by-index", "<redis:get-range-by-index>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@start\">\r\n" + 
		 		"		<xsl:attribute name=\"start\">\r\n" + 
		 		"			<xsl:value-of select=\"@start\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@end\">\r\n" + 
		 		"		<xsl:attribute name=\"end\">\r\n" + 
		 		"			<xsl:value-of select=\"@end\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@order\">\r\n" + 
		 		"		<xsl:attribute name=\"ascendingOrder\">\r\n" + 
		 		"			<xsl:text>false</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:get-range-by-index>");
		 
		 transformerOf.put("redis:sorted-set-select-range-by-score", "<redis:get-range-by-score>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@min\">\r\n" + 
		 		"		<xsl:attribute name=\"min\">\r\n" + 
		 		"			<xsl:value-of select=\"@min\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@max\">\r\n" + 
		 		"		<xsl:attribute name=\"max\">\r\n" + 
		 		"			<xsl:value-of select=\"@max\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@order\">\r\n" + 
		 		"		<xsl:attribute name=\"ascendingOrder\">\r\n" + 
		 		"			<xsl:text>false</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:get-range-by-score>");
		 
		 transformerOf.put("redis:sorted-set-increment", "<redis:increment-sorted-set>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@step\">\r\n" + 
		 		"		<xsl:attribute name=\"step\">\r\n" + 
		 		"			<xsl:value-of select=\"@step\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@value\">\r\n" + 
		 		"		<redis:value >\r\n" + 
		 		"			<xsl:value-of select=\"@value\" />\r\n" + 
		 		"		</redis:value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:increment-sorted-set>");
		 
		 transformerOf.put("redis:list-pop", "<redis:pop-from-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@side ='LEFT'\">\r\n" + 
		 		"		<xsl:attribute name=\"popLeft\">\r\n" + 
		 		"			<xsl:text>true</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@side ='RIGHT'\">\r\n" + 
		 		"		<xsl:attribute name=\"popLeft\">\r\n" + 
		 		"			<xsl:text>false</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:pop-from-list>");
		 
		 transformerOf.put("redis:list-push", "<redis:push-to-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@side ='LEFT'\">\r\n" + 
		 		"		<xsl:attribute name=\"pushLeft\">\r\n" + 
		 		"			<xsl:text>true</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@side ='RIGHT'\">\r\n" + 
		 		"		<xsl:attribute name=\"pushLeft\">\r\n" + 
		 		"			<xsl:text>false</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@ifExists\">\r\n" + 
		 		"		<xsl:attribute name=\"ifExists\">\r\n" + 
		 		"			<xsl:value-of select=\"@ifExists\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@value\">\r\n" + 
		 		"		<redis:value >\r\n" + 
		 		"			<xsl:value-of select=\"@value\" />\r\n" + 
		 		"		</redis:value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:push-to-list>");
		 
		 transformerOf.put("redis:set", "<redis:set>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@expire\">\r\n" + 
		 		"		<xsl:attribute name=\"expire\">\r\n" + 
		 		"			<xsl:value-of select=\"@expire\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@ifNotExists\">\r\n" + 
		 		"		<xsl:attribute name=\"ifNotExists\">\r\n" + 
		 		"			<xsl:value-of select=\"@ifNotExists\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@value\">\r\n" + 
		 		"		<redis:value >\r\n" + 
		 		"			<xsl:value-of select=\"@value\" />\r\n" + 
		 		"		</redis:value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:set>");
		 
		 transformerOf.put("redis:hash-set", "<redis:set-in-hash>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@field\">\r\n" + 
		 		"		<xsl:attribute name=\"field\">\r\n" + 
		 		"			<xsl:value-of select=\"@field\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@ifNotExists\">\r\n" + 
		 		"		<xsl:attribute name=\"ifNotExists\">\r\n" + 
		 		"			<xsl:value-of select=\"@ifNotExists\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@value\">\r\n" + 
		 		"		<redis:value >\r\n" + 
		 		"			<xsl:value-of select=\"@value\" />\r\n" + 
		 		"		</redis:value >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:set-in-hash>");
		 
		 transformerOf.put("redis:hash-get-all", "<redis:get-all-from-hash>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:get-all-from-hash>");
		 
		 transformerOf.put("redis:hash-get-all", "<redis:get-all-from-hash>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@field\">\r\n" + 
		 		"		<xsl:attribute name=\"field\">\r\n" + 
		 		"			<xsl:value-of select=\"@field\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:get-all-from-hash>");
		 
		 transformerOf.put("redis:hash-get", "<redis:get-from-hash>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@field\">\r\n" + 
		 		"		<xsl:attribute name=\"field\">\r\n" + 
		 		"			<xsl:value-of select=\"@field\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:get-from-hash>");
		 
		 transformerOf.put("redis:hash-increment", "<redis:increment-hash>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@field\">\r\n" + 
		 		"		<xsl:attribute name=\"field\">\r\n" + 
		 		"			<xsl:value-of select=\"@field\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@step\">\r\n" + 
		 		"		<xsl:attribute name=\"step\">\r\n" + 
		 		"			<xsl:value-of select=\"@step\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:increment-hash>");
		 
		 transformerOf.put("redis:set-pop", "<redis:pop-from-set>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:pop-from-set>\r\n" + 
		 		"	");
		 
		 transformerOf.put("redis:set-fetch-random-member", "<redis:random-member-from-set>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@key\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@key\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</redis:random-member-from-set>");
		 
		 transformerOf.put("json:validate-schema", "<json:validate-schema>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@schemaLocation\">\r\n" + 
		 		"		<xsl:attribute name=\"schema\">\r\n" + 
		 		"			<xsl:value-of select=\"@schemaLocation\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@dereferencing\">\r\n" + 
		 		"		<xsl:attribute name=\"dereferencing\">\r\n" + 
		 		"			<xsl:value-of select=\"@dereferencing\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"json:schema-redirects/json:schema-redirect\">\r\n" + 
		 		"		<json:schema-redirects >\r\n" + 
		 		"			<xsl:copy-of select=\"json:schema-redirects/json:schema-redirect\"/>\r\n" + 
		 		"		</json:schema-redirects >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</json:validate-schema>");
		 
		 transformerOf.put("mongo:config", "<mongo:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<mongo:connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@database\">\r\n" + 
		 		"			<xsl:attribute name=\"database\">\r\n" + 
		 		"				<xsl:value-of select=\"@database\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionsPerHost\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionsPerHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionsPerHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@threadsAllowedToBlockForConnectionMultiplier\">\r\n" + 
		 		"			<xsl:attribute name=\"threadsAllowedToBlockForConnectionMultiplier\">\r\n" + 
		 		"				<xsl:value-of select=\"@threadsAllowedToBlockForConnectionMultiplier\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@maxWaitTime\">\r\n" + 
		 		"			<xsl:attribute name=\"maxWaitTime\">\r\n" + 
		 		"				<xsl:value-of select=\"@maxWaitTime\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@socketTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"socketTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@socketTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</mongo:connection>\r\n" + 
		 		"</mongo:config>");
		 
		 transformerOf.put("mongo:add-user", "<mongo:add-user>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@newUsername\">\r\n" + 
		 		"		<xsl:attribute name=\"username\">\r\n" + 
		 		"			<xsl:value-of select=\"@newUsername\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@newPassword\">\r\n" + 
		 		"		<xsl:attribute name=\"password\">\r\n" + 
		 		"			<xsl:value-of select=\"@newPassword\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:add-user>");
		 
		 transformerOf.put("mongo:count-objects", "<mongo:count-documents>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@query-ref\">\r\n" + 
		 		"		<mongo:condition-query >\r\n" + 
		 		"			<xsl:value-of select=\"@query-ref\" />\r\n" + 
		 		"		</mongo:condition-query>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:count-documents>");
		 
		 transformerOf.put("mongo:create-collection", "<mongo:create-collection>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@capped\">\r\n" + 
		 		"		<xsl:attribute name=\"capped\">\r\n" + 
		 		"			<xsl:value-of select=\"@capped\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@maxObjects\">\r\n" + 
		 		"		<xsl:attribute name=\"maxObjects\">\r\n" + 
		 		"			<xsl:value-of select=\"@maxObjects\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@size\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@size\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:create-collection>");
		 
		 transformerOf.put("mongo:create-file-from-payload", "<mongo:create-file-from-payload>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@filename\">\r\n" + 
		 		"		<xsl:attribute name=\"filename\">\r\n" + 
		 		"			<xsl:value-of select=\"@filename\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@metadata-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"metadata\">\r\n" + 
		 		"			<xsl:value-of select=\"@metadata-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@contentType\">\r\n" + 
		 		"		<mongo:content >\r\n" + 
		 		"			<xsl:value-of select=\"@contentType\" />\r\n" + 
		 		"		</mongo:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:create-file-from-payload>");
		 
		 transformerOf.put("mongo:create-index", "<mongo:create-index>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@field\">\r\n" + 
		 		"		<xsl:attribute name=\"fieldName\">\r\n" + 
		 		"			<xsl:value-of select=\"@field\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@order\">\r\n" + 
		 		"		<xsl:attribute name=\"order\">\r\n" + 
		 		"			<xsl:value-of select=\"@order\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:create-index>");
		 
		 transformerOf.put("mongo:drop-collection","<mongo:drop-collection>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</mongo:drop-collection>");
		 
		 transformerOf.put("mongo:drop-index", "<mongo:drop-index>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@index\">\r\n" + 
		 		"		<xsl:attribute name=\"indexName\">\r\n" + 
		 		"			<xsl:value-of select=\"@index\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:drop-index>");
		 
		 transformerOf.put("mongo:dump", "<mongo:dump>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@outputDirectory\">\r\n" + 
		 		"		<xsl:attribute name=\"outputDirectory\">\r\n" + 
		 		"			<xsl:value-of select=\"@outputDirectory\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@outputName\">\r\n" + 
		 		"		<xsl:attribute name=\"outputName\">\r\n" + 
		 		"			<xsl:value-of select=\"@outputName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@zip\">\r\n" + 
		 		"		<xsl:attribute name=\"zip\">\r\n" + 
		 		"			<xsl:value-of select=\"@zip\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@oplog\">\r\n" + 
		 		"		<xsl:attribute name=\"oplog\">\r\n" + 
		 		"			<xsl:value-of select=\"@oplog\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@threads\">\r\n" + 
		 		"		<xsl:attribute name=\"threads\">\r\n" + 
		 		"			<xsl:value-of select=\"@threads\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:dump>");
		 
		 transformerOf.put("mongo:exists-collection", "<mongo:exists-collection>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<mongo:collection-name >\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</mongo:collection-name>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:exists-collection>");
		 
		 transformerOf.put("mongo:find-files", "<mongo:find-files>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@query-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"findQuery\">\r\n" + 
		 		"			<xsl:value-of select=\"@query-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:find-files>");
		 
		 transformerOf.put("mongo:find-objects", "<mongo:find-documents>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@numToSkip\">\r\n" + 
		 		"		<xsl:attribute name=\"numToSkip\">\r\n" + 
		 		"			<xsl:value-of select=\"@numToSkip\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@limit\">\r\n" + 
		 		"		<xsl:attribute name=\"resultLimit\">\r\n" + 
		 		"			<xsl:value-of select=\"@limit\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"mongo:fields/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"fields\">\r\n" + 
		 		"			<xsl:value-of select=\"mongo:fields/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@query-ref\">\r\n" + 
		 		"		<mongo:condition-query >\r\n" + 
		 		"			<xsl:value-of select=\"@query-ref\" />\r\n" + 
		 		"		</mongo:condition-query>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@sortBy-ref\">\r\n" + 
		 		"		<mongo:sort-by >\r\n" + 
		 		"			<xsl:value-of select=\"@sortBy-ref\" />\r\n" + 
		 		"		</mongo:sort-by>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:find-documents>");
		 
		 transformerOf.put("mongo:find-one-file", "<mongo:find-one-file>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@query-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"findQuery\">\r\n" + 
		 		"			<xsl:value-of select=\"@query-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:find-one-file>");
		 
		 transformerOf.put("mongo:find-one-object", "<mongo:find-one-document>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@failOnNotFound\">\r\n" + 
		 		"		<xsl:attribute name=\"failOnNotFound\">\r\n" + 
		 		"			<xsl:value-of select=\"@failOnNotFound\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"mongo:fields/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"fields\">\r\n" + 
		 		"			<xsl:value-of select=\"mongo:fields/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@query-ref\">\r\n" + 
		 		"		<mongo:find-query >\r\n" + 
		 		"			<xsl:value-of select=\"@query-ref\" />\r\n" + 
		 		"		</mongo:find-query>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:find-one-document>");
		 
		 transformerOf.put("mongo:get-file-content", "<mongo:get-file-content>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@query-ref\">\r\n" + 
		 		"		<mongo:file-id >\r\n" + 
		 		"			<xsl:value-of select=\"@query-ref\" />\r\n" + 
		 		"		</mongo:file-id>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:get-file-content>");
		 
		 transformerOf.put("mongo:incremental-dump", "<mongo:incremental-dump>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@outputDirectory\">\r\n" + 
		 		"		<xsl:attribute name=\"outputDirectory\">\r\n" + 
		 		"			<xsl:value-of select=\"@outputDirectory\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@incrementalTimestampFile\">\r\n" + 
		 		"		<xsl:attribute name=\"incrementalTimestampFile\">\r\n" + 
		 		"			<xsl:value-of select=\"@incrementalTimestampFile\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:incremental-dump>");
		 
		 transformerOf.put("mongo:insert-object", "<mongo:insert-document>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</mongo:insert-document>");
		 
		 transformerOf.put("mongo:list-files", "<mongo:list-files>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@query-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"findQuery\">\r\n" + 
		 		"			<xsl:value-of select=\"@query-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:list-files>");
		 
		 transformerOf.put("mongo:list-indices", "<mongo:list-indices>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</mongo:list-indices>");
		 
		 transformerOf.put("mongo:map-reduce-objects", "<mongo:map-reduce-objects>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@mapFunction\">\r\n" + 
		 		"		<xsl:attribute name=\"mappingFunction\">\r\n" + 
		 		"			<xsl:value-of select=\"@mapFunction\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@reduceFunction\">\r\n" + 
		 		"		<xsl:attribute name=\"reduceFunction\">\r\n" + 
		 		"			<xsl:value-of select=\"@reduceFunction\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@outputCollection\">\r\n" + 
		 		"		<xsl:attribute name=\"outputCollection\">\r\n" + 
		 		"			<xsl:value-of select=\"@outputCollection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:map-reduce-objects>");
		 
		 transformerOf.put("mongo:remove-objects", "<mongo:remove-documents>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@query-ref\">\r\n" + 
		 		"		<mongo:find-query >\r\n" + 
		 		"			<xsl:value-of select=\"@query-ref\" />\r\n" + 
		 		"		</mongo:find-query>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:remove-documents>");
		 
		 transformerOf.put("mongo:restore", "<mongo:restore>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@inputPath\">\r\n" + 
		 		"		<xsl:attribute name=\"inputPath\">\r\n" + 
		 		"			<xsl:value-of select=\"@inputPath\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@drop\">\r\n" + 
		 		"		<xsl:attribute name=\"dropCollection\">\r\n" + 
		 		"			<xsl:value-of select=\"@drop\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@oplogReplay\">\r\n" + 
		 		"		<xsl:attribute name=\"oplogReplay\">\r\n" + 
		 		"			<xsl:value-of select=\"@oplogReplay\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:restore>");
		
		 transformerOf.put("mongo:save-object", "<mongo:save-document>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</mongo:save-document>");
		 
		 transformerOf.put("mongo:update-objects", "<mongo:update-documents>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@multi\">\r\n" + 
		 		"		<xsl:attribute name=\"multipleUpdate\">\r\n" + 
		 		"			<xsl:value-of select=\"@multi\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:update-documents>");
		 
		 transformerOf.put("mongo:update-objects-by-function", "<mongo:update-documents-by-function>\r\n" + 
		 		"	<xsl:if test=\"@collection\">\r\n" + 
		 		"		<xsl:attribute name=\"collectionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@collection\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@function\">\r\n" + 
		 		"		<xsl:attribute name=\"function\">\r\n" + 
		 		"			<xsl:value-of select=\"@function\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@upsert\">\r\n" + 
		 		"		<xsl:attribute name=\"upsert\">\r\n" + 
		 		"			<xsl:value-of select=\"@upsert\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@multi\">\r\n" + 
		 		"		<xsl:attribute name=\"multipleUpdate\">\r\n" + 
		 		"			<xsl:value-of select=\"@multi\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mongo:update-documents-by-function>");
		 
		 transformerOf.put("cassandradb:config", "<cassandra-db:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<cassandra-db:connection>\r\n" + 
		 		"		<xsl:if test=\"@host\">\r\n" + 
		 		"			<xsl:attribute name=\"host\">\r\n" + 
		 		"				<xsl:value-of select=\"@host\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@port\">\r\n" + 
		 		"			<xsl:attribute name=\"port\">\r\n" + 
		 		"				<xsl:value-of select=\"@port\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@keyspace\">\r\n" + 
		 		"			<xsl:attribute name=\"keyspace\">\r\n" + 
		 		"				<xsl:value-of select=\"@keyspace\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@clusterName\">\r\n" + 
		 		"			<xsl:attribute name=\"clusterName\">\r\n" + 
		 		"				<xsl:value-of select=\"@clusterName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@clusterNodes\">\r\n" + 
		 		"			<xsl:attribute name=\"clusterNodes\">\r\n" + 
		 		"				<xsl:value-of select=\"@clusterNodes\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@protocolVersion\">\r\n" + 
		 		"			<xsl:attribute name=\"protocolVersion\">\r\n" + 
		 		"				<xsl:value-of select=\"@protocolVersion\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@maxSchemaAgreementWaitSeconds\">\r\n" + 
		 		"			<xsl:attribute name=\"maxSchemaAgreementWaitSeconds\">\r\n" + 
		 		"				<xsl:value-of select=\"@maxSchemaAgreementWaitSeconds\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@compression\">\r\n" + 
		 		"			<xsl:attribute name=\"compression\">\r\n" + 
		 		"				<xsl:value-of select=\"@compression\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sslEnabled\">\r\n" + 
		 		"			<xsl:attribute name=\"sslEnabled\">\r\n" + 
		 		"				<xsl:value-of select=\"@sslEnabled\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</cassandra-db:connection>\r\n" + 
		 		"</cassandra-db:config>");
		 
		 transformerOf.put("cassandradb:add-new-column", "<cassandra-db:add-new-column>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@table\">\r\n" + 
		 		"		<xsl:attribute name=\"table\">\r\n" + 
		 		"			<xsl:value-of select=\"@table\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<cassandra-db:alter-column-input >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</cassandra-db:alter-column-input >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:add-new-column>");
		 
		 transformerOf.put("cassandradb:change-column-type", "<cassandra-db:change-column-type>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@table\">\r\n" + 
		 		"		<xsl:attribute name=\"table\">\r\n" + 
		 		"			<xsl:value-of select=\"@table\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<cassandra-db:alter-column-input >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</cassandra-db:alter-column-input >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:change-column-type>");
		 
		 transformerOf.put("cassandradb:create-keyspace", "<cassandra-db:create-keyspace>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<cassandra-db:input >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</cassandra-db:input >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:create-keyspace>");
		 
		 transformerOf.put("cassandradb:create-table", "<cassandra-db:create-table>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<cassandra-db:create-table-input >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</cassandra-db:create-table-input >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:create-table>");
		 
		 transformerOf.put("cassandradb:delete-columns-value", "<cassandra-db:delete-columns-value>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@table\">\r\n" + 
		 		"		<xsl:attribute name=\"table\">\r\n" + 
		 		"			<xsl:value-of select=\"@table\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@payload-ref\">\r\n" + 
		 		"		<cassandra-db:where-clause >\r\n" + 
		 		"			<xsl:value-of select=\"@payload-ref\" />\r\n" + 
		 		"		</cassandra-db:where-clause >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:delete-columns-value>");
		 
		 transformerOf.put("cassandradb:delete-rows", "<cassandra-db:delete-rows>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@table\">\r\n" + 
		 		"		<xsl:attribute name=\"table\">\r\n" + 
		 		"			<xsl:value-of select=\"@table\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@payload-ref\">\r\n" + 
		 		"		<cassandra-db:where-clause >\r\n" + 
		 		"			<xsl:value-of select=\"@payload-ref\" />\r\n" + 
		 		"		</cassandra-db:where-clause >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:delete-rows>");
		 
		 transformerOf.put("cassandradb:drop-keyspace", "<cassandra-db:drop-keyspace>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<cassandra-db:keyspace-name >\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</cassandra-db:keyspace-name >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:drop-keyspace>");
		 
		 transformerOf.put("cassandradb:drop-table", "<cassandra-db:drop-table>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@tableName\">\r\n" + 
		 		"		<cassandra-db:table-name >\r\n" + 
		 		"			<xsl:value-of select=\"@tableName\" />\r\n" + 
		 		"		</cassandra-db:table-name >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:drop-table>");
		 
		 transformerOf.put("cassandradb:execute-c-q-l-query", "<cassandra-db:execute-cql-query>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<cassandra-db:cql-input >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</cassandra-db:cql-input >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:execute-cql-query>");
		 
		 transformerOf.put("cassandradb:get-table-names-from-keyspace", "<cassandra-db:get-table-names-from-keyspace>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:get-table-names-from-keyspace>");
		 
		 transformerOf.put("cassandradb:insert", "<cassandra-db:insert>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@table\">\r\n" + 
		 		"		<xsl:attribute name=\"table\">\r\n" + 
		 		"			<xsl:value-of select=\"@table\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@entity-ref\">\r\n" + 
		 		"		<cassandra-db:entity-to-insert >\r\n" + 
		 		"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
		 		"		</cassandra-db:entity-to-insert >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:insert>");
		 
		 transformerOf.put("cassandradb:rename-column", "<cassandra-db:rename-column>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@table\">\r\n" + 
		 		"		<xsl:attribute name=\"table\">\r\n" + 
		 		"			<xsl:value-of select=\"@table\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@newColumnName\">\r\n" + 
		 		"		<xsl:attribute name=\"newColumnName\">\r\n" + 
		 		"			<xsl:value-of select=\"@newColumnName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@oldColumnName\">\r\n" + 
		 		"		<cassandra-db:old-column-name>\r\n" + 
		 		"			<xsl:value-of select=\"@oldColumnName\" />\r\n" + 
		 		"		</cassandra-db:old-column-name >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:rename-column>");
		 
		 transformerOf.put("cassandradb:drop-column", "<cassandra-db:drop-column>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@table\">\r\n" + 
		 		"		<xsl:attribute name=\"table\">\r\n" + 
		 		"			<xsl:value-of select=\"@table\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@columnName\">\r\n" + 
		 		"		<cassandra-db:column-name>\r\n" + 
		 		"			<xsl:value-of select=\"@columnName\" />\r\n" + 
		 		"		</cassandra-db:column-name >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:drop-column>");
		 
		 transformerOf.put("cassandradb:select", "<cassandra-db:select>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"cassandradb:parameters\">\r\n" + 
		 		"		<xsl:attribute name=\"parameters\">\r\n" + 
		 		"			<xsl:value-of select=\"cassandradb:parameters/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@query\">\r\n" + 
		 		"		<cassandra-db:query >\r\n" + 
		 		"			<xsl:value-of select=\"@query\" />\r\n" + 
		 		"		</cassandra-db:query >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:select>");
		 
		 transformerOf.put("cassandradb:update", "<cassandra-db:update>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@table\">\r\n" + 
		 		"		<xsl:attribute name=\"table\">\r\n" + 
		 		"			<xsl:value-of select=\"@table\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@keyspaceName\">\r\n" + 
		 		"		<xsl:attribute name=\"keyspaceName\">\r\n" + 
		 		"			<xsl:value-of select=\"@keyspaceName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@entity-ref\">\r\n" + 
		 		"		<cassandra-db:entity-to-update>\r\n" + 
		 		"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
		 		"		</cassandra-db:entity-to-update >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</cassandra-db:update>");
		 
		 transformerOf.put("as2:config", "<as2:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<as2:connection>\r\n" + 
		 		"		<xsl:if test=\"@namePartnerFrom\">\r\n" + 
		 		"			<xsl:attribute name=\"namePartnerFrom\">\r\n" + 
		 		"				<xsl:value-of select=\"@namePartnerFrom\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@as2IdPartnerFrom\">\r\n" + 
		 		"			<xsl:attribute name=\"as2IdPartnerFrom\">\r\n" + 
		 		"				<xsl:value-of select=\"@as2IdPartnerFrom\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@x509aliasPartnerFrom\">\r\n" + 
		 		"			<xsl:attribute name=\"x509aliasPartnerFrom\">\r\n" + 
		 		"				<xsl:value-of select=\"@x509aliasPartnerFrom\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@emailPartnerFrom\">\r\n" + 
		 		"			<xsl:attribute name=\"emailPartnerFrom\">\r\n" + 
		 		"				<xsl:value-of select=\"@emailPartnerFrom\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@namePartnerTo\">\r\n" + 
		 		"			<xsl:attribute name=\"namePartnerTo\">\r\n" + 
		 		"				<xsl:value-of select=\"@namePartnerTo\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@as2IdPartnerTo\">\r\n" + 
		 		"			<xsl:attribute name=\"as2IdPartnerTo\">\r\n" + 
		 		"				<xsl:value-of select=\"@as2IdPartnerTo\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@x509aliasPartnerTo\">\r\n" + 
		 		"			<xsl:attribute name=\"x509aliasPartnerTo\">\r\n" + 
		 		"				<xsl:value-of select=\"@x509aliasPartnerTo\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@emailPartnerTo\">\r\n" + 
		 		"			<xsl:attribute name=\"emailPartnerTo\">\r\n" + 
		 		"				<xsl:value-of select=\"@emailPartnerTo\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@subject\">\r\n" + 
		 		"			<xsl:attribute name=\"subject\">\r\n" + 
		 		"				<xsl:value-of select=\"@subject\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@as2Url\">\r\n" + 
		 		"			<xsl:attribute name=\"as2Url\">\r\n" + 
		 		"				<xsl:value-of select=\"@as2Url\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@as2ReceiptOption\">\r\n" + 
		 		"			<xsl:attribute name=\"as2ReceiptOption\">\r\n" + 
		 		"				<xsl:value-of select=\"@as2ReceiptOption\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@encrypt\">\r\n" + 
		 		"			<xsl:attribute name=\"encrypt\">\r\n" + 
		 		"				<xsl:value-of select=\"@encrypt\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sign\">\r\n" + 
		 		"			<xsl:attribute name=\"sign\">\r\n" + 
		 		"				<xsl:value-of select=\"@sign\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@contentTransferEncoding\">\r\n" + 
		 		"			<xsl:attribute name=\"contentTransferEncoding\">\r\n" + 
		 		"				<xsl:value-of select=\"@contentTransferEncoding\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@compressionType\">\r\n" + 
		 		"			<xsl:attribute name=\"compressionType\">\r\n" + 
		 		"				<xsl:value-of select=\"@compressionType\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@removeCmsAlgorithmProtectionAttrib\">\r\n" + 
		 		"			<xsl:attribute name=\"removeCmsAlgorithmProtectionAttrib\">\r\n" + 
		 		"				<xsl:value-of select=\"@removeCmsAlgorithmProtectionAttrib\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@keystorePath\">\r\n" + 
		 		"			<xsl:attribute name=\"keyStorePath\">\r\n" + 
		 		"				<xsl:value-of select=\"@keystorePath\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@keystorePassword\">\r\n" + 
		 		"			<xsl:attribute name=\"keyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@keystorePassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@receiverPort\">\r\n" + 
		 		"			<xsl:attribute name=\"receiverPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiverPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@secureReceiverPort\">\r\n" + 
		 		"			<xsl:attribute name=\"secureReceiverPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@secureReceiverPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@secureReceiverKeystorePath\">\r\n" + 
		 		"			<xsl:attribute name=\"secureReceiverKeystorePath\">\r\n" + 
		 		"				<xsl:value-of select=\"@secureReceiverKeystorePath\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@secureReceiverKeystorePassword\">\r\n" + 
		 		"			<xsl:attribute name=\"secureReceiverKeystorePassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@secureReceiverKeystorePassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@mdnReceiverPort\">\r\n" + 
		 		"			<xsl:attribute name=\"mdnReceiverPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@mdnReceiverPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@mdnSecureReceiverPort\">\r\n" + 
		 		"			<xsl:attribute name=\"mdnSecureReceiverPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@mdnSecureReceiverPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@mdnSecureReceiverKeystorePath\">\r\n" + 
		 		"			<xsl:attribute name=\"mdnSecureReceiverKeystorePath\">\r\n" + 
		 		"				<xsl:value-of select=\"@mdnSecureReceiverKeystorePath\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@mdnSecureReceiverKeystorePassword\">\r\n" + 
		 		"			<xsl:attribute name=\"mdnSecureReceiverKeystorePassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@mdnSecureReceiverKeystorePassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</as2:connection>\r\n" + 
		 		"</as2:config>");
		 
		 transformerOf.put("as2:receive", "<as2:receive>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"</as2:receive>");
		 
		 transformerOf.put("as2:send", "<as2:send>\r\n" + 
		 		"	<xsl:if test=\"@timeout\">\r\n" + 
		 		"		<xsl:attribute name=\"timeout\">\r\n" + 
		 		"			<xsl:value-of select=\"@timeout\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"input\">\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@fileName\">\r\n" + 
		 		"		<xsl:attribute name=\"fileName\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</as2:send>");
		 
		 transformerOf.put("netsuite:config-login-authentication", "<netsuite:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@separator\">\r\n" + 
		 		"		<xsl:attribute name=\"separator\">\r\n" + 
		 		"			<xsl:value-of select=\"@separator\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<netsuite:login-authentication-connection>\r\n" + 
		 		"		<xsl:if test=\"@email\">\r\n" + 
		 		"			<xsl:attribute name=\"email\">\r\n" + 
		 		"				<xsl:value-of select=\"@email\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@account\">\r\n" + 
		 		"			<xsl:attribute name=\"account\">\r\n" + 
		 		"				<xsl:value-of select=\"@account\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@roleId\">\r\n" + 
		 		"			<xsl:attribute name=\"roleId\">\r\n" + 
		 		"				<xsl:value-of select=\"@roleId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@applicationId\">\r\n" + 
		 		"			<xsl:attribute name=\"applicationId\">\r\n" + 
		 		"				<xsl:value-of select=\"@applicationId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@receiveTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"readTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiveTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@endpoint\">\r\n" + 
		 		"			<xsl:attribute name=\"endpoint\">\r\n" + 
		 		"				<xsl:value-of select=\"@endpoint\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='netsuite:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='netsuite:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</netsuite:login-authentication-connection>\r\n" + 
		 		"</netsuite:config>");
		 
		 transformerOf.put("netsuite:add-file", "<netsuite:add-file>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fileName\">\r\n" + 
		 		"		<xsl:attribute name=\"fileName\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributes-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"attributes\">\r\n" + 
		 		"			<xsl:value-of select=\"@attributes-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@folderId-ref\">\r\n" + 
		 		"		<netsuite:folder-id  >\r\n" + 
		 		"			<xsl:value-of select=\"@folderId-ref\" />\r\n" + 
		 		"		</netsuite:folder-id  >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@content-ref\">\r\n" + 
		 		"		<netsuite:content  >\r\n" + 
		 		"			<xsl:value-of select=\"@content-ref\" />\r\n" + 
		 		"		</netsuite:content  >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:add-file>");
		 
		 transformerOf.put("netsuite:config-request-level-authentication", "<netsuite:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@separator\">\r\n" + 
		 		"		<xsl:attribute name=\"separator\">\r\n" + 
		 		"			<xsl:value-of select=\"@separator\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<netsuite:request-based-authentication-connection>\r\n" + 
		 		"		<xsl:if test=\"@email\">\r\n" + 
		 		"			<xsl:attribute name=\"email\">\r\n" + 
		 		"				<xsl:value-of select=\"@email\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@account\">\r\n" + 
		 		"			<xsl:attribute name=\"account\">\r\n" + 
		 		"				<xsl:value-of select=\"@account\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@roleId\">\r\n" + 
		 		"			<xsl:attribute name=\"roleId\">\r\n" + 
		 		"				<xsl:value-of select=\"@roleId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@applicationId\">\r\n" + 
		 		"			<xsl:attribute name=\"applicationId\">\r\n" + 
		 		"				<xsl:value-of select=\"@applicationId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@receiveTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"readTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiveTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@endpoint\">\r\n" + 
		 		"			<xsl:attribute name=\"endpoint\">\r\n" + 
		 		"				<xsl:value-of select=\"@endpoint\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</netsuite:request-based-authentication-connection>\r\n" + 
		 		"</netsuite:config>");
		 
		 transformerOf.put("netsuite:add-list", "<netsuite:add-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:record-maps >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:record-maps >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:add-list>");
		 
		 transformerOf.put("netsuite:config-request-level-token-based-authentication", "<netsuite:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@separator\">\r\n" + 
		 		"		<xsl:attribute name=\"separator\">\r\n" + 
		 		"			<xsl:value-of select=\"@separator\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<netsuite:token-authentication-connection>\r\n" + 
		 		"		<xsl:if test=\"@consumerKey\">\r\n" + 
		 		"			<xsl:attribute name=\"consumerKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@consumerKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@consumerSecret\">\r\n" + 
		 		"			<xsl:attribute name=\"consumerSecret\">\r\n" + 
		 		"				<xsl:value-of select=\"@consumerSecret\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@tokenId\">\r\n" + 
		 		"			<xsl:attribute name=\"tokenId\">\r\n" + 
		 		"				<xsl:value-of select=\"@tokenId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@tokenSecret\">\r\n" + 
		 		"			<xsl:attribute name=\"tokenSecret\">\r\n" + 
		 		"				<xsl:value-of select=\"@tokenSecret\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@account\">\r\n" + 
		 		"			<xsl:attribute name=\"account\">\r\n" + 
		 		"				<xsl:value-of select=\"@account\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@signatureAlgorithm\">\r\n" + 
		 		"			<xsl:attribute name=\"signatureAlgorithm\">\r\n" + 
		 		"				<xsl:value-of select=\"@signatureAlgorithm\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@receiveTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"readTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiveTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@endpoint\">\r\n" + 
		 		"			<xsl:attribute name=\"endpoint\">\r\n" + 
		 		"				<xsl:value-of select=\"@endpoint\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</netsuite:token-authentication-connection>\r\n" + 
		 		"</netsuite:config>");
		 
		 transformerOf.put("netsuite:add-record", "<netsuite:add-record>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:add-record>");
		 
		 transformerOf.put("netsuite:config-sso-login-authentication", "<netsuite:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@separator\">\r\n" + 
		 		"		<xsl:attribute name=\"separator\">\r\n" + 
		 		"			<xsl:value-of select=\"@separator\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<netsuite:sso-authentication-connection>\r\n" + 
		 		"		<xsl:if test=\"@partnerId\">\r\n" + 
		 		"			<xsl:attribute name=\"partnerId\">\r\n" + 
		 		"				<xsl:value-of select=\"@partnerId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@partnerAccount\">\r\n" + 
		 		"			<xsl:attribute name=\"partnerAccount\">\r\n" + 
		 		"				<xsl:value-of select=\"@partnerAccount\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@companyId\">\r\n" + 
		 		"			<xsl:attribute name=\"companyId\">\r\n" + 
		 		"				<xsl:value-of select=\"@companyId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@userId\">\r\n" + 
		 		"			<xsl:attribute name=\"userId\">\r\n" + 
		 		"				<xsl:value-of select=\"@userId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@keyFile\">\r\n" + 
		 		"			<xsl:attribute name=\"keyFile\">\r\n" + 
		 		"				<xsl:value-of select=\"@keyFile\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@applicationId\">\r\n" + 
		 		"			<xsl:attribute name=\"applicationId\">\r\n" + 
		 		"				<xsl:value-of select=\"@applicationId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@receiveTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"readTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiveTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@endpoint\">\r\n" + 
		 		"			<xsl:attribute name=\"endpoint\">\r\n" + 
		 		"				<xsl:value-of select=\"@endpoint\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='netsuite:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='netsuite:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</netsuite:sso-authentication-connection>\r\n" + 
		 		"</netsuite:config>");
		 
		 transformerOf.put("netsuite:add-record-objects", "<netsuite:add-record-objects>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:added-records >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:added-records >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:add-record-objects>");
		 
		 transformerOf.put("netsuite:async-add-list", "<netsuite:async-add-list>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@recordsAttributes-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"recordAttributes\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordsAttributes-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-add-list>");
		 
		 transformerOf.put("netsuite:async-delete-list", "<netsuite:async-delete-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:deleted-base-ref-types >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:deleted-base-ref-types >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-delete-list>");
		 
		 transformerOf.put("netsuite:async-delete-list-records", "<netsuite:async-delete-list-records>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:deleted-record-refs >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:deleted-record-refs >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-delete-list-records>");
		 
		 transformerOf.put("netsuite:async-get-list", "<netsuite:async-get-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:retrieved-base-ref-types >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:retrieved-base-ref-types >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-get-list>");
		 
		 transformerOf.put("netsuite:async-get-list-records", "<netsuite:async-get-list-records>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:retrieved-record-refs >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:retrieved-record-refs >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-get-list-records>");
		 
		 transformerOf.put("netsuite:async-initialize-list", "<netsuite:async-initialize-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@initializeRecord-ref\">\r\n" + 
		 		"		<netsuite:initialize-records >\r\n" + 
		 		"			<xsl:value-of select=\"@initializeRecord-ref\" />\r\n" + 
		 		"		</netsuite:initialize-records >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-initialize-list>");
		 
		 transformerOf.put("netsuite:async-search", "<netsuite:async-search>\r\n" + 
		 		"	<xsl:if test=\"@searchRecord\">\r\n" + 
		 		"		<xsl:attribute name=\"searchRecord\">\r\n" + 
		 		"			<xsl:value-of select=\"@searchRecord\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@bodyFieldsOnly\">\r\n" + 
		 		"		<xsl:attribute name=\"bodyFieldsOnly\">\r\n" + 
		 		"			<xsl:value-of select=\"@bodyFieldsOnly\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@returnSearchColumns\">\r\n" + 
		 		"		<xsl:attribute name=\"returnSearchColumns\">\r\n" + 
		 		"			<xsl:value-of select=\"@returnSearchColumns\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@pageSize\">\r\n" + 
		 		"		<xsl:attribute name=\"pageSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@pageSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@criteria-ref\">\r\n" + 
		 		"		<netsuite:criteria >\r\n" + 
		 		"			<xsl:value-of select=\"@criteria-ref\" />\r\n" + 
		 		"		</netsuite:criteria >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-search>");
		 
		 transformerOf.put("netsuite:async-update-list", "<netsuite:async-update-list>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@recordsAttributes-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"recordAttributes\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordsAttributes-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-update-list>");
		 
		 transformerOf.put("netsuite:async-upsert-list", "<netsuite:async-upsert-list>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@recordsAttributes-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"recordAttributes\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordsAttributes-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:async-upsert-list>");
		 
		 transformerOf.put("netsuite:attach-record", "<netsuite:attach-record>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@source-ref\">\r\n" + 
		 		"		<netsuite:source >\r\n" + 
		 		"			<xsl:value-of select=\"@source-ref\" />\r\n" + 
		 		"		</netsuite:source >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@destination-ref\">\r\n" + 
		 		"		<netsuite:destination >\r\n" + 
		 		"			<xsl:value-of select=\"@destination-ref\" />\r\n" + 
		 		"		</netsuite:destination >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@contact-ref\">\r\n" + 
		 		"		<netsuite:contact >\r\n" + 
		 		"			<xsl:value-of select=\"@contact-ref\" />\r\n" + 
		 		"		</netsuite:contact >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@role-ref\">\r\n" + 
		 		"		<netsuite:role >\r\n" + 
		 		"			<xsl:value-of select=\"@role-ref\" />\r\n" + 
		 		"		</netsuite:role >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:attach-record>");
		 
		 transformerOf.put("netsuite:change-email", "<netsuite:change-email>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@newEmail\">\r\n" + 
		 		"		<xsl:attribute name=\"newEmail\">\r\n" + 
		 		"			<xsl:value-of select=\"@newEmail\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@justThisAccount\">\r\n" + 
		 		"		<xsl:attribute name=\"justThisAccount\">\r\n" + 
		 		"			<xsl:value-of select=\"@justThisAccount\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:change-email>");
		 
		 transformerOf.put("netsuite:change-password", "<netsuite:change-password>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@newPassword\">\r\n" + 
		 		"		<xsl:attribute name=\"newPassword\">\r\n" + 
		 		"			<xsl:value-of select=\"@newPassword\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:change-password>");
		 
		 transformerOf.put("netsuite:check-async-status", "<netsuite:check-async-status>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@jobId\">\r\n" + 
		 		"		<xsl:attribute name=\"jobId\">\r\n" + 
		 		"			<xsl:value-of select=\"@jobId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:check-async-status>");
		 
		 transformerOf.put("netsuite:delete", "<netsuite:delete>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@baseRef-ref\">\r\n" + 
		 		"		<netsuite:base-ref >\r\n" + 
		 		"			<xsl:value-of select=\"@baseRef-ref\" />\r\n" + 
		 		"		</netsuite:base-ref >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:delete>");
		 
		 transformerOf.put("netsuite:delete-list", "<netsuite:delete-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:deleted-base-ref-types >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:deleted-base-ref-types >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:delete-list>");
		 
		 transformerOf.put("netsuite:delete-record", "<netsuite:delete-record>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@recordRef-ref\">\r\n" + 
		 		"		<netsuite:record-ref >\r\n" + 
		 		"			<xsl:value-of select=\"@recordRef-ref\" />\r\n" + 
		 		"		</netsuite:record-ref >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:delete-record>");
		 
		 transformerOf.put("netsuite:delete-records-list", "<netsuite:delete-records-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:deleted-record-refs >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:deleted-record-refs >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:delete-records-list>");
		 
		 transformerOf.put("netsuite:detach-record", "<netsuite:detach-record>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@source-ref\">\r\n" + 
		 		"		<netsuite:source >\r\n" + 
		 		"			<xsl:value-of select=\"@source-ref\" />\r\n" + 
		 		"		</netsuite:source >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@destination-ref\">\r\n" + 
		 		"		<netsuite:destination >\r\n" + 
		 		"			<xsl:value-of select=\"@destination-ref\" />\r\n" + 
		 		"		</netsuite:destination >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:detach-record>");
		 
		 transformerOf.put("netsuite:get", "<netsuite:get>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@baseRef-ref\">\r\n" + 
		 		"		<netsuite:base-ref >\r\n" + 
		 		"			<xsl:value-of select=\"@baseRef-ref\" />\r\n" + 
		 		"		</netsuite:base-ref >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get>");
		 
		 transformerOf.put("netsuite:get-data-center-urls", "<netsuite:get-data-center-urls>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@accountId\">\r\n" + 
		 		"		<xsl:attribute name=\"accountId\">\r\n" + 
		 		"			<xsl:value-of select=\"@accountId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-data-center-urls>");
		 
		 transformerOf.put("netsuite:get-async-result", "<netsuite:get-async-result>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@jobId\">\r\n" + 
		 		"		<xsl:attribute name=\"jobId\">\r\n" + 
		 		"			<xsl:value-of select=\"@jobId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@pageIndex\">\r\n" + 
		 		"		<xsl:attribute name=\"pageIndex\">\r\n" + 
		 		"			<xsl:value-of select=\"@pageIndex\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-async-result>");
		 
		 transformerOf.put("netsuite:get-budget-exchange-rates", "<netsuite:get-budget-exchange-rates>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@period-ref\">\r\n" + 
		 		"		<netsuite:period >\r\n" + 
		 		"			<xsl:value-of select=\"@period-ref\" />\r\n" + 
		 		"		</netsuite:period >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@fromSubsidiary-ref\">\r\n" + 
		 		"		<netsuite:from-subsidiary >\r\n" + 
		 		"			<xsl:value-of select=\"@fromSubsidiary-ref\" />\r\n" + 
		 		"		</netsuite:from-subsidiary >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@toSubsidiary-ref\">\r\n" + 
		 		"		<netsuite:to-subsidiary >\r\n" + 
		 		"			<xsl:value-of select=\"@toSubsidiary-ref\" />\r\n" + 
		 		"		</netsuite:to-subsidiary >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-budget-exchange-rates>");
		 
		 transformerOf.put("netsuite:get-current-rate", "<netsuite:get-current-rate>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@rateFilter-ref\">\r\n" + 
		 		"		<netsuite:rate-filter >\r\n" + 
		 		"			<xsl:value-of select=\"@rateFilter-ref\" />\r\n" + 
		 		"		</netsuite:rate-filter >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-current-rate>");
		 
		 transformerOf.put("netsuite:get-custom-record", "<netsuite:get-custom-record>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@internalId\">\r\n" + 
		 		"		<xsl:attribute name=\"internalId\">\r\n" + 
		 		"			<xsl:value-of select=\"@internalId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@externalId\">\r\n" + 
		 		"		<xsl:attribute name=\"externalId\">\r\n" + 
		 		"			<xsl:value-of select=\"@externalId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-custom-record>");
		 
		 transformerOf.put("netsuite:get-customization-ids", "<netsuite:get-customization-ids>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@includeInactives\">\r\n" + 
		 		"		<xsl:attribute name=\"includeInactives\">\r\n" + 
		 		"			<xsl:value-of select=\"@includeInactives\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-customization-ids>");
		 
		 transformerOf.put("netsuite:get-deleted-records", "<netsuite:get-deleted-records>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@pageIndex\">\r\n" + 
		 		"		<xsl:attribute name=\"pageIndex\">\r\n" + 
		 		"			<xsl:value-of select=\"@pageIndex\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@deletedDate-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"deletedDate\">\r\n" + 
		 		"			<xsl:value-of select=\"@deletedDate-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-deleted-records>");
		 
		 transformerOf.put("netsuite:get-item-availability", "<netsuite:get-item-availability>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@ifModifiedSince\">\r\n" + 
		 		"		<xsl:attribute name=\"ifModifiedSince\">\r\n" + 
		 		"			<xsl:value-of select=\"@ifModifiedSince\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@record-ref\">\r\n" + 
		 		"		<netsuite:record >\r\n" + 
		 		"			<xsl:value-of select=\"@record-ref\" />\r\n" + 
		 		"		</netsuite:record >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-item-availability>");
		 
		 transformerOf.put("netsuite:get-list", "<netsuite:get-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@references-ref\">\r\n" + 
		 		"		<netsuite:references >\r\n" + 
		 		"			<xsl:value-of select=\"@references-ref\" />\r\n" + 
		 		"		</netsuite:references >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-list>");
		 
		 transformerOf.put("netsuite:get-posting-transaction-summary", "<netsuite:get-posting-transaction-summary>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fields-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"fields\">\r\n" + 
		 		"			<xsl:value-of select=\"@fields-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@pageIndex\">\r\n" + 
		 		"		<xsl:attribute name=\"pageIndex\">\r\n" + 
		 		"			<xsl:value-of select=\"@pageIndex\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@filters-ref\">\r\n" + 
		 		"		<netsuite:filters >\r\n" + 
		 		"			<xsl:value-of select=\"@filters-ref\" />\r\n" + 
		 		"		</netsuite:filters >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-posting-transaction-summary>");
		 
		 transformerOf.put("netsuite:get-record", "<netsuite:get-record>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@internalId\">\r\n" + 
		 		"		<xsl:attribute name=\"internalId\">\r\n" + 
		 		"			<xsl:value-of select=\"@internalId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@externalId\">\r\n" + 
		 		"		<xsl:attribute name=\"externalId\">\r\n" + 
		 		"			<xsl:value-of select=\"@externalId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-record>");
		 
		 transformerOf.put("netsuite:get-records", "<netsuite:get-records>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</netsuite:get-records>");
		 
		 transformerOf.put("netsuite:get-saved-search", "<netsuite:get-saved-search>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</netsuite:get-saved-search>");
		 
		 transformerOf.put("netsuite:get-select-value", "<netsuite:get-select-value>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@page\">\r\n" + 
		 		"		<xsl:attribute name=\"page\">\r\n" + 
		 		"			<xsl:value-of select=\"@page\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@fieldDescriptor-ref\">\r\n" + 
		 		"		<netsuite:field-descriptor >\r\n" + 
		 		"			<xsl:value-of select=\"@fieldDescriptor-ref\" />\r\n" + 
		 		"		</netsuite:field-descriptor >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:get-select-value>");
		 
		 transformerOf.put("netsuite:initialize", "<netsuite:initialize>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@page\">\r\n" + 
		 		"		<xsl:attribute name=\"page\">\r\n" + 
		 		"			<xsl:value-of select=\"@page\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@record-ref\">\r\n" + 
		 		"		<netsuite:record-to-initialize >\r\n" + 
		 		"			<xsl:value-of select=\"@record-ref\" />\r\n" + 
		 		"		</netsuite:record-to-initialize >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:initialize>");
		 
		 transformerOf.put("netsuite:initialize-list", "<netsuite:initialize-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@page\">\r\n" + 
		 		"		<xsl:attribute name=\"page\">\r\n" + 
		 		"			<xsl:value-of select=\"@page\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@initializeRecord-ref\">\r\n" + 
		 		"		<netsuite:initialize-records >\r\n" + 
		 		"			<xsl:value-of select=\"@initializeRecord-ref\" />\r\n" + 
		 		"		</netsuite:initialize-records >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:initialize-list>");
		 
		 transformerOf.put("netsuite:map-sso", "<netsuite:map-sso>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@userRole-ref or @authenticationToken or @userAccount or @userEmail or @userPartnerId or @userPassword\">\r\n" + 
		 		"		<netsuite:credentials >\r\n" + 
		 		"			<xsl:text>#[output applicaton/java		"
		 		+ "---{ </xsl:text>		\r\n	" + 
		 		"			<xsl:for-each select=\"@*[name() != 'config-ref' and name() != 'doc:name']\">\n" + 
		 		"				\"<xsl:value-of select=\"name()\"/>\" :  <xsl:choose> <xsl:when test=\"starts-with(.,'#[')\"> <xsl:value-of select=\"substring(.,3,string-length(.) - 3)\"/> </xsl:when> <xsl:otherwise> \"<xsl:value-of select=\".\"/>\" </xsl:otherwise> </xsl:choose>			" + 
		 		"				<xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text>\r\n" + 
		 		"				</xsl:if>		\r\n	" + 
		 		"			</xsl:for-each>	\r\n" + 
		 		"			<xsl:text >	}]</xsl:text>\r\n" + 
		 		"		</netsuite:credentials >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:map-sso>");
		 
		 transformerOf.put("netsuite:search", "<netsuite:search>\r\n" + 
		 		"	<xsl:if test=\"@searchRecord\">\r\n" + 
		 		"		<xsl:attribute name=\"key\">\r\n" + 
		 		"			<xsl:value-of select=\"@searchRecord\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"pageSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@bodyFieldsOnly\">\r\n" + 
		 		"		<xsl:attribute name=\"bodyFieldsOnly\">\r\n" + 
		 		"			<xsl:value-of select=\"@bodyFieldsOnly\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@returnSearchColumns\">\r\n" + 
		 		"		<xsl:attribute name=\"returnSearchColumns\">\r\n" + 
		 		"			<xsl:value-of select=\"@returnSearchColumns\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@criteria-ref\">\r\n" + 
		 		"		<netsuite:search-record >\r\n" + 
		 		"			<xsl:value-of select=\"@criteria-ref\" />\r\n" + 
		 		"		</netsuite:search-record >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:search>");
		 
		 transformerOf.put("netsuite:update-invitee-status", "<netsuite:update-invitee-status>\r\n" + 
		 		"	<xsl:if test=\"@status\">\r\n" + 
		 		"		<xsl:attribute name=\"status\">\r\n" + 
		 		"			<xsl:value-of select=\"@status\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@eventId-ref\">\r\n" + 
		 		"		<netsuite:event-id >\r\n" + 
		 		"			<xsl:value-of select=\"@eventId-ref\" />\r\n" + 
		 		"		</netsuite:event-id >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:update-invitee-status>");
		 
		 transformerOf.put("netsuite:update-invitee-status-list", "<netsuite:update-invitee-status-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@inviteeStatusList-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"inviteeStatuses\">\r\n" + 
		 		"			<xsl:value-of select=\"@inviteeStatusList-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:update-invitee-status-list>");
		 
		 transformerOf.put("netsuite:update-list", "<netsuite:update-list>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:record-maps >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:record-maps >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:update-list>");
		 
		 transformerOf.put("netsuite:update-record", "<netsuite:update-record>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@attributes-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"attributes\">\r\n" + 
		 		"			<xsl:value-of select=\"@attributes-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:update-record>");
		 
		 transformerOf.put("netsuite:update-records-list", "<netsuite:update-records-list>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:records >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:records >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:update-records-list>");
		 
		 transformerOf.put("netsuite:upsert-list", "<netsuite:upsert-list>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@records-ref\">\r\n" + 
		 		"		<netsuite:record-maps >\r\n" + 
		 		"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
		 		"		</netsuite:record-maps >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:upsert-list>");
		 
		 transformerOf.put("netsuite:upsert-record", "<netsuite:upsert-record>\r\n" + 
		 		"	<xsl:if test=\"@recordType\">\r\n" + 
		 		"		<xsl:attribute name=\"recordType\">\r\n" + 
		 		"			<xsl:value-of select=\"@recordType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@attributes-ref\">\r\n" + 
		 		"		<xsl:attribute name=\"attributes\">\r\n" + 
		 		"			<xsl:value-of select=\"@attributes-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</netsuite:upsert-record>");
		 
		 transformerOf.put("edifact-edi:config", "<edifact:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@stringSubstitutionChar\">\r\n" + 
		 		"		<xsl:attribute name=\"stringSubstitutionChar\">\r\n" + 
		 		"			<xsl:value-of select=\"@stringSubstitutionChar\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@delimiterUsage\">\r\n" + 
		 		"			<xsl:attribute name=\"separatorUsage\">\r\n" + 
		 		"				<xsl:value-of select=\"@delimiterUsage\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@dataSeparator\">\r\n" + 
		 		"			<xsl:attribute name=\"dataSeparator\">\r\n" + 
		 		"				<xsl:value-of select=\"@dataSeparator\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@componentSeparator\">\r\n" + 
		 		"			<xsl:attribute name=\"componentSeparator\">\r\n" + 
		 		"				<xsl:value-of select=\"@componentSeparator\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@repetitionSeparator\">\r\n" + 
		 		"			<xsl:attribute name=\"repetitionSeparator\">\r\n" + 
		 		"				<xsl:value-of select=\"@repetitionSeparator\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@segmentTerminator\">\r\n" + 
		 		"			<xsl:attribute name=\"segmentTerminator\">\r\n" + 
		 		"				<xsl:value-of select=\"@segmentTerminator\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@releaseCharacter\">\r\n" + 
		 		"			<xsl:attribute name=\"releaseCharacter\">\r\n" + 
		 		"				<xsl:value-of select=\"@releaseCharacter\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@interchangeIdSelf\">\r\n" + 
		 		"			<xsl:attribute name=\"interchangeIdSelf\">\r\n" + 
		 		"				<xsl:value-of select=\"@interchangeIdSelf\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@interchangeIdQualifierSelf\">\r\n" + 
		 		"			<xsl:attribute name=\"interchangeIdQualifierSelf\">\r\n" + 
		 		"				<xsl:value-of select=\"@interchangeIdQualifierSelf\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@interchangeIdPartner\">\r\n" + 
		 		"			<xsl:attribute name=\"interchangeIdPartner\">\r\n" + 
		 		"				<xsl:value-of select=\"@interchangeIdPartner\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@interchangeIdQualifierPartner\">\r\n" + 
		 		"			<xsl:attribute name=\"interchangeIdQualifierPartner\">\r\n" + 
		 		"				<xsl:value-of select=\"@interchangeIdQualifierPartner\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@valueLengthErrorFail\">\r\n" + 
		 		"			<xsl:attribute name=\"enforceLengthLimits\">\r\n" + 
		 		"				<xsl:value-of select=\"@valueLengthErrorFail\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@wrongValuesRepeatsFail\">\r\n" + 
		 		"			<xsl:attribute name=\"enforceValueRepeats\">\r\n" + 
		 		"				<xsl:value-of select=\"@wrongValuesRepeatsFail\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@unknownSegmentFail\">\r\n" + 
		 		"			<xsl:attribute name=\"enforceReadCharacters\">\r\n" + 
		 		"				<xsl:value-of select=\"@unknownSegmentFail\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@segmentOutOfOrderFail\">\r\n" + 
		 		"			<xsl:attribute name=\"enforceSegmentOrder\">\r\n" + 
		 		"				<xsl:value-of select=\"@segmentOutOfOrderFail\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@unusedSegmentPresentFail\">\r\n" + 
		 		"			<xsl:attribute name=\"allowUnusedSegments\">\r\n" + 
		 		"				<xsl:value-of select=\"@unusedSegmentPresentFail\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@wrongSegmentsRepeatsFail\">\r\n" + 
		 		"			<xsl:attribute name=\"enforceSegmentRepeats\">\r\n" + 
		 		"				<xsl:value-of select=\"@wrongSegmentsRepeatsFail\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@requireUniqueInterchangeReferences\">\r\n" + 
		 		"			<xsl:attribute name=\"requireUniqueInterchanges\">\r\n" + 
		 		"				<xsl:value-of select=\"@requireUniqueInterchangeReferences\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@requireUniqueMessageNumbers\">\r\n" + 
		 		"			<xsl:attribute name=\"requireUniqueMessages\">\r\n" + 
		 		"				<xsl:value-of select=\"@requireUniqueMessageNumbers\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@characterEncoding\">\r\n" + 
		 		"			<xsl:attribute name=\"characterEncoding\">\r\n" + 
		 		"				<xsl:value-of select=\"@characterEncoding\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sendSyntaxVersion\">\r\n" + 
		 		"			<xsl:attribute name=\"sendSyntaxVersion\">\r\n" + 
		 		"				<xsl:value-of select=\"@sendSyntaxVersion\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@lineEnding\">\r\n" + 
		 		"			<xsl:attribute name=\"lineEnding\">\r\n" + 
		 		"				<xsl:value-of select=\"@lineEnding\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@alwaysSendUNA\">\r\n" + 
		 		"			<xsl:attribute name=\"alwaysSendUNA\">\r\n" + 
		 		"				<xsl:value-of select=\"@alwaysSendUNA\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sendUniqueMessageNumbers\">\r\n" + 
		 		"			<xsl:attribute name=\"sendUniqueMessageNumbers\">\r\n" + 
		 		"				<xsl:value-of select=\"@sendUniqueMessageNumbers\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@initialInterchangeNumber\">\r\n" + 
		 		"			<xsl:attribute name=\"initialInterchangeReference\">\r\n" + 
		 		"				<xsl:value-of select=\"@initialInterchangeNumber\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@initialMessageNumber\">\r\n" + 
		 		"			<xsl:attribute name=\"initialMessageReference\">\r\n" + 
		 		"				<xsl:value-of select=\"@initialMessageNumber\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@defaultTestIndicator\">\r\n" + 
		 		"			<xsl:attribute name=\"testIndicator\">\r\n" + 
		 		"				<xsl:value-of select=\"@defaultTestIndicator\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"edifact-edi:schemas/@ref\">\r\n" + 
		 		"			<xsl:attribute name=\"schemas\">\r\n" + 
		 		"				<xsl:value-of select=\"edifact-edi:schemas/@ref\"/>\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</edifact:config>");
		 
		 transformerOf.put("edifact-edi:read", "<edifact:read>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@ediContent-ref\">\r\n" + 
		 		"		<edifact:read-content >\r\n" + 
		 		"			<xsl:value-of select=\"@ediContent-ref\" />\r\n" + 
		 		"		</edifact:read-content >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</edifact:read>");
		 
		 transformerOf.put("edifact-edi:write", "<edifact:write>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"edifact-edi:map/@ref\">\r\n" + 
		 		"			<edifact:write-content >\r\n" + 
		 		"				<xsl:value-of select=\"edifact-edi:map/@ref\"/>\r\n" + 
		 		"			</edifact:write-content >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"</edifact:write>");
		 
		 transformerOf.put("successfactors:config", "<successfactors:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<successfactors:basic-connection>\r\n" + 
		 		"		<xsl:if test=\"@companyId\">\r\n" + 
		 		"			<xsl:attribute name=\"companyId\">\r\n" + 
		 		"				<xsl:value-of select=\"@companyId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"userName\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@receiveTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionIdleTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiveTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost or @proxyPort or @proxyUsername or @proxyPassword\">\r\n" + 
		 		"		<successfactors:proxy-config >\r\n" + 
		 		"		<successfactors:default>\r\n" + 
		 		"			<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"				<xsl:attribute name=\"host\">\r\n" + 
		 		"					<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"				<xsl:attribute name=\"port\">\r\n" + 
		 		"					<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"				<xsl:attribute name=\"username\">\r\n" + 
		 		"					<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"				<xsl:attribute name=\"password\">\r\n" + 
		 		"					<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			</successfactors:default>\r\n" + 
		 		"		</successfactors:proxy-config >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</successfactors:basic-connection>\r\n" + 
		 		"</successfactors:config>");
		 
		 transformerOf.put("successfactors:insert", "<successfactors:create-entity>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"entitySetName\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<successfactors:properties >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</successfactors:properties >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</successfactors:create-entity>");
		 
		 transformerOf.put("successfactors:delete", "<successfactors:delete-entity>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"entitySetName\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<successfactors:key-properties >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</successfactors:key-properties >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</successfactors:delete-entity>");
		 
		 transformerOf.put("successfactors:update", "<successfactors:update>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"entitySetName\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<successfactors:properties >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</successfactors:properties >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</successfactors:update>");
		 
		 transformerOf.put("successfactors:upsert", "<successfactors:upsert-entity>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@type\">\r\n" + 
		 		"		<xsl:attribute name=\"entitySetName\">\r\n" + 
		 		"			<xsl:value-of select=\"@type\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@input-ref\">\r\n" + 
		 		"		<successfactors:properties >\r\n" + 
		 		"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
		 		"		</successfactors:properties >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</successfactors:upsert-entity>");
		 
		 transformerOf.put("sns:config", "<sns:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<sns:basic-connection>\r\n" + 
		 		"		<xsl:if test=\"@testTopicArn\">\r\n" + 
		 		"			<xsl:attribute name=\"testTopic\">\r\n" + 
		 		"				<xsl:value-of select=\"@testTopicArn\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@accessKey\">\r\n" + 
		 		"			<xsl:attribute name=\"accessKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@accessKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@secretKey\">\r\n" + 
		 		"			<xsl:attribute name=\"secretKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@secretKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"			<xsl:attribute name=\"tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"				<xsl:value-of select=\"@tryDefaultAWSCredentialsProviderChain\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@region\">\r\n" + 
		 		"			<xsl:attribute name=\"region\">\r\n" + 
		 		"				<xsl:value-of select=\"@region\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyDomain\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyDomain\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyDomain\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyWorkstation\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyWorkstation\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyWorkstation\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@maxConnections\">\r\n" + 
		 		"			<xsl:attribute name=\"maxConnections\">\r\n" + 
		 		"				<xsl:value-of select=\"@maxConnections\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@socketTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"socketTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@socketTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</sns:basic-connection>\r\n" + 
		 		"</sns:config>");
		 
		 transformerOf.put("sns:role-config", "<sns:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@testTopicArn\">\r\n" + 
		 		"		<xsl:attribute name=\"defaultTopicArn\">\r\n" + 
		 		"			<xsl:value-of select=\"@testTopicArn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<sns:role-connection>\r\n" + 
		 		"		<xsl:if test=\"@roleARN\">\r\n" + 
		 		"			<xsl:attribute name=\"roleARN\">\r\n" + 
		 		"				<xsl:value-of select=\"@roleARN\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@accessKey\">\r\n" + 
		 		"			<xsl:attribute name=\"accessKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@accessKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@secretKey\">\r\n" + 
		 		"			<xsl:attribute name=\"secretKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@secretKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"			<xsl:attribute name=\"tryDefaultAWSCredentialsProviderChain\">\r\n" + 
		 		"				<xsl:value-of select=\"@tryDefaultAWSCredentialsProviderChain\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@region\">\r\n" + 
		 		"			<xsl:attribute name=\"region\">\r\n" + 
		 		"				<xsl:value-of select=\"@region\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyDomain\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyDomain\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyDomain\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyWorkstation\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyWorkstation\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyWorkstation\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@maxConnections\">\r\n" + 
		 		"			<xsl:attribute name=\"maxConnections\">\r\n" + 
		 		"				<xsl:value-of select=\"@maxConnections\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@socketTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"socketTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@socketTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</sns:role-connection>\r\n" + 
		 		"</sns:config>");
		 
		 transformerOf.put("sns:confirm-subscription", "<sns:confirm-subscription>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:confirm-subscription\">\r\n" + 
		 		"		<xsl:if test=\"sns:confirm-subscription/@topicArn\">\r\n" + 
		 		"			<xsl:attribute name=\"topicArn\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:confirm-subscription/@topicArn\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sns:confirm-subscription/@token\">\r\n" + 
		 		"			<xsl:attribute name=\"token\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:confirm-subscription/@token\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sns:confirm-subscription/@authenticateOnUnsubscribe\">\r\n" + 
		 		"			<xsl:attribute name=\"authenticateOnUnsubscribe\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:confirm-subscription/@authenticateOnUnsubscribe\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:confirm-subscription>");
		 
		 transformerOf.put("sns:create-platform-application", "<sns:create-platform-application>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:create-platform-application\">\r\n" + 
		 		"		<xsl:if test=\"sns:create-platform-application/@name\">\r\n" + 
		 		"			<xsl:attribute name=\"name\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:create-platform-application/@name\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sns:create-platform-application/@platform\">\r\n" + 
		 		"			<xsl:attribute name=\"platform\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:create-platform-application/@platform\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sns:create-platform-application/sns:attributes/@ref\">\r\n" + 
		 		"			<xsl:attribute name=\"attributes\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:create-platform-application/sns:attributes/@ref\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:create-platform-application>");
		 
		 transformerOf.put("sns:create-platform-endpoint", "<sns:create-platform-endpoint>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:create-platform-endpoint\">\r\n" + 
		 		"		<xsl:if test=\"sns:create-platform-endpoint/@platformApplicationArn\">\r\n" + 
		 		"			<xsl:attribute name=\"platformApplicationArn\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:create-platform-endpoint/@platformApplicationArn\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sns:create-platform-endpoint/@token\">\r\n" + 
		 		"			<xsl:attribute name=\"token\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:create-platform-endpoint/@token\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sns:create-platform-endpoint/@customUserData\">\r\n" + 
		 		"			<xsl:attribute name=\"customUserData\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:create-platform-endpoint/@customUserData\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"sns:create-platform-endpoint/sns:attributes/@ref\">\r\n" + 
		 		"			<xsl:attribute name=\"attributes\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:create-platform-endpoint/sns:attributes/@ref\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:create-platform-endpoint>");
		 
		 transformerOf.put("sns:list-endpoints-by-platform-application", "<sns:list-endpoints-by-platform-application>\r\n" + 
		 		"		<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:if test=\"sns:endpoints-by-platform\">\r\n" + 
		 		"			<xsl:if test=\"sns:endpoints-by-platform/@platformApplicationArn\">\r\n" + 
		 		"				<xsl:attribute name=\"arn\">\r\n" + 
		 		"					<xsl:value-of select=\"sns:endpoints-by-platform/@platformApplicationArn\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</sns:list-endpoints-by-platform-application>");
		 
		 transformerOf.put("sns:list-subscriptions-by-topic", "<sns:list-subscriptions-by-topic>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:subscriptions-by-topic\">\r\n" + 
		 		"		<xsl:if test=\"sns:subscriptions-by-topic/@topicArn\">\r\n" + 
		 		"			<xsl:attribute name=\"arn\">\r\n" + 
		 		"				<xsl:value-of select=\"sns:subscriptions-by-topic/@topicArn\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:list-subscriptions-by-topic>\r\n" + 
		 		"");
		 
		 transformerOf.put("sns:publish", "<sns:publish>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:publish/@topicArn\">\r\n" + 
		 		"		<xsl:attribute name=\"topicArn\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:publish/@topicArn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sns:publish/@message\">\r\n" + 
		 		"		<sns:message >\r\n" + 
		 		"			<xsl:value-of select=\"sns:publish/@message\" />\r\n" + 
		 		"		</sns:message >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:publish>");
		 
		 transformerOf.put("sns:remove-permission", "<sns:remove-permission>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:remove-permission/@topicArn\">\r\n" + 
		 		"		<xsl:attribute name=\"topicArn\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:remove-permission/@topicArn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sns:remove-permission/@label\">\r\n" + 
		 		"		<xsl:attribute name=\"label\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:remove-permission/@label\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:remove-permission>");
		 
		 transformerOf.put("sns:set-endpoint-attributes", "<sns:set-endpoint-attributes>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:endpoint-attributes/@endpointArn\">\r\n" + 
		 		"		<sns:endpoint >\r\n" + 
		 		"			<xsl:value-of select=\"sns:endpoint-attributes/@endpointArn\" />\r\n" + 
		 		"		</sns:endpoint >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:set-endpoint-attributes>");
		 
		 transformerOf.put("sns:set-platform-application-attributes", "<sns:set-platform-application-attributes>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:platform-application-attributes/sns:attributes/@ref\">\r\n" + 
		 		"		<sns:platform-application-attributes >\r\n" + 
		 		"			<xsl:value-of select=\"sns:platform-application-attributes/sns:attributes/@ref\" />\r\n" + 
		 		"		</sns:platform-application-attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:set-platform-application-attributes>");
		 
		 transformerOf.put("sns:set-subscription-attributes", "<sns:set-subscription-attributes>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:subscription-attributes/@subscriptionArn\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionArn\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:subscription-attributes/@subscriptionArn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sns:subscription-attributes/@attributeName\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeName\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:subscription-attributes/@attributeName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sns:subscription-attributes/@attributeValue\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeValue\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:subscription-attributes/@attributeValue\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:set-subscription-attributes>");
		 
		 transformerOf.put("sns:set-topic-attributes", "<sns:set-topic-attributes>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:topic-attributes/@topicArn\">\r\n" + 
		 		"		<xsl:attribute name=\"topicArn\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:topic-attributes/@topicArn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sns:topic-attributes/@attributeName\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeName\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:topic-attributes/@attributeName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sns:topic-attributes/@attributeValue\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeValue\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:topic-attributes/@attributeValue\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:set-topic-attributes>");
		 
		 transformerOf.put("sns:subscribe", "<sns:subscribe>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"sns:subscribe/@topicArn\">\r\n" + 
		 		"		<xsl:attribute name=\"topicArn\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:subscribe/@topicArn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sns:subscribe/@protocol\">\r\n" + 
		 		"		<xsl:attribute name=\"protocol\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:subscribe/@protocol\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"sns:subscribe/@endpoint\">\r\n" + 
		 		"		<xsl:attribute name=\"endpoint\">\r\n" + 
		 		"			<xsl:value-of select=\"sns:subscribe/@endpoint\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</sns:subscribe>");
		 
		 transformerOf.put("dynamicscrm:claims-connection-config", "<microsoft-dynamics-crm:dynamics-crm-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<microsoft-dynamics-crm:claims-connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@organizationServiceUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"organizationServiceUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@organizationServiceUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
		 		"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyConnection\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyConnection\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='dynamicscrm:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='dynamicscrm:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</microsoft-dynamics-crm:claims-connection>\r\n" + 
		 		"</microsoft-dynamics-crm:dynamics-crm-config>");
		 
		 transformerOf.put("dynamicscrm:associate", "<microsoft-dynamics-crm:associate>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@relationshipEntityRoleIsReferenced\">\r\n" + 
		 		"		<xsl:attribute name=\"relationshipEntityRoleIsReferenced\">\r\n" + 
		 		"			<xsl:value-of select=\"@relationshipEntityRoleIsReferenced\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@relationshipSchemaName\">\r\n" + 
		 		"		<xsl:attribute name=\"relationshipSchemaName\">\r\n" + 
		 		"			<xsl:value-of select=\"@relationshipSchemaName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamicscrm:related-entities-ids/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"relatedEntitiesIds\">\r\n" + 
		 		"			<xsl:value-of select=\"dynamicscrm:related-entities-ids/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:associate>");
		 
		 transformerOf.put("dynamicscrm:kerberos-connection-config", "<microsoft-dynamics-crm:dynamics-crm-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<microsoft-dynamics-crm:kerberos-connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@organizationServiceUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"organizationServiceUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@organizationServiceUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@spn\">\r\n" + 
		 		"			<xsl:attribute name=\"spn\">\r\n" + 
		 		"				<xsl:value-of select=\"@spn\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@realm\">\r\n" + 
		 		"			<xsl:attribute name=\"realm\">\r\n" + 
		 		"				<xsl:value-of select=\"@realm\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@kdc\">\r\n" + 
		 		"			<xsl:attribute name=\"kdc\">\r\n" + 
		 		"				<xsl:value-of select=\"@kdc\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
		 		"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyConnection\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyConnection\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='dynamicscrm:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='dynamicscrm:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</microsoft-dynamics-crm:kerberos-connection>\r\n" + 
		 		"</microsoft-dynamics-crm:dynamics-crm-config>");
		 
		 transformerOf.put("dynamicscrm:create", "<microsoft-dynamics-crm:create>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"dynamicscrm:attributes/@ref\">\r\n" + 
		 		"		<microsoft-dynamics-crm:attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamicscrm:attributes/@ref\" />\r\n" + 
		 		"		</microsoft-dynamics-crm:attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:create>");
		 
		 transformerOf.put("dynamicscrm:ntlm-connection-config", "<microsoft-dynamics-crm:dynamics-crm-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<microsoft-dynamics-crm:ntlm-connection>\r\n" + 
		 		"		<xsl:if test=\"@gatewayRouterServiceAddress\">\r\n" + 
		 		"			<xsl:attribute name=\"gatewayRouterServiceAddress\">\r\n" + 
		 		"				<xsl:value-of select=\"@gatewayRouterServiceAddress\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@organizationServiceUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"organizationServiceUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@organizationServiceUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
		 		"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyConnection\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyConnection\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='dynamicscrm:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='dynamicscrm:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</microsoft-dynamics-crm:ntlm-connection>\r\n" + 
		 		"</microsoft-dynamics-crm:dynamics-crm-config>");
		 
		 transformerOf.put("dynamicscrm:create-multiple", "<microsoft-dynamics-crm:create-multiple>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@useSingleTransaction\">\r\n" + 
		 		"		<xsl:attribute name=\"useSingleTransaction\">\r\n" + 
		 		"			<xsl:value-of select=\"@useSingleTransaction\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamicscrm:attributes-list/@ref\">\r\n" + 
		 		"		<microsoft-dynamics-crm:list-of-attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamicscrm:attributes-list/@ref\" />\r\n" + 
		 		"		</microsoft-dynamics-crm:list-of-attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:create-multiple>");
		 
		 transformerOf.put("dynamicscrm:online-connection-config", "<microsoft-dynamics-crm:dynamics-crm-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<microsoft-dynamics-crm:online-connection>\r\n" + 
		 		"		<xsl:if test=\"@authenticationRetries\">\r\n" + 
		 		"			<xsl:attribute name=\"authenticationRetries\">\r\n" + 
		 		"				<xsl:value-of select=\"@authenticationRetries\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@organizationServiceUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"organizationServiceUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@organizationServiceUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
		 		"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@stsMetadataUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"stsMetadataUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@stsMetadataUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@stsUsernamePortQname\">\r\n" + 
		 		"			<xsl:attribute name=\"stsUsernamePortQname\">\r\n" + 
		 		"				<xsl:value-of select=\"@stsUsernamePortQname\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyConnection\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyConnection\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='dynamicscrm:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='dynamicscrm:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</microsoft-dynamics-crm:online-connection>\r\n" + 
		 		"</microsoft-dynamics-crm:dynamics-crm-config>");
		 
		 transformerOf.put("dynamicscrm:delete", "<microsoft-dynamics-crm:delete>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:delete>");
		 
		 transformerOf.put("dynamicscrm:delete-multiple", "<microsoft-dynamics-crm:delete-multiple>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@useSingleTransaction\">\r\n" + 
		 		"		<xsl:attribute name=\"useSingleTransaction\">\r\n" + 
		 		"			<xsl:value-of select=\"@useSingleTransaction\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamicscrm:ids/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"ids\">\r\n" + 
		 		"			<xsl:value-of select=\"dynamicscrm:ids/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:delete-multiple>");
		 
		 transformerOf.put("dynamicscrm:disassociate", "<microsoft-dynamics-crm:disassociate>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@relationshipEntityRoleIsReferenced\">\r\n" + 
		 		"		<xsl:attribute name=\"relationshipEntityRoleIsReferenced\">\r\n" + 
		 		"			<xsl:value-of select=\"@relationshipEntityRoleIsReferenced\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@relationshipSchemaName\">\r\n" + 
		 		"		<xsl:attribute name=\"relationshipSchemaName\">\r\n" + 
		 		"			<xsl:value-of select=\"@relationshipSchemaName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamicscrm:related-entities-ids/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"relatedEntitiesIds\">\r\n" + 
		 		"			<xsl:value-of select=\"dynamicscrm:related-entities-ids/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:disassociate>");
		 
		 transformerOf.put("dynamicscrm:execute", "<microsoft-dynamics-crm:execute>\r\n" + 
		 		"	<xsl:if test=\"@requestName\">\r\n" + 
		 		"		<xsl:attribute name=\"requestName\">\r\n" + 
		 		"			<xsl:value-of select=\"@requestName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@requestId\">\r\n" + 
		 		"		<microsoft-dynamics-crm:request-parameters >\r\n" + 
		 		"			<xsl:value-of select=\"@requestId\" />\r\n" + 
		 		"		</microsoft-dynamics-crm:request-parameters >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:execute>");
		 
		 transformerOf.put("dynamicscrm:execute-multiple", "<microsoft-dynamics-crm:execute-multiple>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@useSingleTransaction\">\r\n" + 
		 		"		<xsl:attribute name=\"useSingleTransaction\">\r\n" + 
		 		"			<xsl:value-of select=\"@useSingleTransaction\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@requestId\">\r\n" + 
		 		"		<microsoft-dynamics-crm:requests>\r\n" + 
		 		"			<xsl:value-of select=\"@requestId\" />\r\n" + 
		 		"		</microsoft-dynamics-crm:requests>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:execute-multiple>");
		 
		 transformerOf.put("dynamicscrm:retrieve", "<microsoft-dynamics-crm:retrieve>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:retrieve>");
		 
		 transformerOf.put("dynamicscrm:retrieve-multiple-by-query", "<microsoft-dynamics-crm:retrieve-multiple-by-query>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"itemsPerPage\">\r\n" + 
		 		"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@singlePageNumber\">\r\n" + 
		 		"		<xsl:attribute name=\"singlePageNumber\">\r\n" + 
		 		"			<xsl:value-of select=\"@singlePageNumber\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@query\">\r\n" + 
		 		"		<microsoft-dynamics-crm:query >\r\n" + 
		 		"			<xsl:value-of select=\"@query\" />\r\n" + 
		 		"		</microsoft-dynamics-crm:query >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:retrieve-multiple-by-query>");
		 
		 transformerOf.put("dynamicscrm:update", "<microsoft-dynamics-crm:update>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamicscrm:attributes/@ref\">\r\n" + 
		 		"		<microsoft-dynamics-crm:attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamicscrm:attributes/@ref\" />\r\n" + 
		 		"		</microsoft-dynamics-crm:attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:update>");
		 
		 transformerOf.put("dynamicscrm:update-multiple", "<microsoft-dynamics-crm:update-multiple>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@useSingleTransaction\">\r\n" + 
		 		"		<xsl:attribute name=\"useSingleTransaction\">\r\n" + 
		 		"			<xsl:value-of select=\"@useSingleTransaction\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamicscrm:attributes-list/@ref\">\r\n" + 
		 		"		<microsoft-dynamics-crm:list-of-attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamicscrm:attributes-list/@ref\" />\r\n" + 
		 		"		</microsoft-dynamics-crm:list-of-attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-crm:update-multiple>");
		 
		 transformerOf.put("dynamics-nav:config-ntlm", "<nav:dynamics-nav-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<nav:ntlm-connection>\r\n" + 
		 		"		<xsl:if test=\"@domain\">\r\n" + 
		 		"			<xsl:attribute name=\"domain\">\r\n" + 
		 		"				<xsl:value-of select=\"@domain\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@soapUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"soapUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@soapUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@odataUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"odataUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@odataUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@companyName\">\r\n" + 
		 		"			<xsl:attribute name=\"companyName\">\r\n" + 
		 		"				<xsl:value-of select=\"@companyName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
		 		"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='dynamics-nav:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='dynamics-nav:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</nav:ntlm-connection>\r\n" + 
		 		"</nav:dynamics-nav-config>");
		 
		 transformerOf.put("dynamics-nav:codeunit-operation", "<nav:codeunit-operation>\r\n" + 
		 		"	<xsl:if test=\"@serviceOperation\">\r\n" + 
		 		"		<xsl:attribute name=\"service\">\r\n" + 
		 		"			<xsl:value-of select=\"substring-before(@serviceOperation, '||')\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"operation\">\r\n" + 
		 		"			<xsl:value-of select=\"substring-after(@serviceOperation, '||')\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@entity-ref\">\r\n" + 
		 		"		<nav:entity >\r\n" + 
		 		"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
		 		"		</nav:entity>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</nav:codeunit-operation>");
		 
		 transformerOf.put("dynamics-nav:config-oauth-token", "<nav:dynamics-nav-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<nav:oauth-connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@accessToken\">\r\n" + 
		 		"			<xsl:attribute name=\"accessToken\">\r\n" + 
		 		"				<xsl:value-of select=\"@accessToken\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@soapUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"soapUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@soapUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@odataUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"odataUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@odataUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@companyName\">\r\n" + 
		 		"			<xsl:attribute name=\"companyName\">\r\n" + 
		 		"				<xsl:value-of select=\"@companyName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
		 		"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='dynamics-nav:connection-pooling-profile']\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='dynamics-nav:connection-pooling-profile']/@*\"/>\r\n" + 
		 		"			</pooling-profile>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</nav:oauth-connection>\r\n" + 
		 		"</nav:dynamics-nav-config>");
		 
		 transformerOf.put("dynamics-nav:odata-query", "<nav:odata-query>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"fetchSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@query\">\r\n" + 
		 		"		<nav:query >\r\n" + 
		 		"			<xsl:value-of select=\"@query\" />\r\n" + 
		 		"		</nav:query>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</nav:odata-query>");
		 
		 transformerOf.put("dynamics-nav:page-operation", "<nav:page-operation>\r\n" + 
		 		"	<xsl:if test=\"@serviceOperation\">\r\n" + 
		 		"		<xsl:attribute name=\"service\">\r\n" + 
		 		"			<xsl:value-of select=\"substring-before(@serviceOperation, '||')\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"operation\">\r\n" + 
		 		"			<xsl:value-of select=\"substring-after(@serviceOperation, '||')\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@entity-ref\">\r\n" + 
		 		"		<nav:entity >\r\n" + 
		 		"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
		 		"		</nav:entity>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</nav:page-operation>");
		 
		 transformerOf.put("oracle-ebs:jmsconfig", "<oracle-ebs:jms-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<oracle-ebs:jms-parameter-config-connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@host\">\r\n" + 
		 		"			<xsl:attribute name=\"host\">\r\n" + 
		 		"				<xsl:value-of select=\"@host\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@port\">\r\n" + 
		 		"			<xsl:attribute name=\"port\">\r\n" + 
		 		"				<xsl:value-of select=\"@port\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sid\">\r\n" + 
		 		"			<xsl:attribute name=\"sid\">\r\n" + 
		 		"				<xsl:value-of select=\"@sid\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</oracle-ebs:jms-parameter-config-connection>\r\n" + 
		 		"</oracle-ebs:jms-config>");
		 
		 transformerOf.put("oracle-ebs:business-events", "<oracle-ebs:business-events-source>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@durableSubscription\">\r\n" + 
		 		"		<xsl:attribute name=\"durableSubscription\">\r\n" + 
		 		"			<xsl:value-of select=\"@durableSubscription\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@subscriptionName\">\r\n" + 
		 		"		<xsl:attribute name=\"subscriptionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@subscriptionName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:business-events-source>");
		 
		 transformerOf.put("oracle-ebs:config", "<oracle-ebs:web-services-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<oracle-ebs:web-services-connection>\r\n" + 
		 		"		<xsl:if test=\"@trustStorePath\">\r\n" + 
		 		"			<xsl:attribute name=\"trustStoreLocation\">\r\n" + 
		 		"				<xsl:value-of select=\"@trustStorePath\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@trustStorePassword\">\r\n" + 
		 		"			<xsl:attribute name=\"trustStorePassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@trustStorePassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCNCheck\">\r\n" + 
		 		"			<xsl:attribute name=\"disableCNCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCNCheck\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@host\">\r\n" + 
		 		"			<xsl:attribute name=\"host\">\r\n" + 
		 		"				<xsl:value-of select=\"@host\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@port\">\r\n" + 
		 		"			<xsl:attribute name=\"port\">\r\n" + 
		 		"				<xsl:value-of select=\"@port\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sslEnabled\">\r\n" + 
		 		"			<xsl:attribute name=\"sslEnabled\">\r\n" + 
		 		"				<xsl:value-of select=\"@sslEnabled\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@responsibilityName\">\r\n" + 
		 		"			<xsl:attribute name=\"responsibilityName\">\r\n" + 
		 		"				<xsl:value-of select=\"@responsibilityName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@responsibilityApplName\">\r\n" + 
		 		"			<xsl:attribute name=\"responsibilityApplicationName\">\r\n" + 
		 		"				<xsl:value-of select=\"@responsibilityApplName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@securityGroupName\">\r\n" + 
		 		"			<xsl:attribute name=\"securityGroupName\">\r\n" + 
		 		"				<xsl:value-of select=\"@securityGroupName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@nlsLanguage\">\r\n" + 
		 		"			<xsl:attribute name=\"nlsLanguage\">\r\n" + 
		 		"				<xsl:value-of select=\"@nlsLanguage\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@orgId\">\r\n" + 
		 		"			<xsl:attribute name=\"orgId\">\r\n" + 
		 		"				<xsl:value-of select=\"@orgId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</oracle-ebs:web-services-connection>\r\n" + 
		 		"</oracle-ebs:web-services-config>");
		 
		 transformerOf.put("oracle-ebs:create-email", "<oracle-ebs:create-email>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@email-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@email-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-email>");
		 
		 transformerOf.put("oracle-ebs:create-location", "<oracle-ebs:create-location>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@location-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@location-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-location>");
		 
		 transformerOf.put("oracle-ebs:create-organization", "<oracle-ebs:create-organization>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@organization-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@organization-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-organization>");
		 
		 transformerOf.put("oracle-ebs:create-organization-contact", "<oracle-ebs:create-organization-contact>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@contact-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@contact-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-organization-contact>");
		 
		 transformerOf.put("oracle-ebs:create-organization-customer", "<oracle-ebs:create-organization-customer>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@customer-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@customer-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-organization-customer>");
		 
		 transformerOf.put("oracle-ebs:create-party-site", "<oracle-ebs:create-party-site>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@partySite-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@partySite-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-party-site>");
		 
		 transformerOf.put("oracle-ebs:create-person", "<oracle-ebs:create-person>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@person-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@person-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-person>");
		 
		 transformerOf.put("oracle-ebs:create-person-customer", "<oracle-ebs:create-person-customer>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@personCustomer-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@personCustomer-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-person-customer>");
		 
		 transformerOf.put("oracle-ebs:create-phone", "<oracle-ebs:create-phone>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@phone-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@phone-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-phone>");
		 
		 transformerOf.put("oracle-ebs:create-relationship", "<oracle-ebs:create-relationship>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@relationship-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@relationship-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-relationship>");
		 
		 transformerOf.put("oracle-ebs:create-web", "<oracle-ebs:create-web>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@web-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@web-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:create-web>");
		 
		 transformerOf.put("oracle-ebs:find-parties", "<oracle-ebs:find-parties>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@body-ref\">\r\n" + 
		 		"		<oracle-ebs:criteria >\r\n" + 
		 		"			<xsl:value-of select=\"@body-ref\" />\r\n" + 
		 		"		</oracle-ebs:criteria>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:find-parties>");
		 
		 transformerOf.put("oracle-ebs:save-email", "<oracle-ebs:save-email>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@email-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@email-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-email>\r\n" + 
		 		"");
		 
		 transformerOf.put("oracle-ebs:save-location", "<oracle-ebs:save-location>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@location-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@location-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-location>");
		 
		 transformerOf.put("oracle-ebs:save-organization", "<oracle-ebs:save-organization>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@organization-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@organization-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-organization>");
		 
		 transformerOf.put("oracle-ebs:save-organization-contact", "<oracle-ebs:save-organization-contact>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@contact-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@contact-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-organization-contact>");
		 
		 transformerOf.put("oracle-ebs:save-organization-customer", "<oracle-ebs:save-organization-customer>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@customer-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@customer-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-organization-customer>");
		 
		 transformerOf.put("oracle-ebs:save-party-site", "<oracle-ebs:save-party-site>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@partySite-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@partySite-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-party-site>");
		 
		 transformerOf.put("oracle-ebs:save-person", "<oracle-ebs:save-person>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@person-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@person-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-person>");
		 
		 transformerOf.put("oracle-ebs:save-person-customer", "<oracle-ebs:save-person-customer>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@personCustomer-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@personCustomer-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-person-customer>");
		 
		 transformerOf.put("oracle-ebs:save-phone", "<oracle-ebs:save-phone>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@phone-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@phone-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-phone>");
		 
		 transformerOf.put("oracle-ebs:save-relationship", "<oracle-ebs:save-relationship>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@relationship-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@relationship-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-relationship>");
		 
		 transformerOf.put("oracle-ebs:save-web", "<oracle-ebs:save-web>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@web-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@web-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:save-web>");
		 
		 transformerOf.put("oracle-ebs:update-email", "<oracle-ebs:update-email>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@email-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@email-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-email>");
		 
		 transformerOf.put("oracle-ebs:update-location", "<oracle-ebs:update-location>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@location-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@location-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-location>");
		 
		 transformerOf.put("oracle-ebs:update-organization", "<oracle-ebs:update-organization>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@organization-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@organization-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-organization>");
		 
		 transformerOf.put("oracle-ebs:update-organization-contact", "<oracle-ebs:update-organization-contact>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@contact-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@contact-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-organization-contact>");
		 
		 transformerOf.put("oracle-ebs:update-organization-customer", "<oracle-ebs:update-organization-customer>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@customer-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@customer-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-organization-customer>");
		 
		 transformerOf.put("oracle-ebs:update-party-site", "<oracle-ebs:update-party-site>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@partySite-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@partySite-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-party-site>");
		 
		 transformerOf.put("oracle-ebs:update-person", "<oracle-ebs:update-person>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@person-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@person-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-person>");
		 
		 transformerOf.put("oracle-ebs:update-person-customer", "<oracle-ebs:update-person-customer>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@personCustomer-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@personCustomer-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-person-customer>");
		 
		 transformerOf.put("oracle-ebs:update-phone", "<oracle-ebs:update-phone>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@phone-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@phone-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-phone>");
		 
		 transformerOf.put("oracle-ebs:update-relationship", "<oracle-ebs:update-relationship>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@relationship-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@relationship-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-relationship>");
		 
		 transformerOf.put("oracle-ebs:update-web", "<oracle-ebs:update-web>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@web-ref\">\r\n" + 
		 		"		<oracle-ebs:content >\r\n" + 
		 		"			<xsl:value-of select=\"@web-ref\" />\r\n" + 
		 		"		</oracle-ebs:content>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:update-web>");
		 
		 transformerOf.put("oracle-ebs:xml-gateway", "<oracle-ebs:xml-gateway>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@messageType\">\r\n" + 
		 		"		<xsl:attribute name=\"messageType\">\r\n" + 
		 		"			<xsl:value-of select=\"@messageType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@messageStandard\">\r\n" + 
		 		"		<xsl:attribute name=\"messageStandard\">\r\n" + 
		 		"			<xsl:value-of select=\"@messageStandard\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@transactionType\">\r\n" + 
		 		"		<xsl:attribute name=\"transactionType\">\r\n" + 
		 		"			<xsl:value-of select=\"@transactionType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@transactionSubtype\">\r\n" + 
		 		"		<xsl:attribute name=\"transactionSubtype\">\r\n" + 
		 		"			<xsl:value-of select=\"@transactionSubtype\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@documentNumber\">\r\n" + 
		 		"		<xsl:attribute name=\"documentNumber\">\r\n" + 
		 		"			<xsl:value-of select=\"@documentNumber\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@partyId\">\r\n" + 
		 		"		<xsl:attribute name=\"partyId\">\r\n" + 
		 		"			<xsl:value-of select=\"@partyId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@partySiteId\">\r\n" + 
		 		"		<xsl:attribute name=\"partySiteId\">\r\n" + 
		 		"			<xsl:value-of select=\"@partySiteId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@body-ref\">\r\n" + 
		 		"		<oracle-ebs:body >\r\n" + 
		 		"			<xsl:value-of select=\"@body-ref\" />\r\n" + 
		 		"		</oracle-ebs:body>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs:xml-gateway>");
		 
		 transformerOf.put("oracle-ebs:jmsdburlconfig", "<oracle-ebs:jms-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<oracle-ebs:jms-url-config-connection>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@databaseUrl\">\r\n" + 
		 		"			<xsl:attribute name=\"databaseUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@databaseUrl\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</oracle-ebs:jms-url-config-connection>\r\n" + 
		 		"</oracle-ebs:jms-config>");
		 
		 transformerOf.put("oracle-ebs:xml-gateway-outbound", "<oracle-ebs:xml-gateway-outbound-source>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</oracle-ebs:xml-gateway-outbound-source>");
		 
		 transformerOf.put("oracle-ebs122:config", "<oracle-ebs122:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<oracle-ebs122:plsql-connection>\r\n" + 
		 		"		<xsl:if test=\"@host\">\r\n" + 
		 		"			<xsl:attribute name=\"host\">\r\n" + 
		 		"				<xsl:value-of select=\"@host\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@port\">\r\n" + 
		 		"			<xsl:attribute name=\"port\">\r\n" + 
		 		"				<xsl:value-of select=\"@port\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@sslEnabled\">\r\n" + 
		 		"			<xsl:attribute name=\"sslEnabled\">\r\n" + 
		 		"				<xsl:value-of select=\"@sslEnabled\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@restServiceLocatorAlias\">\r\n" + 
		 		"			<xsl:attribute name=\"restServiceLocatorAlias\">\r\n" + 
		 		"				<xsl:value-of select=\"@restServiceLocatorAlias\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@fndWebSecAlias\">\r\n" + 
		 		"			<xsl:attribute name=\"fndWebSecAlias\">\r\n" + 
		 		"				<xsl:value-of select=\"@fndWebSecAlias\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@responsibility\">\r\n" + 
		 		"			<xsl:attribute name=\"responsibility\">\r\n" + 
		 		"				<xsl:value-of select=\"@responsibility\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@respApplication\">\r\n" + 
		 		"			<xsl:attribute name=\"respApplication\">\r\n" + 
		 		"				<xsl:value-of select=\"@respApplication\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@securityGroup\">\r\n" + 
		 		"			<xsl:attribute name=\"securityGroup\">\r\n" + 
		 		"				<xsl:value-of select=\"@securityGroup\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@nlsLanguage\">\r\n" + 
		 		"			<xsl:attribute name=\"nlsLanguage\">\r\n" + 
		 		"				<xsl:value-of select=\"@nlsLanguage\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@orgId\">\r\n" + 
		 		"			<xsl:attribute name=\"orgId\">\r\n" + 
		 		"				<xsl:value-of select=\"@orgId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</oracle-ebs122:plsql-connection>\r\n" + 
		 		"</oracle-ebs122:config>");
		 
		 transformerOf.put("oracle-ebs122:invoke-pl-sql-rest-service", "<oracle-ebs122:invoke-pl-sql-rest-service>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@wadlOperation\">\r\n" + 
		 		"		<xsl:attribute name=\"plSql\">\r\n" + 
		 		"			<xsl:value-of select=\"substring-before(@wadlOperation, '||')\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"operation\">\r\n" + 
		 		"			<xsl:value-of select=\"substring-after(@wadlOperation, '||')\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@payload-ref\">\r\n" + 
		 		"		<oracle-ebs122:input >\r\n" + 
		 		"			<xsl:value-of select=\"@payload-ref\" />\r\n" + 
		 		"		</oracle-ebs122:input>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</oracle-ebs122:invoke-pl-sql-rest-service>");
		 
		 transformerOf.put("concur:config", "<mule-sap-concur-connector:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</mule-sap-concur-connector:config>");
		 
		 transformerOf.put("concur:create-receipt-image", "<mule-sap-concur-connector:create-receipt-image>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@image-ref\">\r\n" + 
		 		"		<mule-sap-concur-connector:create-receipt-image-request-data >\r\n" + 
		 		"			<xsl:value-of select=\"@image-ref\" />\r\n" + 
		 		"		</mule-sap-concur-connector:create-receipt-image-request-data >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:create-receipt-image>");
		 
		 transformerOf.put("concur:delete-entry-attendee-associations", "<mule-sap-concur-connector:delete-entry-attendee-association>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@user\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@user\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:delete-entry-attendee-association>");
		 
		 transformerOf.put("concur:delete-expense-entry", "<mule-sap-concur-connector:delete-expense-entry>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@entryId\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@entryId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:delete-expense-entry>");
		 
		 transformerOf.put("concur:delete-expense-itemization", "<mule-sap-concur-connector:delete-expense-itemization>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@user\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@user\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:delete-expense-itemization>");
		 
		 transformerOf.put("concur:delete-quick-expense", "<mule-sap-concur-connector:delete-quick-expense>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@quickExpenseId\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@quickExpenseId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:delete-quick-expense>");
		 
		 transformerOf.put("concur:delete-receipt-image", "<mule-sap-concur-connector:delete-receipt-image>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:delete-receipt-image>");
		 
		 transformerOf.put("concur:get-attendee-type-by-id", "<mule-sap-concur-connector:get-attendee-type>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-attendee-type>");
		 
		 transformerOf.put("concur:get-attendee-types", "<mule-sap-concur-connector:get-attendee-types>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@offset\">\r\n" + 
		 		"		<xsl:attribute name=\"offset\">\r\n" + 
		 		"			<xsl:value-of select=\"@offset\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@limit\">\r\n" + 
		 		"		<xsl:attribute name=\"limit\">\r\n" + 
		 		"			<xsl:value-of select=\"@limit\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-attendee-types>");
		 
		 transformerOf.put("concur:get-digital-tax-invoice-by-id", "<mule-sap-concur-connector:get-digtal-tax-invoice>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-digtal-tax-invoice>");
		 
		 transformerOf.put("concur:get-entry-attendee-association-by-id", "<mule-sap-concur-connector:get-entry-attendee-association>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@user\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@user\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-entry-attendee-association>");
		 
		 transformerOf.put("concur:get-entry-attendee-associations", "<mule-sap-concur-connector:get-entry-attendee-associations>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@entryId\">\r\n" + 
		 		"		<xsl:attribute name=\"entry-id\">\r\n" + 
		 		"			<xsl:value-of select=\"@entryId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@offset\">\r\n" + 
		 		"		<xsl:attribute name=\"offset\">\r\n" + 
		 		"			<xsl:value-of select=\"@offset\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@limit\">\r\n" + 
		 		"		<xsl:attribute name=\"limit\">\r\n" + 
		 		"			<xsl:value-of select=\"@limit\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@user\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@user\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-entry-attendee-associations>");
		 
		 transformerOf.put("concur:get-expense-entry-attendee-details-by-id", "<mule-sap-concur-connector:get-expense-entry>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@attendeeId\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@attendeeId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-expense-entry>");
		 
		 transformerOf.put("concur:get-expense-group-configuration", "<mule-sap-concur-connector:get-expense-group-configuration>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</mule-sap-concur-connector:get-expense-group-configuration>");
		 
		 transformerOf.put("concur:get-expense-itemization", "<mule-sap-concur-connector:get-expense-itemization>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-expense-itemization>");
		 
		 transformerOf.put("concur:get-expense-itemizations", "<mule-sap-concur-connector:get-expense-itemizations>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@entryId\">\r\n" + 
		 		"		<xsl:attribute name=\"entry-id\">\r\n" + 
		 		"			<xsl:value-of select=\"@entryId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@reportId\">\r\n" + 
		 		"		<xsl:attribute name=\"report-id\">\r\n" + 
		 		"			<xsl:value-of select=\"@reportId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@expenseTypeCode\">\r\n" + 
		 		"		<xsl:attribute name=\"expense-type-code\">\r\n" + 
		 		"			<xsl:value-of select=\"@expenseTypeCode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@offset\">\r\n" + 
		 		"		<xsl:attribute name=\"offset\">\r\n" + 
		 		"			<xsl:value-of select=\"@offset\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@limit\">\r\n" + 
		 		"		<xsl:attribute name=\"limit\">\r\n" + 
		 		"			<xsl:value-of select=\"@limit\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@user\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@user\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-expense-itemizations>");
		 
		 transformerOf.put("concur:get-list-items", "<mule-sap-concur-connector:get-list-items>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@listId\">\r\n" + 
		 		"		<xsl:attribute name=\"list-id\">\r\n" + 
		 		"			<xsl:value-of select=\"@listId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@parentCode\">\r\n" + 
		 		"		<xsl:attribute name=\"parent-id\">\r\n" + 
		 		"			<xsl:value-of select=\"@parentCode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-list-items>");
		 
		 transformerOf.put("concur:quick-expense-by-id", "<mule-sap-concur-connector:get-quick-expense>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@expenseId\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@expenseId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-quick-expense>");
		 
		 transformerOf.put("concur:quick-expense-list", "<mule-sap-concur-connector:get-quick-expenses>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@offset\">\r\n" + 
		 		"		<xsl:attribute name=\"offset\">\r\n" + 
		 		"			<xsl:value-of select=\"@offset\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@limit\">\r\n" + 
		 		"		<xsl:attribute name=\"limit\">\r\n" + 
		 		"			<xsl:value-of select=\"@limit\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-quick-expenses>");
		 
		 transformerOf.put("concur:get-receipt-image-uri", "<mule-sap-concur-connector:get-receipt-image>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@receiptImageId\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@receiptImageId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:get-receipt-image>");
		 
		 transformerOf.put("concur:put-attendee-type-by-id", "<mule-sap-concur-connector:update-attendee-type>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@entity-ref\">\r\n" + 
		 		"		<mule-sap-concur-connector:update-attendee-type-request-data >\r\n" + 
		 		"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
		 		"		</mule-sap-concur-connector:update-attendee-type-request-data>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:update-attendee-type>");
		 
		 transformerOf.put("concur:update-digital-tax-invoice-by-id", "<mule-sap-concur-connector:update-digtal-tax-invoice>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@entity-ref\">\r\n" + 
		 		"		<mule-sap-concur-connector:update-digtal-tax-invoice-request-data >\r\n" + 
		 		"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
		 		"		</mule-sap-concur-connector:update-digtal-tax-invoice-request-data>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:update-digtal-tax-invoice>");
		 
		 transformerOf.put("concur:update-expense-entry-request", "<mule-sap-concur-connector:update-expense-entry>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@entryId\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@entryId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@reportEntry-ref\">\r\n" + 
		 		"		<mule-sap-concur-connector:update-expense-entry-request-data >\r\n" + 
		 		"			<xsl:value-of select=\"@reportEntry-ref\" />\r\n" + 
		 		"		</mule-sap-concur-connector:update-expense-entry-request-data>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:update-expense-entry>");
		 
		 transformerOf.put("concur:update-expense-itemization", "<mule-sap-concur-connector:update-expense-itemization>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@entity-ref\">\r\n" + 
		 		"		<mule-sap-concur-connector:update-expense-itemization-request-data >\r\n" + 
		 		"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
		 		"		</mule-sap-concur-connector:update-expense-itemization-request-data>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:update-expense-itemization>");
		 
		 transformerOf.put("concur:update-expense-report-header", "<mule-sap-concur-connector:update-report>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@reportId\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@reportId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@reportHeader-ref\">\r\n" + 
		 		"		<mule-sap-concur-connector:update-report-request-data >\r\n" + 
		 		"			<xsl:value-of select=\"@reportHeader-ref\" />\r\n" + 
		 		"		</mule-sap-concur-connector:update-report-request-data>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:update-report>");
		 
		 transformerOf.put("concur:update-quick-expense", "<mule-sap-concur-connector:update-quick-expense>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@quickExpenseId\">\r\n" + 
		 		"		<xsl:attribute name=\"id\">\r\n" + 
		 		"			<xsl:value-of select=\"@quickExpenseId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@loginId\">\r\n" + 
		 		"		<xsl:attribute name=\"user\">\r\n" + 
		 		"			<xsl:value-of select=\"@loginId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@quickExpense-ref\">\r\n" + 
		 		"		<mule-sap-concur-connector:update-quick-expense-request-data >\r\n" + 
		 		"			<xsl:value-of select=\"@quickExpense-ref\" />\r\n" + 
		 		"		</mule-sap-concur-connector:update-quick-expense-request-data>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:update-quick-expense>");
		 
		 transformerOf.put("concur:update-users-password", "<mule-sap-concur-connector:update-vendors>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@entity-ref\">\r\n" + 
		 		"		<mule-sap-concur-connector:update-vendors-request-data >\r\n" + 
		 		"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
		 		"		</mule-sap-concur-connector:update-vendors-request-data>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mule-sap-concur-connector:update-vendors>");
		 
		 
		  transformerOf.put("file:connector", "<file:config>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"file:connector/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"		<xsl:value-of select=\"file:connector/@name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"file:connector/@workDirectory\">\r\n" + 
		 		"		<file:connection>\r\n" + 
		 		"			<xsl:attribute name=\"workingDir\">\r\n" + 
		 		"				<xsl:value-of select=\"file:connector/@workDirectory\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</file:connection>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</file:config>");
		 
		 transformerOf.put("file:inbound-endpoint", "<file:listener>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"file:inbound-endpoint/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"file:inbound-endpoint/@connector-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"file:inbound-endpoint/@path\">\r\n" + 
		 		"		<xsl:attribute name=\"directory\">\r\n" + 
		 		"			<xsl:value-of select=\"file:inbound-endpoint/@path\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"file:inbound-endpoint/@moveToPattern\">\r\n" + 
		 		"		<xsl:attribute name=\"renameTo\">\r\n" + 
		 		"			<xsl:value-of select=\"file:inbound-endpoint/@moveToPattern\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"file:inbound-endpoint/@moveToDirectory\">\r\n" + 
		 		"		<xsl:attribute name=\"moveToDirectory\">\r\n" + 
		 		"			<xsl:value-of select=\"file:inbound-endpoint/@moveToDirectory\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"file:connector/@autoDelete\">\r\n" + 
		 		"		<xsl:attribute name=\"autoDelete\">\r\n" + 
		 		"			<xsl:value-of select=\"file:connector/@autoDelete\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"(file:inbound-endpoint/file:filename-regex-filter) or (file:connector/@workFileNamePattern)\">\r\n" + 
		 		"	 <file:matcher>\r\n" + 
		 		"	   <xsl:attribute name=\"filenamePattern\">\r\n" + 
		 		"		<xsl:choose>\r\n" + 
		 		"		   <xsl:when test=\"file:inbound-endpoint/file:filename-regex-filter\">\r\n" + 
		 		"				<xsl:value-of select=\"file:inbound-endpoint/file:filename-regex-filter/@pattern\" />\r\n" + 
		 		"			</xsl:when>			\r\n" + 
		 		"			<xsl:otherwise>\r\n" + 
		 		"				<xsl:value-of select=\"file:connector/@workFileNamePattern\"/>\r\n" + 
		 		"			</xsl:otherwise>\r\n" + 
		 		"		</xsl:choose>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	 </file:matcher>	\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"(file:inbound-endpoint/@pollingFrequency) or (file:inbound-endpoint/@fileAge)\">\r\n" + 
		 		"		<scheduling-strategy >\r\n" + 
		 		"			<fixed-frequency>\r\n" + 
		 		"				<xsl:if test=\"file:inbound-endpoint/@pollingFrequency\">\r\n" + 
		 		"					<xsl:attribute name=\"frequency\">\r\n" + 
		 		"						<xsl:value-of select=\"file:inbound-endpoint/@pollingFrequency\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"				<xsl:if test=\"file:inbound-endpoint/@fileAge\">\r\n" + 
		 		"					<xsl:attribute name=\"startDelay\">\r\n" + 
		 		"						<xsl:value-of select=\"file:inbound-endpoint/@fileAge\" />\r\n" + 
		 		"					</xsl:attribute>\r\n" + 
		 		"				</xsl:if>\r\n" + 
		 		"			</fixed-frequency>\r\n" + 
		 		"		</scheduling-strategy>	\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"file:inbound-endpoint/*[name()='reconnect']\">\r\n" + 
		 		"		<reconnection >\r\n" + 
		 		"			<xsl:copy-of select=\"file:inbound-endpoint/*[name()='reconnect']\"/>\r\n" + 
		 		"		</reconnection >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"file:inbound-endpoint/*[name()='reconnect-forever']\">\r\n" + 
		 		"		<reconnection >\r\n" + 
		 		"			<xsl:copy-of select=\"file:inbound-endpoint/*[name()='reconnect-forever']\"/>\r\n" + 
		 		"		</reconnection >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</file:listener>");
		 
		 transformerOf.put("file:outbound-endpoint", "<file:write>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"		<xsl:value-of select=\"file:outbound-endpoint/@doc:name\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"		<xsl:value-of select=\"file:outbound-endpoint/@connector-ref\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"path\">\r\n" + 
		 		"		<xsl:value-of select=\"concat(file:outbound-endpoint/@path,'/',file:outbound-endpoint/@outputPattern)\" />\r\n" + 
		 		"	</xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"file:connector/@outputAppend = 'true'\">\r\n" + 
		 		"		<xsl:attribute name=\"mode\">APPEND</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</file:write>");

		 transformerOf.put("apikit-soap:config", "<apikit-soap:config>\r\n" + 
		 		"	 <xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"    <xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"wsdlLocation\">\r\n" + 
		 		"        <xsl:value-of select=\"@wsdlUrl\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"service\">\r\n" + 
		 		"        <xsl:value-of select=\"@serviceName\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"port\">\r\n" + 
		 		"        <xsl:value-of select=\"@portName\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</apikit-soap:config>");
		 
		 transformerOf.put("quartz:inbound-endpoint", "<scheduler>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<scheduling-strategy >\r\n" + 
		 		"	  <xsl:if test=\"(@repeatInterval or @startDelay)\">	\r\n" + 
		 		"		<fixed-frequency>\r\n" + 
		 		"			<xsl:if test=\"@repeatInterval\">\r\n" + 
		 		"				<xsl:attribute name=\"frequency\">\r\n" + 
		 		"					<xsl:value-of select=\"@repeatInterval\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@startDelay\">\r\n" + 
		 		"				<xsl:attribute name=\"startDelay\">\r\n" + 
		 		"					<xsl:value-of select=\"@startDelay\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</fixed-frequency>\r\n" + 
		 		"	 </xsl:if>	\r\n" + 
		 		"	 <xsl:if test=\"(@cronExpression or @cronTimeZone)\">\r\n" + 
		 		"		<cron>\r\n" + 
		 		"			<xsl:if test=\"@cronExpression\">\r\n" + 
		 		"				<xsl:attribute name=\"expression\">\r\n" + 
		 		"					<xsl:value-of select=\"@cronExpression\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@cronTimeZone\">\r\n" + 
		 		"				<xsl:attribute name=\"timeZone\">\r\n" + 
		 		"					<xsl:value-of select=\"@cronTimeZone\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</cron>\r\n" + 
		 		"	 </xsl:if>\r\n" + 
		 		"	</scheduling-strategy>\r\n" + 
		 		"</scheduler>");
	
		 
		 
		 transformerOf.put("dynamics365:config-with-oauth", "<dynamics:dynamics-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<dynamics:connection>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@readTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"readTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@readTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<dynamics:oauth-authorization-code>\r\n" + 
		 		"			<xsl:if test=\"@clientId\">\r\n" + 
		 		"				<xsl:attribute name=\"consumerKey\">\r\n" + 
		 		"					<xsl:value-of select=\"@clientId\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"@clientSecret\">\r\n" + 
		 		"				<xsl:attribute name=\"consumerSecret\">\r\n" + 
		 		"					<xsl:value-of select=\"@clientSecret\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</dynamics:oauth-authorization-code>\r\n" + 
		 		"		<dynamics:oauth-callback-config>\r\n" + 
		 		"			<xsl:if test=\"dynamics365:oauth-callback-config/@domain\">\r\n" + 
		 		"				<xsl:attribute name=\"listenerConfig\">\r\n" + 
		 		"					<xsl:value-of select=\"dynamics365:oauth-callback-config/@domain\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"dynamics365:oauth-callback-config/@localPort\">\r\n" + 
		 		"				<xsl:attribute name=\"authorizePath\">\r\n" + 
		 		"					<xsl:value-of select=\"dynamics365:oauth-callback-config/@localPort\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"dynamics365:oauth-callback-config/@path\">\r\n" + 
		 		"				<xsl:attribute name=\"callbackPath\">\r\n" + 
		 		"					<xsl:value-of select=\"dynamics365:oauth-callback-config/@path\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"			<xsl:if test=\"dynamics365:oauth-callback-config/@remotePort\">\r\n" + 
		 		"				<xsl:attribute name=\"externalCallbackUrl\">\r\n" + 
		 		"					<xsl:value-of select=\"dynamics365:oauth-callback-config/@remotePort\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</xsl:if>\r\n" + 
		 		"		</dynamics:oauth-callback-config>\r\n" + 
		 		"		<xsl:if test=\"dynamics365:oauth-store-config/@objectStore-ref\">\r\n" + 
		 		"			<dynamics:oauth-store-config>\r\n" + 
		 		"				<xsl:attribute name=\"objectStore\">\r\n" + 
		 		"					<xsl:value-of select=\"dynamics365:oauth-store-config/@objectStore-ref\" />\r\n" + 
		 		"				</xsl:attribute>	\r\n" + 
		 		"			</dynamics:oauth-store-config>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</dynamics:connection>\r\n" + 
		 		"</dynamics:dynamics-config>");
		 
		 transformerOf.put("dynamics365:create", "<dynamics:create>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamics365:attributes/@ref\">\r\n" + 
		 		"		<dynamics:attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamics365:attributes/@ref\" />\r\n" + 
		 		"		</dynamics:attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:create>");
		 
		 transformerOf.put("dynamics365:config-oauth-user-pass","<dynamics:dynamics-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<dynamics:oauth-user-pass-connection>\r\n" + 
		 		"		<xsl:if test=\"@proxyHost\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyHost\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPort\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyUsername\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@proxyPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@resource\">\r\n" + 
		 		"			<xsl:attribute name=\"resource\">\r\n" + 
		 		"				<xsl:value-of select=\"@resource\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@clientId\">\r\n" + 
		 		"			<xsl:attribute name=\"clientId\">\r\n" + 
		 		"				<xsl:value-of select=\"@clientId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@clientSecret\">\r\n" + 
		 		"			<xsl:attribute name=\"clientSecret\">\r\n" + 
		 		"				<xsl:value-of select=\"@clientSecret\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@tokenRequestEndpoint\">\r\n" + 
		 		"			<xsl:attribute name=\"tokenRequestEndpoint\">\r\n" + 
		 		"				<xsl:value-of select=\"@tokenRequestEndpoint\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@readTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"readTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@readTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"dynamics365:connection-pooling-profile\">\r\n" + 
		 		"			<pooling-profile >\r\n" + 
		 		"				<xsl:copy-of select=\"dynamics365:connection-pooling-profile/@*\" />\r\n" + 
		 		"			</pooling-profile >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</dynamics:oauth-user-pass-connection>\r\n" + 
		 		"</dynamics:dynamics-config>");
		 
		 transformerOf.put("dynamics365:create-multiple", "<dynamics:create-multiple>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@useSingleTransaction\">\r\n" + 
		 		"		<xsl:attribute name=\"useSingleTransaction\">\r\n" + 
		 		"			<xsl:value-of select=\"@useSingleTransaction\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamics365:attributes-list/@ref\">\r\n" + 
		 		"		<dynamics:entities-attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamics365:attributes-list/@ref\" />\r\n" + 
		 		"		</dynamics:entities-attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:create-multiple>");
		 
		 transformerOf.put("dynamics365:delete", "<dynamics:delete>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<dynamics:id >\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</dynamics:id >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:delete>");
		 
		 transformerOf.put("dynamics365:delete-multiple", "<dynamics:delete-multiple>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:choose>\r\n" + 
		 		"	<xsl:when test=\"@useSingleTransaction\">\r\n" + 
		 		"		<xsl:attribute name=\"useSingleTransaction\">\r\n" + 
		 		"			<xsl:text>false</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:when>\r\n" + 
		 		"	<xsl:otherwise>\r\n" + 
		 		"		<xsl:attribute name=\"useSingleTransaction\">\r\n" + 
		 		"			<xsl:text>true</xsl:text>\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:otherwise>\r\n" + 
		 		"	</xsl:choose>\r\n" + 
		 		"	<xsl:if test=\"dynamics365:ids/@ref\">\r\n" + 
		 		"		<dynamics:ids >\r\n" + 
		 		"			<xsl:value-of select=\"dynamics365:ids/@ref\" />\r\n" + 
		 		"		</dynamics:ids >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:delete-multiple>");
		 
		 transformerOf.put("dynamics365:disassociate", "<dynamics:disassociate>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamics365:attributes/@ref\">\r\n" + 
		 		"		<dynamics:attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamics365:attributes/@ref\" />\r\n" + 
		 		"		</dynamics:attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:disassociate>");
		 
		 transformerOf.put("dynamics365:do-action", "<dynamics:do-action>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@actionName\">\r\n" + 
		 		"		<xsl:attribute name=\"actionName\">\r\n" + 
		 		"			<xsl:value-of select=\"@actionName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@boundedEntityType\">\r\n" + 
		 		"		<xsl:attribute name=\"boundedEntityType\">\r\n" + 
		 		"			<xsl:value-of select=\"@boundedEntityType\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@boundedEntityId\">\r\n" + 
		 		"		<xsl:attribute name=\"boundedEntityId\">\r\n" + 
		 		"			<xsl:value-of select=\"@boundedEntityId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamics365:related-entities/@ref\">\r\n" + 
		 		"		<dynamics:related-entities >\r\n" + 
		 		"			<xsl:value-of select=\"dynamics365:related-entities/@ref\" />\r\n" + 
		 		"		</dynamics:related-entities >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:do-action>");
		 
		 transformerOf.put("dynamics365:invoke", "<dynamics:invoke>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@httpMethod\">\r\n" + 
		 		"		<xsl:attribute name=\"httpMethod\">\r\n" + 
		 		"			<xsl:value-of select=\"@httpMethod\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@uri\">\r\n" + 
		 		"		<xsl:attribute name=\"uri\">\r\n" + 
		 		"			<xsl:value-of select=\"@uri\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamics365:headers/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"headers\">\r\n" + 
		 		"			<xsl:value-of select=\"dynamics365:headers/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@json\">\r\n" + 
		 		"		<dynamics:body >\r\n" + 
		 		"			<xsl:value-of select=\"@json\" />\r\n" + 
		 		"		</dynamics:body>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:invoke>");
		 
		 transformerOf.put("dynamics365:retrieve", "<dynamics:retrieve>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@id\">\r\n" + 
		 		"		<dynamics:id >\r\n" + 
		 		"			<xsl:value-of select=\"@id\" />\r\n" + 
		 		"		</dynamics:id >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:retrieve>");
		 
		 transformerOf.put("dynamics365:retrieve-multiple", "<dynamics:retrieve-multiple>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"pageSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@dataQueryURL\">\r\n" + 
		 		"		<dynamics:data-query-url >\r\n" + 
		 		"			<xsl:value-of select=\"@dataQueryURL\" />\r\n" + 
		 		"		</dynamics:data-query-url >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:retrieve-multiple>");
		 
		 transformerOf.put("dynamics365:retrieve-multiple-by-query", "<dynamics:retrieve-multiple-by-query>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"pageSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@query\">\r\n" + 
		 		"		<dynamics:query >\r\n" + 
		 		"			<xsl:value-of select=\"@query\" />\r\n" + 
		 		"		</dynamics:query >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:retrieve-multiple-by-query>");
		 
		 transformerOf.put("dynamics365:update", "<dynamics:update>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamics365:attributes/@ref\">\r\n" + 
		 		"		<dynamics:attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamics365:attributes/@ref\" />\r\n" + 
		 		"		</dynamics:attributes >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:update>");
		 
		 transformerOf.put("dynamics365:update-multiple", "<dynamics:update-multiple>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@logicalName\">\r\n" + 
		 		"		<xsl:attribute name=\"logicalName\">\r\n" + 
		 		"			<xsl:value-of select=\"@logicalName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@useSingleTransaction\">\r\n" + 
		 		"		<xsl:attribute name=\"useSingleTransaction\">\r\n" + 
		 		"			<xsl:value-of select=\"@useSingleTransaction\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"dynamics365:attributes-list/@ref\">\r\n" + 
		 		"		<dynamics:entities-attributes >\r\n" + 
		 		"			<xsl:value-of select=\"dynamics365:attributes-list/@ref\" />\r\n" + 
		 		"		</dynamics:entities-attributes>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:update-multiple>");
		 
		 transformerOf.put("dynamics365:unauthorize", "<dynamics:unauthorize>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@accessTokenId\">\r\n" + 
		 		"		<xsl:attribute name=\"resourceOwnerId\">\r\n" + 
		 		"			<xsl:value-of select=\"@accessTokenId\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</dynamics:unauthorize>");
		 
		 transformerOf.put("dynamicsax:gateway-connection-config", "<microsoft-dynamics-ax:dynamics-ax-config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<microsoft-dynamics-ax:gateway-connection>\r\n" + 
		 		"		<xsl:if test=\"@company\">\r\n" + 
		 		"			<xsl:attribute name=\"company\">\r\n" + 
		 		"				<xsl:value-of select=\"@company\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@language\">\r\n" + 
		 		"			<xsl:attribute name=\"language\">\r\n" + 
		 		"				<xsl:value-of select=\"@language\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@logonAsUser\">\r\n" + 
		 		"			<xsl:attribute name=\"logonAsUser\">\r\n" + 
		 		"				<xsl:value-of select=\"@logonAsUser\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@messageId\">\r\n" + 
		 		"			<xsl:attribute name=\"messageId\">\r\n" + 
		 		"				<xsl:value-of select=\"@messageId\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@partitionKey\">\r\n" + 
		 		"			<xsl:attribute name=\"partitionKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@partitionKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@username\">\r\n" + 
		 		"			<xsl:attribute name=\"username\">\r\n" + 
		 		"				<xsl:value-of select=\"@username\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@password\">\r\n" + 
		 		"			<xsl:attribute name=\"password\">\r\n" + 
		 		"				<xsl:value-of select=\"@password\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@aosServerName\">\r\n" + 
		 		"			<xsl:attribute name=\"aosServerName\">\r\n" + 
		 		"				<xsl:value-of select=\"@aosServerName\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@aosWsdlPort\">\r\n" + 
		 		"			<xsl:attribute name=\"aosWsdlPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@aosWsdlPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
		 		"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
		 		"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@gatewayRouterServiceAddress\">\r\n" + 
		 		"			<xsl:attribute name=\"gatewayRouterServiceAddress\">\r\n" + 
		 		"				<xsl:value-of select=\"@gatewayRouterServiceAddress\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@aosEndpointPort\">\r\n" + 
		 		"			<xsl:attribute name=\"aosEndpointPort\">\r\n" + 
		 		"				<xsl:value-of select=\"@aosEndpointPort\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@receiveTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"receiveTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@receiveTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</microsoft-dynamics-ax:gateway-connection>\r\n" + 
		 		"</microsoft-dynamics-ax:dynamics-ax-config>");
		 
		 transformerOf.put("dynamicsax:invoke-document-service-operation", "<microsoft-dynamics-ax:invoke-document-service-operation>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@serviceAndSoapActionUri\">\r\n" + 
		 		"		<xsl:attribute name=\"service\">\r\n" + 
		 		"			<xsl:value-of select=\"substring-before(@serviceAndSoapActionUri, '||')\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"		<xsl:attribute name=\"action\">\r\n" + 
		 		"			<xsl:value-of select=\"substring-after(@serviceAndSoapActionUri, '||')\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-ax:invoke-document-service-operation>");
		 
		 transformerOf.put("dynamicsax:query-table", "<microsoft-dynamics-ax:query-table>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"itemsPerPage\">\r\n" + 
		 		"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@query\">\r\n" + 
		 		"		<microsoft-dynamics-ax:query >\r\n" + 
		 		"			<xsl:value-of select=\"@query\" />\r\n" + 
		 		"		</microsoft-dynamics-ax:query>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-ax:query-table>");
		 
		 transformerOf.put("dynamicsax:static-query", "<microsoft-dynamics-ax:static-query>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"itemsPerPage\">\r\n" + 
		 		"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@staticQueryName\">\r\n" + 
		 		"		<xsl:attribute name=\"staticQueryName\">\r\n" + 
		 		"			<xsl:value-of select=\"@staticQueryName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</microsoft-dynamics-ax:static-query>");
		 
		 transformerOf.put("thru-transport:config", "<mft:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<mft:mft-connection>\r\n" + 
		 		"		<xsl:if test=\"@server\">\r\n" + 
		 		"			<xsl:attribute name=\"APIUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@server\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@site\">\r\n" + 
		 		"			<xsl:attribute name=\"StorageRepository\">\r\n" + 
		 		"				<xsl:value-of select=\"@site\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@accessKey\">\r\n" + 
		 		"			<xsl:attribute name=\"SiteKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@accessKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@secretKey\">\r\n" + 
		 		"			<xsl:attribute name=\"FlowSecret\">\r\n" + 
		 		"				<xsl:value-of select=\"@secretKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</mft:mft-connection>\r\n" + 
		 		"</mft:config>");
		 
		 transformerOf.put("thru-transport:sandbox-config", "<mft:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<mft:mft-connection>\r\n" + 
		 		"		<xsl:if test=\"@server\">\r\n" + 
		 		"			<xsl:attribute name=\"APIUrl\">\r\n" + 
		 		"				<xsl:value-of select=\"@server\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@site\">\r\n" + 
		 		"			<xsl:attribute name=\"StorageRepository\">\r\n" + 
		 		"				<xsl:value-of select=\"@site\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@accessKey\">\r\n" + 
		 		"			<xsl:attribute name=\"SiteKey\">\r\n" + 
		 		"				<xsl:value-of select=\"@accessKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@secretKey\">\r\n" + 
		 		"			<xsl:attribute name=\"FlowSecret\">\r\n" + 
		 		"				<xsl:value-of select=\"@secretKey\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</mft:mft-connection>\r\n" + 
		 		"</mft:config>");
		 
		 transformerOf.put("thru-transport:pickup-file-stream-source", "<mft:file-pickup-source>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@pollingPeriod\">\r\n" + 
		 		"		<scheduling-strategy >\r\n" + 
		 		"			<fixed-frequency>\r\n" + 
		 		"				<xsl:attribute name=\"frequency\">\r\n" + 
		 		"					<xsl:value-of select=\"@pollingPeriod\" />\r\n" + 
		 		"				</xsl:attribute>\r\n" + 
		 		"			</fixed-frequency>\r\n" + 
		 		"		</scheduling-strategy >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mft:file-pickup-source>");
		 
		 transformerOf.put("thru-transport:batch-exception-handler", "<mft:batch-exception-handler>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fileCode\">\r\n" + 
		 		"		<xsl:attribute name=\"fileCode\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileCode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@exceptionData-ref\">\r\n" + 
		 		"		<mft:exception-data >\r\n" + 
		 		"			<xsl:value-of select=\"@exceptionData-ref\" />\r\n" + 
		 		"		</mft:exception-data >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mft:batch-exception-handler>");
		 
		 transformerOf.put("thru-transport:file-dropoff", "<mft:file-dropoff>\r\n" + 
		 		"	<xsl:if test=\"@fileSize\">\r\n" + 
		 		"		<xsl:attribute name=\"fileSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileSize\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@filename\">\r\n" + 
		 		"		<xsl:attribute name=\"filename\">\r\n" + 
		 		"			<xsl:value-of select=\"@filename\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@fileCode\">\r\n" + 
		 		"		<xsl:attribute name=\"fileCode\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileCode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@fileData-ref\">\r\n" + 
		 		"		<mft:file-data >\r\n" + 
		 		"			<xsl:value-of select=\"@fileData-ref\" />\r\n" + 
		 		"		</mft:file-data >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mft:file-dropoff>");
		 
		 transformerOf.put("thru-transport:file-metadata", "<mft:file-metadata>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fileCode\">\r\n" + 
		 		"		<xsl:attribute name=\"fileCode\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileCode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mft:file-metadata>");
		 
		 transformerOf.put("thru-transport:pickup-file-stream", "<mft:file-pickup>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"</mft:file-pickup>");
		 
		 transformerOf.put("thru-transport:flow-outcome", "<mft:flow-outcome>\r\n" + 
		 		"	<xsl:if test=\"@status\">\r\n" + 
		 		"		<xsl:attribute name=\"status\">\r\n" + 
		 		"			<xsl:value-of select=\"@status\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@fileCode\">\r\n" + 
		 		"		<xsl:attribute name=\"fileCode\">\r\n" + 
		 		"			<xsl:value-of select=\"@fileCode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@flowInstanceCode\">\r\n" + 
		 		"		<xsl:attribute name=\"flowInstanceCode\">\r\n" + 
		 		"			<xsl:value-of select=\"@flowInstanceCode\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@selectiveDropOffRecipients\">\r\n" + 
		 		"		<xsl:attribute name=\"selectiveDropOffRecipients\">\r\n" + 
		 		"			<xsl:value-of select=\"@selectiveDropOffRecipients\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@batchTotalRecordCount\">\r\n" + 
		 		"		<xsl:attribute name=\"batchTotalRecordCount\">\r\n" + 
		 		"			<xsl:value-of select=\"@batchTotalRecordCount\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@batchFailedRecordCount\">\r\n" + 
		 		"		<xsl:attribute name=\"batchFailedRecordCount\">\r\n" + 
		 		"			<xsl:value-of select=\"@batchFailedRecordCount\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@activityMessage\">\r\n" + 
		 		"		<xsl:attribute name=\"activityMessage\">\r\n" + 
		 		"			<xsl:value-of select=\"@activityMessage\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@activityDetail\">\r\n" + 
		 		"		<xsl:attribute name=\"activityDetail\">\r\n" + 
		 		"			<xsl:value-of select=\"@activityDetail\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</mft:flow-outcome>");
		 
		 transformerOf.put("ldap:config", "<ldap:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<ldap:basic-connection>\r\n" + 
		 		"		<xsl:if test=\"@authDn\">\r\n" + 
		 		"			<xsl:attribute name=\"authDn\">\r\n" + 
		 		"				<xsl:value-of select=\"@authDn\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@authPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"authPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@authPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@authentication\">\r\n" + 
		 		"			<xsl:attribute name=\"authentication\">\r\n" + 
		 		"				<xsl:value-of select=\"@authentication\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@url\">\r\n" + 
		 		"			<xsl:attribute name=\"url\">\r\n" + 
		 		"				<xsl:value-of select=\"@url\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@initialPoolSize\">\r\n" + 
		 		"			<xsl:attribute name=\"initialPoolSize\">\r\n" + 
		 		"				<xsl:value-of select=\"@initialPoolSize\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@maxPoolSize\">\r\n" + 
		 		"			<xsl:attribute name=\"maxPoolSize\">\r\n" + 
		 		"				<xsl:value-of select=\"@maxPoolSize\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@poolTimeout\">\r\n" + 
		 		"			<xsl:attribute name=\"poolTimeout\">\r\n" + 
		 		"				<xsl:value-of select=\"@poolTimeout\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@schemaEnabled\">\r\n" + 
		 		"			<xsl:attribute name=\"schemaEnabled\">\r\n" + 
		 		"				<xsl:value-of select=\"@schemaEnabled\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@referral\">\r\n" + 
		 		"			<xsl:attribute name=\"referral\">\r\n" + 
		 		"				<xsl:value-of select=\"@referral\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</ldap:basic-connection>\r\n" + 
		 		"</ldap:config>");
		 
		 transformerOf.put("ldap:add", "<ldap:add>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@structuralObjectClass\">\r\n" + 
		 		"		<xsl:attribute name=\"structuralObjectClass\">\r\n" + 
		 		"			<xsl:value-of select=\"@structuralObjectClass\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@entry-ref\">\r\n" + 
		 		"		<ldap:entry >\r\n" + 
		 		"			<xsl:value-of select=\"@entry-ref\" />	\r\n" + 
		 		"		</ldap:entry >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:add>");
		 
		 transformerOf.put("ldap:add-multi-value-attribute", "<ldap:add-multi-value-attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@dn\">\r\n" + 
		 		"		<xsl:attribute name=\"dn\">\r\n" + 
		 		"			<xsl:value-of select=\"@dn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributeName\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeName\">\r\n" + 
		 		"			<xsl:value-of select=\"@attributeName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@ignoreInvalidAttribute\">\r\n" + 
		 		"		<xsl:attribute name=\"ignoreInvalidAttribute\">\r\n" + 
		 		"			<xsl:value-of select=\"@ignoreInvalidAttribute\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributeValues-ref\">\r\n" + 
		 		"		<ldap:attribute-values >\r\n" + 
		 		"			<xsl:value-of select=\"@attributeValues-ref\" />	\r\n" + 
		 		"		</ldap:attribute-values >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:add-multi-value-attribute>");
		 
		 transformerOf.put("ldap:add-single-value-attribute", "<ldap:add-single-value-attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@dn\">\r\n" + 
		 		"		<xsl:attribute name=\"dn\">\r\n" + 
		 		"			<xsl:value-of select=\"@dn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributeName\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeName\">\r\n" + 
		 		"			<xsl:value-of select=\"@attributeName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributeValue\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeValue\">\r\n" + 
		 		"			<xsl:value-of select=\"@attributeValue\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@ignoreInvalidAttribute\">\r\n" + 
		 		"		<xsl:attribute name=\"ignoreInvalidAttribute\">\r\n" + 
		 		"			<xsl:value-of select=\"@ignoreInvalidAttribute\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:add-single-value-attribute>");
		 
		 transformerOf.put("ldap:tls-config", "<ldap:config>\r\n" + 
		 		"	<xsl:attribute name=\"name\">\r\n" + 
		 		"        <xsl:value-of select=\"@name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<ldap:tls-connection>\r\n" + 
		 		"		<xsl:if test=\"@authDn\">\r\n" + 
		 		"			<xsl:attribute name=\"authDn\">\r\n" + 
		 		"				<xsl:value-of select=\"@authDn\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@authPassword\">\r\n" + 
		 		"			<xsl:attribute name=\"authPassword\">\r\n" + 
		 		"				<xsl:value-of select=\"@authPassword\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@authentication\">\r\n" + 
		 		"			<xsl:attribute name=\"authentication\">\r\n" + 
		 		"				<xsl:value-of select=\"@authentication\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@url\">\r\n" + 
		 		"			<xsl:attribute name=\"url\">\r\n" + 
		 		"				<xsl:value-of select=\"@url\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@schemaEnabled\">\r\n" + 
		 		"			<xsl:attribute name=\"schemaEnabled\">\r\n" + 
		 		"				<xsl:value-of select=\"@schemaEnabled\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"@referral\">\r\n" + 
		 		"			<xsl:attribute name=\"referral\">\r\n" + 
		 		"				<xsl:value-of select=\"@referral\" />\r\n" + 
		 		"			</xsl:attribute>\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
		 		"			<reconnection >\r\n" + 
		 		"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
		 		"			</reconnection >\r\n" + 
		 		"		</xsl:if>\r\n" + 
		 		"	</ldap:tls-connection>\r\n" + 
		 		"</ldap:config>");
		 
		 transformerOf.put("ldap:delete-multi-value-attribute", "<ldap:delete-multi-value-attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@dn\">\r\n" + 
		 		"		<xsl:attribute name=\"dn\">\r\n" + 
		 		"			<xsl:value-of select=\"@dn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributeName\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeName\">\r\n" + 
		 		"			<xsl:value-of select=\"@attributeName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@ignoreInvalidAttribute\">\r\n" + 
		 		"		<xsl:attribute name=\"ignoreInvalidAttribute\">\r\n" + 
		 		"			<xsl:value-of select=\"@ignoreInvalidAttribute\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributeValues-ref\">\r\n" + 
		 		"		<ldap:attribute-values >\r\n" + 
		 		"			<xsl:value-of select=\"@attributeValues-ref\" />\r\n" + 
		 		"		</ldap:attribute-values >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:delete-multi-value-attribute>");
		 
		 transformerOf.put("ldap:ldap-entry-to-ldif", "<ldap:ldap-entry-to-ldif>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@entry-ref\">\r\n" + 
		 		"		<ldap:entry >\r\n" + 
		 		"			<xsl:value-of select=\"@entry-ref\" />\r\n" + 
		 		"		</ldap:entry >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:ldap-entry-to-ldif>");
		 
		 transformerOf.put("ldap:lookup", "<ldap:lookup>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@dn\">\r\n" + 
		 		"		<xsl:attribute name=\"dn\">\r\n" + 
		 		"			<xsl:value-of select=\"@dn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@structuralObjectClass\">\r\n" + 
		 		"		<xsl:attribute name=\"structuralObjectClass\">\r\n" + 
		 		"			<xsl:value-of select=\"@structuralObjectClass\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"ldap:attributes/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"attributes\">\r\n" + 
		 		"			<xsl:value-of select=\"ldap:attributes/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:lookup>");
		 
		 transformerOf.put("ldap:modify", "<ldap:modify>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@structuralObjectClass\">\r\n" + 
		 		"		<xsl:attribute name=\"structuralObjectClass\">\r\n" + 
		 		"			<xsl:value-of select=\"@structuralObjectClass\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@entry-ref\">\r\n" + 
		 		"		<ldap:entry >\r\n" + 
		 		"			<xsl:value-of select=\"@entry-ref\" />\r\n" + 
		 		"		</ldap:entry >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:modify>");
		 
		 transformerOf.put("ldap:modify-multi-value-attribute", "<ldap:modify-multi-value-attribute>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@dn\">\r\n" + 
		 		"		<xsl:attribute name=\"dn\">\r\n" + 
		 		"			<xsl:value-of select=\"@dn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributeName\">\r\n" + 
		 		"		<xsl:attribute name=\"attributeName\">\r\n" + 
		 		"			<xsl:value-of select=\"@attributeName\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@ignoreInvalidAttribute\">\r\n" + 
		 		"		<xsl:attribute name=\"ignoreInvalidAttribute\">\r\n" + 
		 		"			<xsl:value-of select=\"@ignoreInvalidAttribute\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@attributeValues-ref\">\r\n" + 
		 		"		<ldap:attribute-values >\r\n" + 
		 		"			<xsl:value-of select=\"@attributeValues-ref\" />\r\n" + 
		 		"		</ldap:attribute-values >\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:modify-multi-value-attribute>");
		 
		 transformerOf.put("ldap:paged-result-search", "<ldap:paged-result-search>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@baseDn\">\r\n" + 
		 		"		<xsl:attribute name=\"baseDn\">\r\n" + 
		 		"			<xsl:value-of select=\"@baseDn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@filter\">\r\n" + 
		 		"		<xsl:attribute name=\"filter\">\r\n" + 
		 		"			<xsl:value-of select=\"@filter\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@scope\">\r\n" + 
		 		"		<xsl:attribute name=\"scope\">\r\n" + 
		 		"			<xsl:value-of select=\"@scope\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@structuralObjectClass\">\r\n" + 
		 		"		<xsl:attribute name=\"structuralObjectClass\">\r\n" + 
		 		"			<xsl:value-of select=\"@structuralObjectClass\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@fetchSize\">\r\n" + 
		 		"		<xsl:attribute name=\"fetchSize\">\r\n" + 
		 		"			<xsl:value-of select=\"@fetchSize\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"ldap:attributes/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"attributes\">\r\n" + 
		 		"			<xsl:value-of select=\"ldap:attributes/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:paged-result-search>");
		 
		 transformerOf.put("ldap:search", "<ldap:search>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@baseDn\">\r\n" + 
		 		"		<xsl:attribute name=\"baseDn\">\r\n" + 
		 		"			<xsl:value-of select=\"@baseDn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@filter\">\r\n" + 
		 		"		<xsl:attribute name=\"filter\">\r\n" + 
		 		"			<xsl:value-of select=\"@filter\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@scope\">\r\n" + 
		 		"		<xsl:attribute name=\"scope\">\r\n" + 
		 		"			<xsl:value-of select=\"@scope\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@structuralObjectClass\">\r\n" + 
		 		"		<xsl:attribute name=\"structuralObjectClass\">\r\n" + 
		 		"			<xsl:value-of select=\"@structuralObjectClass\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"ldap:attributes/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"attributes\">\r\n" + 
		 		"			<xsl:value-of select=\"ldap:attributes/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:search>");
		 
		 transformerOf.put("ldap:search-one", "<ldap:search-one>\r\n" + 
		 		"	<xsl:attribute name=\"doc:name\">\r\n" + 
		 		"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:attribute name=\"config-ref\">\r\n" + 
		 		"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
		 		"    </xsl:attribute>\r\n" + 
		 		"	<xsl:if test=\"@baseDn\">\r\n" + 
		 		"		<xsl:attribute name=\"baseDn\">\r\n" + 
		 		"			<xsl:value-of select=\"@baseDn\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@filter\">\r\n" + 
		 		"		<xsl:attribute name=\"filter\">\r\n" + 
		 		"			<xsl:value-of select=\"@filter\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@scope\">\r\n" + 
		 		"		<xsl:attribute name=\"scope\">\r\n" + 
		 		"			<xsl:value-of select=\"@scope\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"@structuralObjectClass\">\r\n" + 
		 		"		<xsl:attribute name=\"structuralObjectClass\">\r\n" + 
		 		"			<xsl:value-of select=\"@structuralObjectClass\" />	\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"	<xsl:if test=\"ldap:attributes/@ref\">\r\n" + 
		 		"		<xsl:attribute name=\"attributes\">\r\n" + 
		 		"			<xsl:value-of select=\"ldap:attributes/@ref\" />\r\n" + 
		 		"		</xsl:attribute>\r\n" + 
		 		"	</xsl:if>\r\n" + 
		 		"</ldap:search-one>");
		 
		transformerOf.put("sharepoint:online-connection-config", "<sharepoint:sharepoint-online-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:online-connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"onlineUsername\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"onlinePassword\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:online-connection>\r\n" + 
				"</sharepoint:sharepoint-online-config>");
		
		transformerOf.put("sharepoint:file-add", "<sharepoint:file-add>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@overwrite\">\r\n" + 
				"		<xsl:attribute name=\"overwrite\">\r\n" + 
				"			<xsl:value-of select=\"@overwrite\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fileContentStream-ref\">\r\n" + 
				"		<sharepoint:file-content-stream >\r\n" + 
				"			<xsl:value-of select=\"@fileContentStream-ref\" />	\r\n" + 
				"		</sharepoint:file-content-stream >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-add>");
		
		transformerOf.put("sharepoint:claims-connection-config", "<sharepoint:sharepoint-onpremise-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:claims-connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"claimsUsername\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"claimsPassword\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@stsUrl\">\r\n" + 
				"			<xsl:attribute name=\"stsUrl\">\r\n" + 
				"				<xsl:value-of select=\"@stsUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@scope\">\r\n" + 
				"			<xsl:attribute name=\"scope\">\r\n" + 
				"				<xsl:value-of select=\"@scope\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:claims-connection>\r\n" + 
				"</sharepoint:sharepoint-onpremise-config>");
		
		transformerOf.put("sharepoint:config", "<sharepoint:sharepoint-onpremise-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:security-token-connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@stsUrl\">\r\n" + 
				"			<xsl:attribute name=\"securityToken\">\r\n" + 
				"				<xsl:value-of select=\"@stsUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@domain\">\r\n" + 
				"			<xsl:attribute name=\"ntlmDomain\">\r\n" + 
				"				<xsl:value-of select=\"@domain\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@scope\">\r\n" + 
				"			<xsl:attribute name=\"securityTokenProvider\">\r\n" + 
				"				<xsl:value-of select=\"@scope\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:security-token-connection>\r\n" + 
				"</sharepoint:sharepoint-onpremise-config>");
		
		transformerOf.put("sharepoint:ntlm-connection-config", "<sharepoint:sharepoint-onpremise-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:ntlm-connection>\r\n" + 
				"		<xsl:if test=\"@domain\">\r\n" + 
				"			<xsl:attribute name=\"domain\">\r\n" + 
				"				<xsl:value-of select=\"@domain\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"ntlmUsername\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"ntlmPassword\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:ntlm-connection>\r\n" + 
				"</sharepoint:sharepoint-onpremise-config>");
		
		transformerOf.put("sharepoint:file-get-metadata", "<sharepoint:get-metadata>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:get-metadata>");
		
		transformerOf.put("sharepoint:file-query", "<sharepoint:file-query>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@startingFolderPath\">\r\n" + 
				"		<xsl:attribute name=\"startingFolderPath\">\r\n" + 
				"			<xsl:value-of select=\"@startingFolderPath\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@recursive\">\r\n" + 
				"		<xsl:attribute name=\"recursive\">\r\n" + 
				"			<xsl:value-of select=\"@recursive\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<sharepoint:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</sharepoint:query >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-query>");
		
		transformerOf.put("sharepoint:folder-query", "<sharepoint:folder-query>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@startingFolderPath\">\r\n" + 
				"		<xsl:attribute name=\"startingFolderPath\">\r\n" + 
				"			<xsl:value-of select=\"@startingFolderPath\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@recursive\">\r\n" + 
				"		<xsl:attribute name=\"recursive\">\r\n" + 
				"			<xsl:value-of select=\"@recursive\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<sharepoint:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</sharepoint:query >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:folder-query>");
		
		transformerOf.put("sharepoint:list-create", "<sharepoint:list-create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"sharepoint:list/@ref\">\r\n" + 
				"		<sharepoint:list >\r\n" + 
				"			<xsl:value-of select=\"sharepoint:list/@ref\" />\r\n" + 
				"		</sharepoint:list >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-create>");
		
		transformerOf.put("sharepoint:list-item-create", "<sharepoint:list-item-create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint:properties/@ref\">\r\n" + 
				"		<sharepoint:properties >\r\n" + 
				"			<xsl:value-of select=\"sharepoint:properties/@ref\" />\r\n" + 
				"		</sharepoint:properties >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-item-create>");
		
		transformerOf.put("sharepoint:list-item-query", "<sharepoint:list-item-query>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@retrieveReferences\">\r\n" + 
				"		<xsl:attribute name=\"retrieveReferences\">\r\n" + 
				"			<xsl:value-of select=\"@retrieveReferences\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<sharepoint:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</sharepoint:query >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-item-query>");
		
		transformerOf.put("sharepoint:list-item-update", "<sharepoint:list-item-update>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@itemId\">\r\n" + 
				"		<xsl:attribute name=\"itemId\">\r\n" + 
				"			<xsl:value-of select=\"@itemId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint:updated-properties/@ref\">\r\n" + 
				"		<sharepoint:updated-properties >\r\n" + 
				"			<xsl:value-of select=\"sharepoint:updated-properties/@ref\" />\r\n" + 
				"		</sharepoint:updated-properties >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-item-update>");
		
		transformerOf.put("sharepoint:list-update", "<sharepoint:list-update>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@itemId\">\r\n" + 
				"		<xsl:attribute name=\"itemId\">\r\n" + 
				"			<xsl:value-of select=\"@itemId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint:list/@ref\">\r\n" + 
				"		<sharepoint:list >\r\n" + 
				"			<xsl:value-of select=\"sharepoint:list/@ref\" />\r\n" + 
				"		</sharepoint:list >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-update>");
		
		transformerOf.put("sharepoint:resolve-object", "<sharepoint:resolve-object>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@url\">\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@resolveRequestType\">\r\n" + 
				"		<xsl:attribute name=\"resolveRequestType\">\r\n" + 
				"			<xsl:value-of select=\"@resolveRequestType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@body-ref\">\r\n" + 
				"		<sharepoint:body >\r\n" + 
				"			<xsl:value-of select=\"@body-ref\" />\r\n" + 
				"		</sharepoint:body >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:resolve-object>");
		
		transformerOf.put("peoplesoft:config", "<peoplesoft:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<peoplesoft:connection>\r\n" + 
				"		<xsl:if test=\"@server\">\r\n" + 
				"			<xsl:attribute name=\"server\">\r\n" + 
				"				<xsl:value-of select=\"@server\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@domainConnectionPwd\">\r\n" + 
				"			<xsl:attribute name=\"domainConnectionPassword\">\r\n" + 
				"				<xsl:value-of select=\"@domainConnectionPwd\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</peoplesoft:connection>\r\n" + 
				"</peoplesoft:config>");
		
		transformerOf.put("peoplesoft:invoke-operation", "<peoplesoft:invoke-operation>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@key\">\r\n" + 
				"		<xsl:attribute name=\"component\">\r\n" + 
				"			<xsl:value-of select=\"substring-before(@key, '||')\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"operation\">\r\n" + 
				"			<xsl:value-of select=\"substring-after(@key, '||')\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@payload-ref\">\r\n" + 
				"		<peoplesoft:content >\r\n" + 
				"			<xsl:value-of select=\"@payload-ref\" />\r\n" + 
				"		</peoplesoft:content >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</peoplesoft:invoke-operation>");
		
		transformerOf.put("sfdc-composite:config", "<salesforce-composite:composite-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<salesforce-composite:oauth-user-pass-connection>\r\n" + 
				"		<xsl:if test=\"@consumerKey\">\r\n" + 
				"			<xsl:attribute name=\"consumerKey\">\r\n" + 
				"				<xsl:value-of select=\"@consumerKey\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@consumerSecret\">\r\n" + 
				"			<xsl:attribute name=\"consumerSecret\">\r\n" + 
				"				<xsl:value-of select=\"@consumerSecret\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@securityToken\">\r\n" + 
				"			<xsl:attribute name=\"securityToken\">\r\n" + 
				"				<xsl:value-of select=\"@securityToken\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@tokenEndpoint\">\r\n" + 
				"			<xsl:attribute name=\"tokenEndpoint\">\r\n" + 
				"				<xsl:value-of select=\"@tokenEndpoint\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyHost\">\r\n" + 
				"			<xsl:attribute name=\"proxyHost\">\r\n" + 
				"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"proxyPort\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyUsername\">\r\n" + 
				"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
				"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPassword\">\r\n" + 
				"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</salesforce-composite:oauth-user-pass-connection>\r\n" + 
				"</salesforce-composite:composite-config>");
		
		transformerOf.put("sfdc-composite:create-sobject-collections", "<salesforce-composite:create-sobject-collections>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@requestBody-ref\">\r\n" + 
				"		<salesforce-composite:request-body >\r\n" + 
				"			<xsl:value-of select=\"@requestBody-ref\" />\r\n" + 
				"		</salesforce-composite:request-body >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:create-sobject-collections>");
		
		transformerOf.put("sfdc-composite:create-sobject-tree", "<salesforce-composite:create-sobject-tree>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@type\">\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"			<xsl:value-of select=\"@type\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@sObjects-ref\">\r\n" + 
				"		<salesforce-composite:s-objects >\r\n" + 
				"			<xsl:value-of select=\"@sObjects-ref\" />\r\n" + 
				"		</salesforce-composite:s-objects >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:create-sobject-tree>");
		
		transformerOf.put("sfdc-composite:delete-sobject-collections", "<salesforce-composite:delete-sobject-collections>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@allOrNone\">\r\n" + 
				"		<xsl:attribute name=\"allOrNone\">\r\n" + 
				"			<xsl:value-of select=\"@allOrNone\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sfdc-composite:ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"ids\">\r\n" + 
				"			<xsl:value-of select=\"sfdc-composite:ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:delete-sobject-collections>");
		
		transformerOf.put("sfdc-composite:execute-composite-batch", "<salesforce-composite:execute-composite-batch>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@subRequests-ref\">\r\n" + 
				"		<salesforce-composite:sub-requests >\r\n" + 
				"			<xsl:value-of select=\"@subRequests-ref\" />\r\n" + 
				"		</salesforce-composite:sub-requests >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:execute-composite-batch>");
		
		transformerOf.put("sfdc-composite:execute-composite-request", "<salesforce-composite:execute-composite-request>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@requests-ref\">\r\n" + 
				"		<salesforce-composite:request-body >\r\n" + 
				"			<xsl:value-of select=\"@requests-ref\" />\r\n" + 
				"		</salesforce-composite:request-body >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:execute-composite-request>");
		
		transformerOf.put("sfdc-composite:get-sobject-collections", "<salesforce-composite:get-sobject-collections>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@type\">\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"			<xsl:value-of select=\"@type\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sfdc-composite:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"sfdc-composite:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sfdc-composite:ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"ids\">\r\n" + 
				"			<xsl:value-of select=\"sfdc-composite:ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:get-sobject-collections>");
		
		transformerOf.put("sfdc-composite:post-create", "<salesforce-composite:post-create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@createResult-ref\">\r\n" + 
				"		<salesforce-composite:create-result >\r\n" + 
				"			<xsl:value-of select=\"@createResult-ref\" />\r\n" + 
				"		</salesforce-composite:create-result >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:post-create>");
		
		transformerOf.put("sfdc-composite:post-delete", "<salesforce-composite:post-delete>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@deleteResult-ref\">\r\n" + 
				"		<salesforce-composite:delete-result >\r\n" + 
				"			<xsl:value-of select=\"@deleteResult-ref\" />\r\n" + 
				"		</salesforce-composite:delete-result >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:post-delete>");
		
		transformerOf.put("sfdc-composite:post-get-limits", "<salesforce-composite:post-get-limits>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@getLimitsResult-ref\">\r\n" + 
				"		<salesforce-composite:get-limits-result >\r\n" + 
				"			<xsl:value-of select=\"@getLimitsResult-ref\" />\r\n" + 
				"		</salesforce-composite:get-limits-result >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:post-get-limits>");
		
		transformerOf.put("sfdc-composite:post-query", "<salesforce-composite:post-query>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<salesforce-composite:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</salesforce-composite:query >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@queryResult-ref\">\r\n" + 
				"		<salesforce-composite:query-result >\r\n" + 
				"			<xsl:value-of select=\"@queryResult-ref\" />\r\n" + 
				"		</salesforce-composite:query-result >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:post-query>");
		
		transformerOf.put("sfdc-composite:post-query-all", "<salesforce-composite:post-query-all>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@queryResult-ref\">\r\n" + 
				"		<salesforce-composite:query-result >\r\n" + 
				"			<xsl:value-of select=\"@queryResult-ref\" />\r\n" + 
				"		</salesforce-composite:query-result >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:post-query-all>");
		
		transformerOf.put("sfdc-composite:post-retrieve", "<salesforce-composite:post-retrieve>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@type\">\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"			<xsl:value-of select=\"@type\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@retrieveData-ref\">\r\n" + 
				"		<salesforce-composite:retrieve-data >\r\n" + 
				"			<xsl:value-of select=\"@retrieveData-ref\" />\r\n" + 
				"		</salesforce-composite:retrieve-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:post-retrieve>");
		
		transformerOf.put("sfdc-composite:post-search", "<salesforce-composite:post-search>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@searchResult-ref\">\r\n" + 
				"		<salesforce-composite:search-result >\r\n" + 
				"			<xsl:value-of select=\"@searchResult-ref\" />\r\n" + 
				"		</salesforce-composite:search-result >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:post-search>");
		
		transformerOf.put("sfdc-composite:post-update", "<salesforce-composite:post-update>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@updateResult-ref\">\r\n" + 
				"		<salesforce-composite:update-result >\r\n" + 
				"			<xsl:value-of select=\"@updateResult-ref\" />\r\n" + 
				"		</salesforce-composite:update-result >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:post-update>");
		
		transformerOf.put("sfdc-composite:pre-create", "<salesforce-composite:pre-create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@type\">\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"			<xsl:value-of select=\"@type\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@sObject-ref\">\r\n" + 
				"		<salesforce-composite:s-object >\r\n" + 
				"			<xsl:value-of select=\"@sObject-ref\" />\r\n" + 
				"		</salesforce-composite:s-object >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:pre-create>");
		
		transformerOf.put("sfdc-composite:pre-delete", "<salesforce-composite:pre-delete>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@type\">\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"			<xsl:value-of select=\"@type\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@sObject-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@sObject-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:pre-delete>");
		
		transformerOf.put("sfdc-composite:pre-get-limits", "<salesforce-composite:pre-get-limits>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</salesforce-composite:pre-get-limits>");
		
		transformerOf.put("sfdc-composite:pre-query", "<salesforce-composite:pre-query>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<salesforce-composite:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</salesforce-composite:query >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:pre-query>");
		
		transformerOf.put("sfdc-composite:pre-query-all", "<salesforce-composite:pre-query-all>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<salesforce-composite:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</salesforce-composite:query >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:pre-query-all>");
		
		transformerOf.put("sfdc-composite:pre-retrieve", "<salesforce-composite:pre-retrieve>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@retrieveData-ref\">\r\n" + 
				"		<salesforce-composite:retrieve-data >\r\n" + 
				"			<xsl:value-of select=\"@retrieveData-ref\" />\r\n" + 
				"		</salesforce-composite:retrieve-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:pre-retrieve>");
		
		transformerOf.put("sfdc-composite:pre-search", "<salesforce-composite:pre-search>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@search\">\r\n" + 
				"		<salesforce-composite:search >\r\n" + 
				"			<xsl:value-of select=\"@search\" />\r\n" + 
				"		</salesforce-composite:search >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:pre-search>");
		
		transformerOf.put("sfdc-composite:pre-update", "<salesforce-composite:pre-update>\r\n" + 
				"	<xsl:if test=\"@type\">\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"			<xsl:value-of select=\"@type\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@sObject-ref\">\r\n" + 
				"		<salesforce-composite:s-object >\r\n" + 
				"			<xsl:value-of select=\"@sObject-ref\" />\r\n" + 
				"		</salesforce-composite:s-object >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:pre-update>");
		
		transformerOf.put("sfdc-composite:update-sobject-collections", "<salesforce-composite:update-sobject-collections>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@requestBody-ref\">\r\n" + 
				"		<salesforce-composite:request-body >\r\n" + 
				"			<xsl:value-of select=\"@requestBody-ref\" />\r\n" + 
				"		</salesforce-composite:request-body >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</salesforce-composite:update-sobject-collections>");
		
		transformerOf.put("sfdc-marketing-cloud:config", "<sfdc-marketing-cloud:sfdc-marketing-cloud-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sfdc-marketing-cloud:basic-connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@endpoint\">\r\n" + 
				"			<xsl:attribute name=\"authEndPoint\">\r\n" + 
				"				<xsl:value-of select=\"@endpoint\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@readTimeout\">\r\n" + 
				"			<xsl:attribute name=\"readTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@readTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sfdc-marketing-cloud:basic-connection>\r\n" + 
				"</sfdc-marketing-cloud:sfdc-marketing-cloud-config>");
		
		transformerOf.put("sfdc-marketing-cloud:configure-create", "<sfdc-marketing-cloud:configure-create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@configureOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"configureOptions\">\r\n" + 
				"			<xsl:value-of select=\"@configureOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@configurations-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:configurations >\r\n" + 
				"			<xsl:value-of select=\"@configurations-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:configurations >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:configure-create>");
		
		transformerOf.put("sfdc-marketing-cloud:config-with-oauth", "<sfdc-marketing-cloud:sfdc-marketing-cloud-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sfdc-marketing-cloud:oauth-user-pass-connection>\r\n" + 
				"		<xsl:if test=\"@clientId\">\r\n" + 
				"			<xsl:attribute name=\"clientId\">\r\n" + 
				"				<xsl:value-of select=\"@clientId\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@clientSecret\">\r\n" + 
				"			<xsl:attribute name=\"clientSecret\">\r\n" + 
				"				<xsl:value-of select=\"@clientSecret\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@authEndpoint\">\r\n" + 
				"			<xsl:attribute name=\"authEndpoint\">\r\n" + 
				"				<xsl:value-of select=\"@authEndpoint\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@soapEndpoint\">\r\n" + 
				"			<xsl:attribute name=\"soapEndpoint\">\r\n" + 
				"				<xsl:value-of select=\"@soapEndpoint\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@readTimeout\">\r\n" + 
				"			<xsl:attribute name=\"readTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@readTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sfdc-marketing-cloud:oauth-user-pass-connection>\r\n" + 
				"</sfdc-marketing-cloud:sfdc-marketing-cloud-config>");
		
		transformerOf.put("sfdc-marketing-cloud:configure-delete", "<sfdc-marketing-cloud:configure-delete>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@configureOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"configureOptions\">\r\n" + 
				"			<xsl:value-of select=\"@configureOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@configurations-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:configurations >\r\n" + 
				"			<xsl:value-of select=\"@configurations-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:configurations >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:configure-delete>");
		
		transformerOf.put("sfdc-marketing-cloud:configure-update", "<sfdc-marketing-cloud:configure-update>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@configureOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"configureOptions\">\r\n" + 
				"			<xsl:value-of select=\"@configureOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@configurations-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:configurations >\r\n" + 
				"			<xsl:value-of select=\"@configurations-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:configurations >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:configure-update>");
		
		transformerOf.put("sfdc-marketing-cloud:create", "<sfdc-marketing-cloud:create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@createOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"createOptions\">\r\n" + 
				"			<xsl:value-of select=\"@createOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@apiObjects-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:api-objects >\r\n" + 
				"			<xsl:value-of select=\"@apiObjects-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:api-objects >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:create>");
		
		transformerOf.put("sfdc-marketing-cloud:delete", "<sfdc-marketing-cloud:delete>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@deleteOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"deleteOptions\">\r\n" + 
				"			<xsl:value-of select=\"@deleteOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@apiObjects-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:api-objects >\r\n" + 
				"			<xsl:value-of select=\"@apiObjects-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:api-objects >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:delete>");
		
		transformerOf.put("sfdc-marketing-cloud:perform-get-max-count", "<sfdc-marketing-cloud:perform-get-max-count>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@performOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"performOptions\">\r\n" + 
				"			<xsl:value-of select=\"@performOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@definitions-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:definitions >\r\n" + 
				"			<xsl:value-of select=\"@definitions-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:definitions>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:perform-get-max-count>");
		
		transformerOf.put("sfdc-marketing-cloud:perform-start", "<sfdc-marketing-cloud:perform-start>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@performOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"performOptions\">\r\n" + 
				"			<xsl:value-of select=\"@performOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@definitions-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:definitions >\r\n" + 
				"			<xsl:value-of select=\"@definitions-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:definitions>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:perform-start>");
		
		transformerOf.put("sfdc-marketing-cloud:perform-stop", "<sfdc-marketing-cloud:perform-stop>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@performOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"performOptions\">\r\n" + 
				"			<xsl:value-of select=\"@performOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@definitions-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:definitions >\r\n" + 
				"			<xsl:value-of select=\"@definitions-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:definitions>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:perform-stop>");
		
		transformerOf.put("sfdc-marketing-cloud:retrieve", "<sfdc-marketing-cloud:retrieve>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@retrieveOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"retrieveOptions\">\r\n" + 
				"			<xsl:value-of select=\"@retrieveOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<sfdc-marketing-cloud:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</sfdc-marketing-cloud:query>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:retrieve>");
		
		transformerOf.put("sfdc-marketing-cloud:schedule-start", "<sfdc-marketing-cloud:schedule-start>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@scheduleOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"scheduleOptions\">\r\n" + 
				"			<xsl:value-of select=\"@scheduleOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@interactions-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:interactions >\r\n" + 
				"			<xsl:value-of select=\"@interactions-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:interactions>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@schedule-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:schedule-definitions >\r\n" + 
				"			<xsl:value-of select=\"@schedule-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:schedule-definitions >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:schedule-start>");
		
		transformerOf.put("sfdc-marketing-cloud:update", "<sfdc-marketing-cloud:update>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@updateOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"updateOptions\">\r\n" + 
				"			<xsl:value-of select=\"@updateOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@apiObjects-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:api-objects >\r\n" + 
				"			<xsl:value-of select=\"@apiObjects-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:api-objects >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:update>");
		
		transformerOf.put("sfdc-marketing-cloud:upsert", "<sfdc-marketing-cloud:upsert>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@objectType\">\r\n" + 
				"		<xsl:attribute name=\"objectType\">\r\n" + 
				"			<xsl:value-of select=\"@objectType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@upsertOptions-ref\">\r\n" + 
				"		<xsl:attribute name=\"upsertOptions\">\r\n" + 
				"			<xsl:value-of select=\"@upsertOptions-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@apiObjects-ref\">\r\n" + 
				"		<sfdc-marketing-cloud:api-objects >\r\n" + 
				"			<xsl:value-of select=\"@apiObjects-ref\" />\r\n" + 
				"		</sfdc-marketing-cloud:api-objects >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sfdc-marketing-cloud:upsert>");
		
		transformerOf.put("twilio:config", "<twilio-connector:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@username\">\r\n" + 
				"		<xsl:attribute name=\"property_username\">\r\n" + 
				"			<xsl:value-of select=\"@username\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@password\">\r\n" + 
				"		<xsl:attribute name=\"property_password\">\r\n" + 
				"			<xsl:value-of select=\"@password\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:config>");
		
		transformerOf.put("twilio:delete-media", "<twilio-connector:delete-media>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@AccountSid\">\r\n" + 
				"		<xsl:attribute name=\"account-sid\">\r\n" + 
				"			<xsl:value-of select=\"@AccountSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@MessageSid\">\r\n" + 
				"		<xsl:attribute name=\"message-sid\">\r\n" + 
				"			<xsl:value-of select=\"@MessageSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@MediaSid\">\r\n" + 
				"		<xsl:attribute name=\"media-sid\">\r\n" + 
				"			<xsl:value-of select=\"@MediaSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@DateCreated\">\r\n" + 
				"		<xsl:attribute name=\"date-created\">\r\n" + 
				"			<xsl:value-of select=\"@DateCreated\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:delete-media>");
		
		transformerOf.put("twilio:delete-message", "<twilio-connector:delete-message>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@AccountSid\">\r\n" + 
				"		<xsl:attribute name=\"account-sid\">\r\n" + 
				"			<xsl:value-of select=\"@AccountSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@MessageSid\">\r\n" + 
				"		<xsl:attribute name=\"message-sid\">\r\n" + 
				"			<xsl:value-of select=\"@MessageSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:delete-message>");
		
		transformerOf.put("twilio:get-media", "<twilio-connector:get-media>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@AccountSid\">\r\n" + 
				"		<xsl:attribute name=\"account-sid\">\r\n" + 
				"			<xsl:value-of select=\"@AccountSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@MessageSid\">\r\n" + 
				"		<xsl:attribute name=\"message-sid\">\r\n" + 
				"			<xsl:value-of select=\"@MessageSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@MediaSid\">\r\n" + 
				"		<xsl:attribute name=\"media-sid\">\r\n" + 
				"			<xsl:value-of select=\"@MediaSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@DateCreated\">\r\n" + 
				"		<xsl:attribute name=\"date-created\">\r\n" + 
				"			<xsl:value-of select=\"@DateCreated\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:get-media>");
		
		transformerOf.put("twilio:get-media-list", "<twilio-connector:get-media-list>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@AccountSid\">\r\n" + 
				"		<xsl:attribute name=\"account-sid\">\r\n" + 
				"			<xsl:value-of select=\"@AccountSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@MessageSid\">\r\n" + 
				"		<xsl:attribute name=\"message-sid\">\r\n" + 
				"			<xsl:value-of select=\"@MessageSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@DateCreated\">\r\n" + 
				"		<xsl:attribute name=\"date-created\">\r\n" + 
				"			<xsl:value-of select=\"@DateCreated\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:get-media-list>");
		
		transformerOf.put("twilio:get-message", "<twilio-connector:get-message>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@AccountSid\">\r\n" + 
				"		<xsl:attribute name=\"account-sid\">\r\n" + 
				"			<xsl:value-of select=\"@AccountSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@MessageSid\">\r\n" + 
				"		<xsl:attribute name=\"message-sid\">\r\n" + 
				"			<xsl:value-of select=\"@MessageSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:get-message>");
		
		transformerOf.put("twilio:get-message-list", "<twilio-connector:get-message-list>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@AccountSid\">\r\n" + 
				"		<xsl:attribute name=\"account-sid\">\r\n" + 
				"			<xsl:value-of select=\"@AccountSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@To\">\r\n" + 
				"		<xsl:attribute name=\"to\">\r\n" + 
				"			<xsl:value-of select=\"@To\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@From\">\r\n" + 
				"		<xsl:attribute name=\"from\">\r\n" + 
				"			<xsl:value-of select=\"@From\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@DateSent\">\r\n" + 
				"		<xsl:attribute name=\"date-sent\">\r\n" + 
				"			<xsl:value-of select=\"@DateSent\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:get-message-list>");
		
		transformerOf.put("twilio:redact-message", "<twilio-connector:redact-message>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@AccountSid\">\r\n" + 
				"		<xsl:attribute name=\"account-sid\">\r\n" + 
				"			<xsl:value-of select=\"@AccountSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@MessageSid\">\r\n" + 
				"		<xsl:attribute name=\"message-sid\">\r\n" + 
				"			<xsl:value-of select=\"@MessageSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@entity-ref\">\r\n" + 
				"		<twilio-connector:redact-message-request-data >\r\n" + 
				"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
				"		</twilio-connector:redact-message-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:redact-message>");
		
		transformerOf.put("twilio:send-message", "<twilio-connector:send-message>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@AccountSid\">\r\n" + 
				"		<xsl:attribute name=\"account-sid\">\r\n" + 
				"			<xsl:value-of select=\"@AccountSid\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@entity-ref\">\r\n" + 
				"		<twilio-connector:send-message-request-data >\r\n" + 
				"			<xsl:value-of select=\"@entity-ref\" />\r\n" + 
				"		</twilio-connector:send-message-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</twilio-connector:send-message>");
		
		transformerOf.put("sharepoint-online:online-connection-config", "<sharepoint:sharepoint-online-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:online-connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"onlineUsername\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"onlinePassword\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyHost\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyUsername\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPassword\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:online-connection>\r\n" + 
				"</sharepoint:sharepoint-online-config>");
		
		transformerOf.put("sharepoint-online:attach-file", "<sharepoint:attach-file>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listTitle\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint-online:attachment-info/@itemId\">\r\n" + 
				"		<xsl:attribute name=\"itemId\">\r\n" + 
				"			<xsl:value-of select=\"sharepoint-online:attachment-info/@itemId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint-online:attachment-info/@fileName\">\r\n" + 
				"		<xsl:attribute name=\"fileName\">\r\n" + 
				"			<xsl:value-of select=\"sharepoint-online:attachment-info/@fileName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint-online:attachment-info/@fileContentStream-ref\">\r\n" + 
				"		<sharepoint:content>\r\n" + 
				"			<xsl:value-of select=\"sharepoint-online:attachment-info/@fileContentStream-ref\" />\r\n" + 
				"		</sharepoint:content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:attach-file>");
		
		transformerOf.put("sharepoint-online:okta-connection-config", "<sharepoint:sharepoint-online-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:okta-connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"oktaUsername\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"oktaPassword\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@oktaDomain\">\r\n" + 
				"			<xsl:attribute name=\"oktaDomain\">\r\n" + 
				"				<xsl:value-of select=\"@oktaDomain\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@sharepointEmbededLink\">\r\n" + 
				"			<xsl:attribute name=\"sharepointEmbededLink\">\r\n" + 
				"				<xsl:value-of select=\"@sharepointEmbededLink\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@oktaApiToken\">\r\n" + 
				"			<xsl:attribute name=\"oktaApiToken\">\r\n" + 
				"				<xsl:value-of select=\"@oktaApiToken\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyHost\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyUsername\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPassword\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:okta-connection>\r\n" + 
				"</sharepoint:sharepoint-online-config>");
		
		transformerOf.put("sharepoint-online:file-add", "<sharepoint:file-add>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@overwrite\">\r\n" + 
				"		<xsl:attribute name=\"overwrite\">\r\n" + 
				"			<xsl:value-of select=\"@overwrite\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fileContentStream-ref\">\r\n" + 
				"		<sharepoint:file-content-stream>\r\n" + 
				"			<xsl:value-of select=\"@fileContentStream-ref\" />\r\n" + 
				"		</sharepoint:file-content-stream>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-add>");
		
		transformerOf.put("sharepoint-online:sectoken-connection-config", "<sharepoint:sharepoint-online-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:security-token-connection>\r\n" + 
				"		<xsl:if test=\"@securityToken\">\r\n" + 
				"			<xsl:attribute name=\"securityToken\">\r\n" + 
				"				<xsl:value-of select=\"@securityToken\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@securityTokenProvider-ref\">\r\n" + 
				"			<xsl:attribute name=\"securityTokenProvider\">\r\n" + 
				"				<xsl:value-of select=\"@securityTokenProvider-ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyHost\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyUsername\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPassword\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:security-token-connection>\r\n" + 
				"</sharepoint:sharepoint-online-config>");
		
		transformerOf.put("sharepoint-online:file-approve", "<sharepoint:file-approve>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@comment\">\r\n" + 
				"		<xsl:attribute name=\"comment\">\r\n" + 
				"			<xsl:value-of select=\"@comment\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-approve>");
		
		transformerOf.put("sharepoint-online:file-check-in", "<sharepoint:file-check-in>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@checkInType\">\r\n" + 
				"		<xsl:attribute name=\"checkInType\">\r\n" + 
				"			<xsl:value-of select=\"@checkInType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@comment\">\r\n" + 
				"		<xsl:attribute name=\"comment\">\r\n" + 
				"			<xsl:value-of select=\"@comment\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-check-in>");
		
		transformerOf.put("sharepoint-online:file-check-out", "<sharepoint:file-check-out>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-check-out>");
		
		transformerOf.put("sharepoint-online:file-copy-to", "<sharepoint:file-copy-to>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@newFileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"newFileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@newFileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@overwrite\">\r\n" + 
				"		<xsl:attribute name=\"overwrite\">\r\n" + 
				"			<xsl:value-of select=\"@overwrite\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-copy-to>");
		
		transformerOf.put("sharepoint-online:file-delete", "<sharepoint:file-delete>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-delete>");
		
		transformerOf.put("sharepoint-online:file-deny", "<sharepoint:file-deny>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@comment\">\r\n" + 
				"		<xsl:attribute name=\"comment\">\r\n" + 
				"			<xsl:value-of select=\"@comment\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-deny>");
		
		transformerOf.put("sharepoint-online:file-get-content", "<sharepoint:file-get-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-get-content>");
		
		transformerOf.put("sharepoint-online:file-publish", "<sharepoint:file-publish>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@comment\">\r\n" + 
				"		<xsl:attribute name=\"comment\">\r\n" + 
				"			<xsl:value-of select=\"@comment\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-publish>");
		
		transformerOf.put("sharepoint-online:file-query", "<sharepoint:file-query>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@startingFolderPath\">\r\n" + 
				"		<xsl:attribute name=\"startingFolderPath\">\r\n" + 
				"			<xsl:value-of select=\"@startingFolderPath\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@recursive\">\r\n" + 
				"		<xsl:attribute name=\"recursive\">\r\n" + 
				"			<xsl:value-of select=\"@recursive\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<sharepoint:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</sharepoint:query >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-query>");
		
		transformerOf.put("sharepoint-online:file-recycle", "<sharepoint:file-recycle>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-recycle>");
		
		transformerOf.put("sharepoint-online:file-undo-check-out", "<sharepoint:file-undo-check-out>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-undo-check-out>\r\n" + 
				"");
		
		transformerOf.put("sharepoint-online:file-unpublish", "<sharepoint:file-unpublish>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@comment\">\r\n" + 
				"		<xsl:attribute name=\"comment\">\r\n" + 
				"			<xsl:value-of select=\"@comment\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-unpublish>");
		
		transformerOf.put("sharepoint-online:file-update-metadata", "<sharepoint:file-update-metadata>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileServerRelativeUrl\">\r\n" + 
				"		<xsl:attribute name=\"fileServerRelativeUrl\">\r\n" + 
				"			<xsl:value-of select=\"@fileServerRelativeUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint-online:updated-properties/@ref\">\r\n" + 
				"		<sharepoint:update-properties >\r\n" + 
				"			<xsl:value-of select=\"sharepoint-online:updated-properties/@ref\" />\r\n" + 
				"		</sharepoint:update-properties >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:file-update-metadata>");
		
		transformerOf.put("sharepoint-online:folder-create", "<sharepoint:folder-create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@url\">\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@welcomePage\">\r\n" + 
				"		<xsl:attribute name=\"welcomePage\">\r\n" + 
				"			<xsl:value-of select=\"@welcomePage\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:folder-create>");
		
		transformerOf.put("sharepoint-online:folder-delete", "<sharepoint:folder-delete>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@url\">\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:folder-delete>");
		
		transformerOf.put("sharepoint-online:folder-query", "<sharepoint:folder-query>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@startingFolderPath\">\r\n" + 
				"		<xsl:attribute name=\"startingFolderPath\">\r\n" + 
				"			<xsl:value-of select=\"@startingFolderPath\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@recursive\">\r\n" + 
				"		<xsl:attribute name=\"recursive\">\r\n" + 
				"			<xsl:value-of select=\"@recursive\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<sharepoint:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</sharepoint:query >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:folder-query>");
		
		transformerOf.put("sharepoint-online:list-create", "<sharepoint:list-create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"sharepoint-online:list/@ref\">\r\n" + 
				"		<sharepoint:list >\r\n" + 
				"			<xsl:value-of select=\"sharepoint-online:list/@ref\" />\r\n" + 
				"		</sharepoint:list >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-create>");
		
		transformerOf.put("sharepoint-online:list-delete", "<sharepoint:list-delete>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-delete>");
		
		transformerOf.put("sharepoint-online:list-get", "<sharepoint:list-get>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-get>");
		
		transformerOf.put("sharepoint-online:list-get-all", "<sharepoint:list-get-all>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</sharepoint:list-get-all>");
		
		transformerOf.put("sharepoint-online:list-item-create", "<sharepoint:list-item-create>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint-online:properties/@ref\">\r\n" + 
				"		<sharepoint:properties >\r\n" + 
				"			<xsl:value-of select=\"sharepoint-online:properties/@ref\" />\r\n" + 
				"		</sharepoint:properties >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-item-create>");
		
		transformerOf.put("sharepoint-online:list-item-delete", "<sharepoint:list-item-delete>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@itemId\">\r\n" + 
				"		<xsl:attribute name=\"itemId\">\r\n" + 
				"			<xsl:value-of select=\"@itemId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-item-delete>");
		
		transformerOf.put("sharepoint-online:list-item-query", "<sharepoint:list-item-query>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@retrieveReferences\">\r\n" + 
				"		<xsl:attribute name=\"retrieveReferences\">\r\n" + 
				"			<xsl:value-of select=\"@retrieveReferences\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<sharepoint:query >\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</sharepoint:query>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-item-query>");
		
		transformerOf.put("sharepoint-online:list-item-update", "<sharepoint:list-item-update>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@itemId\">\r\n" + 
				"		<xsl:attribute name=\"itemId\">\r\n" + 
				"			<xsl:value-of select=\"@itemId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint-online:updated-properties/@ref\">\r\n" + 
				"		<sharepoint:updated-properties >\r\n" + 
				"			<xsl:value-of select=\"sharepoint-online:updated-properties/@ref\"/>\r\n" + 
				"		</sharepoint:updated-properties>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-item-update>");
		
		transformerOf.put("sharepoint-online:list-update", "<sharepoint:list-update>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"listId\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"sharepoint-online:list/@ref\">\r\n" + 
				"		<sharepoint:list >\r\n" + 
				"			<xsl:value-of select=\"sharepoint-online:list/@ref\"/>\r\n" + 
				"		</sharepoint:list>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:list-update>");
		
		transformerOf.put("sharepoint-online:resolve-collection", "<sharepoint:resolve-collection>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@url\">\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:resolve-collection>");
		
		transformerOf.put("sharepoint-online:resolve-object", "<sharepoint:resolve-object>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@url\">\r\n" + 
				"		<xsl:attribute name=\"url\">\r\n" + 
				"			<xsl:value-of select=\"@url\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@resolveRequestType\">\r\n" + 
				"		<xsl:attribute name=\"resolveRequestType\">\r\n" + 
				"			<xsl:value-of select=\"@resolveRequestType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@body-ref\">\r\n" + 
				"		<sharepoint:body >\r\n" + 
				"			<xsl:value-of select=\"@body-ref\"/>\r\n" + 
				"		</sharepoint:body>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</sharepoint:resolve-object>");
		
		transformerOf.put("sharepoint2010:Claims", "<sharepoint:sharepoint-onpremise-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:claims-connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"claimsUsername\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"claimsPassword\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@stsUrl\">\r\n" + 
				"			<xsl:attribute name=\"stsUrl\">\r\n" + 
				"				<xsl:value-of select=\"@stsUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@scope\">\r\n" + 
				"			<xsl:attribute name=\"scope\">\r\n" + 
				"				<xsl:value-of select=\"@scope\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@domain\">\r\n" + 
				"			<xsl:attribute name=\"ntlmDomain\">\r\n" + 
				"				<xsl:value-of select=\"@domain\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:claims-connection>\r\n" + 
				"</sharepoint:sharepoint-onpremise-config>");
		
		transformerOf.put("sharepoint2010:kerberos-connection-config", "<sharepoint:sharepoint-onpremise-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:kerberos-connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"kerberosUsername\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"kerberosPassword\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@spn\">\r\n" + 
				"			<xsl:attribute name=\"spn\">\r\n" + 
				"				<xsl:value-of select=\"@spn\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@realm\">\r\n" + 
				"			<xsl:attribute name=\"realm\">\r\n" + 
				"				<xsl:value-of select=\"@realm\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@kdc\">\r\n" + 
				"			<xsl:attribute name=\"kdc\">\r\n" + 
				"				<xsl:value-of select=\"@kdc\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@loginPropertiesFilePath\">\r\n" + 
				"			<xsl:attribute name=\"loginPropertiesFilePath\">\r\n" + 
				"				<xsl:value-of select=\"@loginPropertiesFilePath\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@kerberosPropertiesFilePath\">\r\n" + 
				"			<xsl:attribute name=\"kerberosPropertiesFilePath\">\r\n" + 
				"				<xsl:value-of select=\"@kerberosPropertiesFilePath\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:kerberos-connection>\r\n" + 
				"</sharepoint:sharepoint-onpremise-config>");
		
		transformerOf.put("sharepoint2010:NTLM", "<sharepoint:sharepoint-onpremise-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sharepoint:ntlm-connection>\r\n" + 
				"		<xsl:if test=\"@domain\">\r\n" + 
				"			<xsl:attribute name=\"domain\">\r\n" + 
				"				<xsl:value-of select=\"@domain\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"ntlmUsername\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"ntlmPassword\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@siteUrl\">\r\n" + 
				"			<xsl:attribute name=\"siteUrl\">\r\n" + 
				"				<xsl:value-of select=\"@siteUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@disableCnCheck\">\r\n" + 
				"			<xsl:attribute name=\"disableCnCheck\">\r\n" + 
				"				<xsl:value-of select=\"@disableCnCheck\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sharepoint:ntlm-connection>\r\n" + 
				"</sharepoint:sharepoint-onpremise-config>");
		
		transformerOf.put("siebel:config", "<siebel:siebel-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@defaultViewModeBusObjects\">\r\n" + 
				"		<xsl:attribute name=\"defaultViewModeBusComp\">\r\n" + 
				"			<xsl:value-of select=\"@defaultViewModeBusObjects\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dataSenseFilterQueryBusComp\">\r\n" + 
				"		<xsl:attribute name=\"dataSenseFilterQueryBusComp\">\r\n" + 
				"			<xsl:value-of select=\"@dataSenseFilterQueryBusComp\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dataSenseFilterQueryBusObjects\">\r\n" + 
				"		<xsl:attribute name=\"dataSenseFilterQueryIntObjects\">\r\n" + 
				"			<xsl:value-of select=\"@dataSenseFilterQueryBusObjects\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@defaultViewModeBusComp\">\r\n" + 
				"		<xsl:attribute name=\"defaultViewMode\">\r\n" + 
				"			<xsl:value-of select=\"@defaultViewModeBusComp\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<siebel:basic-connection>\r\n" + 
				"		<xsl:if test=\"@user\">\r\n" + 
				"			<xsl:attribute name=\"user\">\r\n" + 
				"				<xsl:value-of select=\"@user\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@server\">\r\n" + 
				"			<xsl:attribute name=\"server\">\r\n" + 
				"				<xsl:value-of select=\"@server\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@port\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"@port\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@serverName\">\r\n" + 
				"			<xsl:attribute name=\"serverName\">\r\n" + 
				"				<xsl:value-of select=\"@serverName\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@objectManager\">\r\n" + 
				"			<xsl:attribute name=\"objectManager\">\r\n" + 
				"				<xsl:value-of select=\"@objectManager\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@language\">\r\n" + 
				"			<xsl:attribute name=\"language\">\r\n" + 
				"				<xsl:value-of select=\"@language\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@encoding\">\r\n" + 
				"			<xsl:attribute name=\"encoding\">\r\n" + 
				"				<xsl:value-of select=\"@encoding\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</siebel:basic-connection>\r\n" + 
				"</siebel:siebel-config>");
		
		transformerOf.put("siebel:create-business-component", "<siebel:create-business-component>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@businessObjectComponentType\">\r\n" + 
				"		<xsl:attribute name=\"businessObjectComponentType\">\r\n" + 
				"			<xsl:value-of select=\"@businessObjectComponentType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"siebel:business-component-fields/@ref\">\r\n" + 
				"		<siebel:business-component-fields>\r\n" + 
				"			<xsl:value-of select=\"siebel:business-component-fields/@ref\" />\r\n" + 
				"		</siebel:business-component-fields>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</siebel:create-business-component>");
		
		transformerOf.put("siebel:query-business-components", "<siebel:query-business-components>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@businessObjectComponentType\">\r\n" + 
				"		<xsl:attribute name=\"businessObjectComponentType\">\r\n" + 
				"			<xsl:value-of select=\"@businessObjectComponentType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@searchExpression\">\r\n" + 
				"		<siebel:query-definition>\r\n" + 
				"			<xsl:value-of select=\"@searchExpression\" />\r\n" + 
				"		</siebel:query-definition>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</siebel:query-business-components>");
		
		transformerOf.put("siebel:query-join-business-components", "<siebel:query-join-business-components>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@businessObjectComponentType\">\r\n" + 
				"		<xsl:attribute name=\"businessObjectComponentType\">\r\n" + 
				"			<xsl:value-of select=\"@businessObjectComponentType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@businessObjectComponentTypeToJoin\">\r\n" + 
				"		<siebel:query-to-join-definition>\r\n" + 
				"			<xsl:value-of select=\"@businessObjectComponentTypeToJoin\" />\r\n" + 
				"		</siebel:query-to-join-definition>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</siebel:query-join-business-components>");
		
		transformerOf.put("siebel:update-business-component", "<siebel:update-business-component>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@businessObjectComponentType\">\r\n" + 
				"		<xsl:attribute name=\"businessObjectComponentType\">\r\n" + 
				"			<xsl:value-of select=\"@businessObjectComponentType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@viewMode\">\r\n" + 
				"		<xsl:attribute name=\"viewMode\">\r\n" + 
				"			<xsl:value-of select=\"@viewMode\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"siebel:search-spec/@ref\">\r\n" + 
				"		<xsl:attribute name=\"searchSpec\">\r\n" + 
				"			<xsl:value-of select=\"siebel:search-spec/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"siebel:business-component-fields/@ref\">\r\n" + 
				"		<siebel:business-component-fields >\r\n" + 
				"			<xsl:value-of select=\"siebel:business-component-fields/@ref\" />\r\n" + 
				"		</siebel:business-component-fields >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</siebel:update-business-component>");
		
		transformerOf.put("siebel:upsert-business-component", "<siebel:upsert-business-component>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@businessObjectComponentType\">\r\n" + 
				"		<xsl:attribute name=\"businessObjectComponentType\">\r\n" + 
				"			<xsl:value-of select=\"@businessObjectComponentType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@viewMode\">\r\n" + 
				"		<xsl:attribute name=\"viewMode\">\r\n" + 
				"			<xsl:value-of select=\"@viewMode\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"siebel:id-fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"recordIds\">\r\n" + 
				"			<xsl:value-of select=\"siebel:id-fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"siebel:business-component-fields/@ref\">\r\n" + 
				"		<siebel:business-component-fields >\r\n" + 
				"			<xsl:value-of select=\"siebel:business-component-fields/@ref\" />\r\n" + 
				"		</siebel:business-component-fields >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</siebel:upsert-business-component>");
		
		transformerOf.put("siebel-bs:config", "<siebel:siebel-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@defaultViewMode\">\r\n" + 
				"		<xsl:attribute name=\"defaultViewModeBusComp\">\r\n" + 
				"			<xsl:value-of select=\"@defaultViewMode\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dataSenseFilterQuery\">\r\n" + 
				"		<xsl:attribute name=\"dataSenseFilterQuery\">\r\n" + 
				"			<xsl:value-of select=\"@dataSenseFilterQuery\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<siebel:basic-connection>\r\n" + 
				"		<xsl:if test=\"@user\">\r\n" + 
				"			<xsl:attribute name=\"user\">\r\n" + 
				"				<xsl:value-of select=\"@user\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@server\">\r\n" + 
				"			<xsl:attribute name=\"server\">\r\n" + 
				"				<xsl:value-of select=\"@server\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@port\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"@port\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@serverName\">\r\n" + 
				"			<xsl:attribute name=\"serverName\">\r\n" + 
				"				<xsl:value-of select=\"@serverName\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@rsaEnabled\">\r\n" + 
				"			<xsl:attribute name=\"rsaEncryption\">\r\n" + 
				"				<xsl:value-of select=\"@rsaEnabled\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@objectManager\">\r\n" + 
				"			<xsl:attribute name=\"objectManager\">\r\n" + 
				"				<xsl:value-of select=\"@objectManager\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@language\">\r\n" + 
				"			<xsl:attribute name=\"language\">\r\n" + 
				"				<xsl:value-of select=\"@language\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@encoding\">\r\n" + 
				"			<xsl:attribute name=\"encoding\">\r\n" + 
				"				<xsl:value-of select=\"@encoding\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</siebel:basic-connection>\r\n" + 
				"</siebel:siebel-config>");
		
		transformerOf.put("siebel-bs:execute", "<siebel:execute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@serviceName\">\r\n" + 
				"		<xsl:attribute name=\"serviceName\">\r\n" + 
				"			<xsl:value-of select=\"@serviceName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@methodName\">\r\n" + 
				"		<xsl:attribute name=\"methodName\">\r\n" + 
				"			<xsl:value-of select=\"@methodName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"siebel-bs:input/@ref\">\r\n" + 
				"		<siebel:input >\r\n" + 
				"			<xsl:value-of select=\"siebel-bs:input/@ref\" />\r\n" + 
				"		</siebel:input >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</siebel:execute>");
		
		transformerOf.put("siebel-bs:execute-business-service", "<siebel:execute-business-service>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@businessService\">\r\n" + 
				"		<xsl:attribute name=\"businessService\">\r\n" + 
				"			<xsl:value-of select=\"@businessService\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"siebel-bs:input-properties/@ref\">\r\n" + 
				"		<siebel:input-properties >\r\n" + 
				"			<xsl:value-of select=\"siebel-bs:input-properties/@ref\" />\r\n" + 
				"		</siebel:input-properties >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</siebel:execute-business-service>");
		
		transformerOf.put("siebel-io:config", "<siebel:siebel-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@defaultViewMode\">\r\n" + 
				"		<xsl:attribute name=\"defaultViewModeBusComp\">\r\n" + 
				"			<xsl:value-of select=\"@defaultViewMode\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dataSenseFilterQueryIntObjects\">\r\n" + 
				"		<xsl:attribute name=\"dataSenseFilterQuery\">\r\n" + 
				"			<xsl:value-of select=\"@dataSenseFilterQueryIntObjects\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dataSenseFlatFields\">\r\n" + 
				"		<xsl:attribute name=\"outputEnrichedWithInputPayload\">\r\n" + 
				"			<xsl:value-of select=\"@dataSenseFlatFields\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<siebel:basic-connection>\r\n" + 
				"		<xsl:if test=\"@user\">\r\n" + 
				"			<xsl:attribute name=\"user\">\r\n" + 
				"				<xsl:value-of select=\"@user\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@server\">\r\n" + 
				"			<xsl:attribute name=\"server\">\r\n" + 
				"				<xsl:value-of select=\"@server\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@port\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"@port\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@serverName\">\r\n" + 
				"			<xsl:attribute name=\"serverName\">\r\n" + 
				"				<xsl:value-of select=\"@serverName\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@rsaEnabled\">\r\n" + 
				"			<xsl:attribute name=\"rsaEncryption\">\r\n" + 
				"				<xsl:value-of select=\"@rsaEnabled\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@objectManager\">\r\n" + 
				"			<xsl:attribute name=\"objectManager\">\r\n" + 
				"				<xsl:value-of select=\"@objectManager\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@language\">\r\n" + 
				"			<xsl:attribute name=\"language\">\r\n" + 
				"				<xsl:value-of select=\"@language\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@encoding\">\r\n" + 
				"			<xsl:attribute name=\"encoding\">\r\n" + 
				"				<xsl:value-of select=\"@encoding\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</siebel:basic-connection>\r\n" + 
				"</siebel:siebel-config>");
		
		transformerOf.put("siebel-io:execute-siebel-adapter", "<siebel:execute-siebel-adapter>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@method\">\r\n" + 
				"		<xsl:attribute name=\"method\">\r\n" + 
				"			<xsl:value-of select=\"@method\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@integrationObject\">\r\n" + 
				"		<xsl:attribute name=\"integrationObject\">\r\n" + 
				"			<xsl:value-of select=\"@integrationObject\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"siebel-io:input-properties/@ref\">\r\n" + 
				"		<siebel:input-properties >\r\n" + 
				"			<xsl:value-of select=\"siebel-io:input-properties/@ref\" />\r\n" + 
				"		</siebel:input-properties >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</siebel:execute-siebel-adapter>");
		
		transformerOf.put("ec2:config", "<ec2:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<ec2:basic-connection>\r\n" + 
				"		<xsl:if test=\"@accessKey\">\r\n" + 
				"			<xsl:attribute name=\"accessKey\">\r\n" + 
				"				<xsl:value-of select=\"@accessKey\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@secretKey\">\r\n" + 
				"			<xsl:attribute name=\"secretKey\">\r\n" + 
				"				<xsl:value-of select=\"@secretKey\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@tryDefaultAWSCredentialsProviderChain\">\r\n" + 
				"			<xsl:attribute name=\"tryDefaultAWSCredentialsProviderChain\">\r\n" + 
				"				<xsl:value-of select=\"@tryDefaultAWSCredentialsProviderChain\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@region\">\r\n" + 
				"			<xsl:attribute name=\"region\">\r\n" + 
				"				<xsl:value-of select=\"@region\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyHost\">\r\n" + 
				"			<xsl:attribute name=\"proxyHost\">\r\n" + 
				"				<xsl:value-of select=\"@proxyHost\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"proxyPort\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyUsername\">\r\n" + 
				"			<xsl:attribute name=\"proxyUsername\">\r\n" + 
				"				<xsl:value-of select=\"@proxyUsername\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPassword\">\r\n" + 
				"			<xsl:attribute name=\"proxyPassword\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPassword\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyDomain\">\r\n" + 
				"			<xsl:attribute name=\"proxyDomain\">\r\n" + 
				"				<xsl:value-of select=\"@proxyDomain\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyWorkstation\">\r\n" + 
				"			<xsl:attribute name=\"proxyWorkstation\">\r\n" + 
				"				<xsl:value-of select=\"@proxyWorkstation\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@maxConnections\">\r\n" + 
				"			<xsl:attribute name=\"maxConnections\">\r\n" + 
				"				<xsl:value-of select=\"@maxConnections\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@socketTimeout\">\r\n" + 
				"			<xsl:attribute name=\"socketTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@socketTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</ec2:basic-connection>\r\n" + 
				"</ec2:config>");
		
		transformerOf.put("ec2:assign-ipv6-addresses", "<ec2:assign-ipv6-addresses>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@networkInterfaceId\">\r\n" + 
				"		<xsl:attribute name=\"networkInterfaceId\">\r\n" + 
				"			<xsl:value-of select=\"@networkInterfaceId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@ipv6AddressCount\">\r\n" + 
				"		<xsl:attribute name=\"ipv6AddressCount\">\r\n" + 
				"			<xsl:value-of select=\"@ipv6AddressCount\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:ipv6-addresses/@ref\">\r\n" + 
				"		<xsl:attribute name=\"ipv6Addresses\">\r\n" + 
				"			<xsl:value-of select=\"ec2:ipv6-addresses/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:assign-ipv6-addresses>");
		
		transformerOf.put("ec2:assign-private-ip-addresses", "<ec2:assign-private-ip-addresses>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@networkInterfaceId\">\r\n" + 
				"		<xsl:attribute name=\"networkInterfaceId\">\r\n" + 
				"			<xsl:value-of select=\"@networkInterfaceId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@allowReassignment\">\r\n" + 
				"		<xsl:attribute name=\"allowReassignment\">\r\n" + 
				"			<xsl:value-of select=\"@allowReassignment\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@secondaryPrivateIpAddressCount\">\r\n" + 
				"		<xsl:attribute name=\"secondaryPrivateIpAddressCount\">\r\n" + 
				"			<xsl:value-of select=\"@secondaryPrivateIpAddressCount\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:private-ip-addresses/@ref\">\r\n" + 
				"		<xsl:attribute name=\"privateIpAddresses\">\r\n" + 
				"			<xsl:value-of select=\"ec2:private-ip-addresses/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:assign-private-ip-addresses>");
		
		transformerOf.put("ec2:create-tags", "<ec2:create-tags>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:resources/@ref\">\r\n" + 
				"		<xsl:attribute name=\"resources\">\r\n" + 
				"			<xsl:value-of select=\"ec2:resources/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:tags\">\r\n" + 
				"			<xsl:copy-of select=\"ec2:tags\" />\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:create-tags>");
		
		transformerOf.put("ec2:delete-tags", "<ec2:delete-tags>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:resources/@ref\">\r\n" + 
				"		<xsl:attribute name=\"resources\">\r\n" + 
				"			<xsl:value-of select=\"ec2:resources/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:tags\">\r\n" + 
				"			<xsl:copy-of select=\"ec2:tags\" />\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:delete-tags>");
		
		transformerOf.put("ec2:describe-addresses", "<ec2:describe-addresses>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:allocation-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"allocationIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:allocation-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:public-ips/@ref\">\r\n" + 
				"		<xsl:attribute name=\"publicIps\">\r\n" + 
				"			<xsl:value-of select=\"ec2:public-ips/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-addresses>");
		
		transformerOf.put("ec2:describe-availability-zones", "<ec2:describe-availability-zones>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:zone-names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"zoneNames\">\r\n" + 
				"			<xsl:value-of select=\"ec2:zone-names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-availability-zones>");
		
		transformerOf.put("ec2:describe-iam-instance-profile-associations", "<ec2:describe-iam-instance-profile-associations>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:association-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"associationIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:association-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-iam-instance-profile-associations>");
		
		transformerOf.put("ec2:describe-instance-status", "<ec2:describe-instance-status>                                 -------------------------------1\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-instance-status>");
		
		transformerOf.put("ec2:describe-instances", "<ec2:describe-instances>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-instances>");
		
		transformerOf.put("ec2:describe-key-pairs", "<ec2:describe-key-pairs>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:key-names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"keyNames\">\r\n" + 
				"			<xsl:value-of select=\"ec2:key-names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-key-pairs>");
		
		transformerOf.put("ec2:describe-moving-addresses", "<ec2:describe-moving-addresses>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:public-ips/@ref\">\r\n" + 
				"		<xsl:attribute name=\"publicIps\">\r\n" + 
				"			<xsl:value-of select=\"ec2:public-ips/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-moving-addresses>");
		
		transformerOf.put("ec2:describe-network-interfaces", "<ec2:describe-network-interfaces>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:network-interface-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"networkInterfaceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:network-interface-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-network-interfaces>");
		
		transformerOf.put("ec2:describe-regions", "<ec2:describe-regions>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:region-names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"regionNames\">\r\n" + 
				"			<xsl:value-of select=\"ec2:region-names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-regions>");
		
		transformerOf.put("ec2:describe-security-group-references", "<ec2:describe-security-group-references>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:group-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"groupIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:group-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-security-group-references>");
		
		transformerOf.put("ec2:describe-security-groups", "<ec2:describe-security-groups>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:group-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"groupIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:group-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:group-names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"groupNames\">\r\n" + 
				"			<xsl:value-of select=\"ec2:group-names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-security-groups>");
		
		transformerOf.put("ec2:describe-snapshots", "<ec2:describe-snapshots>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:snapshot-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"snapshotIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:snapshot-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:owner-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"ownerIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:owner-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:restorable-by-user-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"restorableByUserIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:restorable-by-user-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-snapshots>");
		
		transformerOf.put("ec2:describe-tags", "<ec2:describe-tags>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-tags>");
		
		transformerOf.put("ec2:describe-volume-status", "<ec2:describe-volume-status>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:volume-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"volumeIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:volume-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-volume-status>");
		
		transformerOf.put("ec2:describe-volumes", "<ec2:describe-volumes>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:volume-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"volumeIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:volume-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-volumes>");
		
		transformerOf.put("ec2:describe-volumes-modifications", "<ec2:describe-volumes-modifications>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:volume-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"volumeIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:volume-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:filters\">\r\n" + 
				"		<ec2:filters >\r\n" + 
				"			<ec2:filter>\r\n" + 
				"			<xsl:attribute name=\"name\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/@name\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			<xsl:attribute name=\"values\">\r\n" + 
				"				<xsl:value-of select=\"ec2:filters/ec2:filter/ec2:values/@ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"			</ec2:filter>\r\n" + 
				"		</ec2:filters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:describe-volumes-modifications>");
		
		transformerOf.put("ec2:dis-associate-address", "<ec2:disassociate-address>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@associationId\">\r\n" + 
				"		<xsl:attribute name=\"associationId\">\r\n" + 
				"			<xsl:value-of select=\"@associationId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@publicIp\">\r\n" + 
				"		<xsl:attribute name=\"publicIp\">\r\n" + 
				"			<xsl:value-of select=\"@publicIp\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:disassociate-address>");
		
		transformerOf.put("ec2:modify-network-interface-attribute", "<ec2:modify-network-interface-attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@networkInterfaceId\">\r\n" + 
				"		<xsl:attribute name=\"networkInterfaceId\">\r\n" + 
				"			<xsl:value-of select=\"@networkInterfaceId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@attachmentId\">\r\n" + 
				"		<xsl:attribute name=\"attachmentId\">\r\n" + 
				"			<xsl:value-of select=\"@attachmentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@description\">\r\n" + 
				"		<xsl:attribute name=\"description\">\r\n" + 
				"			<xsl:value-of select=\"@description\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@deleteOnTermination\">\r\n" + 
				"		<xsl:attribute name=\"deleteOnTermination\">\r\n" + 
				"			<xsl:value-of select=\"@deleteOnTermination\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@sourceDestCheck\">\r\n" + 
				"		<xsl:attribute name=\"sourceDestCheck\">\r\n" + 
				"			<xsl:value-of select=\"@sourceDestCheck\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:groups/@ref\">\r\n" + 
				"		<xsl:attribute name=\"groups\">\r\n" + 
				"			<xsl:value-of select=\"ec2:groups/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:modify-network-interface-attribute>");
		
		transformerOf.put("ec2:modify-snapshot-attribute", "<ec2:modify-snapshot-attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snapshotId\">\r\n" + 
				"		<xsl:attribute name=\"snapshotId\">\r\n" + 
				"			<xsl:value-of select=\"@snapshotId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@attribute\">\r\n" + 
				"		<xsl:attribute name=\"attribute\">\r\n" + 
				"			<xsl:value-of select=\"@attribute\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@operationType\">\r\n" + 
				"		<xsl:attribute name=\"operationType\">\r\n" + 
				"			<xsl:value-of select=\"@operationType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@groupNames-ref\">\r\n" + 
				"		<xsl:attribute name=\"groupNames\">\r\n" + 
				"			<xsl:value-of select=\"@groupNames-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@userIds-ref\">\r\n" + 
				"		<xsl:attribute name=\"userIds\">\r\n" + 
				"			<xsl:value-of select=\"@userIds-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:modify-snapshot-attribute>");
		
		transformerOf.put("ec2:monitor-instances", "<ec2:monitor-instances>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:monitor-instances>");
		
		transformerOf.put("ec2:reboot-instances", "<ec2:reboot-instances>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:reboot-instances>");
		
		transformerOf.put("ec2:report-instance-status", "<ec2:report-instance-status>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@description\">\r\n" + 
				"		<xsl:attribute name=\"description\">\r\n" + 
				"			<xsl:value-of select=\"@description\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:reason-codes/@ref\">\r\n" + 
				"		<xsl:attribute name=\"reasonCodes\">\r\n" + 
				"			<xsl:value-of select=\"ec2:reason-codes/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:report-instance-status>");
		
		transformerOf.put("ec2:run-instances", "<ec2:run-instances>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@imageId\">\r\n" + 
				"		<xsl:attribute name=\"imageId\">\r\n" + 
				"			<xsl:value-of select=\"@imageId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minCount\">\r\n" + 
				"		<xsl:attribute name=\"minCount\">\r\n" + 
				"			<xsl:value-of select=\"@minCount\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxCount\">\r\n" + 
				"		<xsl:attribute name=\"maxCount\">\r\n" + 
				"			<xsl:value-of select=\"@maxCount\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@keyname\">\r\n" + 
				"		<xsl:attribute name=\"keyname\">\r\n" + 
				"			<xsl:value-of select=\"@keyname\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@subnetId\">\r\n" + 
				"		<xsl:attribute name=\"subnetId\">\r\n" + 
				"			<xsl:value-of select=\"@subnetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@instanceType\">\r\n" + 
				"		<xsl:attribute name=\"instanceType\">\r\n" + 
				"			<xsl:value-of select=\"@instanceType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:security-group-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"securityGroupIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:security-group-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:security-groups/@ref\">\r\n" + 
				"		<xsl:attribute name=\"securityGroups\">\r\n" + 
				"			<xsl:value-of select=\"ec2:security-groups/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:run-instances>");
		
		transformerOf.put("ec2:start-instances", "<ec2:start-instances>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:start-instances>");
		
		transformerOf.put("ec2:stop-instances", "<ec2:stop-instances>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:stop-instances>");
		
		transformerOf.put("ec2:terminate-instances", "<ec2:terminate-instances>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:terminate-instances>");
		
		transformerOf.put("ec2:un-assign-private-ip-addresses", "<ec2:unassign-private-ip-addresses>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@networkInterfaceId\">\r\n" + 
				"		<xsl:attribute name=\"networkInterfaceId\">\r\n" + 
				"			<xsl:value-of select=\"@networkInterfaceId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:private-ip-addresses/@ref\">\r\n" + 
				"		<xsl:attribute name=\"privateIpAddresses\">\r\n" + 
				"			<xsl:value-of select=\"ec2:private-ip-addresses/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:unassign-private-ip-addresses>");
		
		transformerOf.put("ec2:unassign-ipv6-addresses", "<ec2:unassign-ipv6-addresses>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@networkInterfaceId\">\r\n" + 
				"		<xsl:attribute name=\"networkInterfaceId\">\r\n" + 
				"			<xsl:value-of select=\"@networkInterfaceId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"ec2:ipv6-addresses/@ref\">\r\n" + 
				"		<xsl:attribute name=\"ipv6Addresses\">\r\n" + 
				"			<xsl:value-of select=\"ec2:ipv6-addresses/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:unassign-ipv6-addresses>");
		
		transformerOf.put("ec2:unmonitor-instances", "<ec2:unmonitor-instances>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"ec2:instance-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"instanceIds\">\r\n" + 
				"			<xsl:value-of select=\"ec2:instance-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ec2:unmonitor-instances>");
		
		transformerOf.put("custom-metrics:send", "<custom-metrics:send>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@metricName\">\r\n" + 
				"		<xsl:attribute name=\"metricName\">\r\n" + 
				"			<xsl:value-of select=\"@metricName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@throwOnValidationFailure\">\r\n" + 
				"		<xsl:attribute name=\"throwOnValidationFailure\">\r\n" + 
				"			<xsl:value-of select=\"@throwOnValidationFailure\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"custom-metrics:dimensions\">\r\n" + 
				"			<xsl:copy-of select=\"custom-metrics:dimensions\" />\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"custom-metrics:facts\">\r\n" + 
				"			<xsl:copy-of select=\"custom-metrics:facts\" />\r\n" + 
				"	</xsl:if>\r\n" + 
				"</custom-metrics:send>");
		
		transformerOf.put("as400:config", "<as400:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<as400:config-connection>\r\n" + 
				"		<xsl:if test=\"@endpoint\">\r\n" + 
				"			<xsl:attribute name=\"endpoint\">\r\n" + 
				"				<xsl:value-of select=\"@endpoint\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@userid\">\r\n" + 
				"			<xsl:attribute name=\"userid\">\r\n" + 
				"				<xsl:value-of select=\"@userid\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@IASP\">\r\n" + 
				"			<xsl:attribute name=\"IASP\">\r\n" + 
				"				<xsl:value-of select=\"@IASP\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@libraryList\">\r\n" + 
				"			<xsl:attribute name=\"libraryList\">\r\n" + 
				"				<xsl:value-of select=\"@libraryList\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@secureConnection\">\r\n" + 
				"			<xsl:attribute name=\"secureConnection\">\r\n" + 
				"				<xsl:value-of select=\"@secureConnection\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='as400:connection-pooling-profile']\">\r\n" + 
				"			<pooling-profile >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='as400:connection-pooling-profile']/@*\"/>\r\n" + 
				"			</pooling-profile >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</as400:config-connection>\r\n" + 
				"</as400:config>");
		
		transformerOf.put("as400:command-call", "<as400:command-call>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@cmd\">\r\n" + 
				"		<as400:cmd >\r\n" + 
				"			<xsl:value-of select=\"@cmd\" />\r\n" + 
				"		</as400:cmd >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</as400:command-call>");
		
		transformerOf.put("as400:program-call-processor", "<as400:program-call-processor>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@programName\">\r\n" + 
				"		<xsl:attribute name=\"programName\">\r\n" + 
				"			<xsl:value-of select=\"@programName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@programLibrary\">\r\n" + 
				"		<xsl:attribute name=\"programLibrary\">\r\n" + 
				"			<xsl:value-of select=\"@programLibrary\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@procedureName\">\r\n" + 
				"		<xsl:attribute name=\"procedureName\">\r\n" + 
				"			<xsl:value-of select=\"@procedureName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@procedureReturnsValue\">\r\n" + 
				"		<xsl:attribute name=\"procedureReturnsValue\">\r\n" + 
				"			<xsl:value-of select=\"@procedureReturnsValue\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@threadSafe\">\r\n" + 
				"		<xsl:attribute name=\"threadSafe\">\r\n" + 
				"			<xsl:value-of select=\"@threadSafe\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"as400:parameters\">\r\n" + 
				"	<as400:parameters >\r\n" + 
				"		<as400:parameter>\r\n" + 
				"			<xsl:if test=\"as400:parameters/as400:parameter/@name\">\r\n" + 
				"				<xsl:attribute name=\"parameterName\">\r\n" + 
				"					<xsl:value-of select=\"as400:parameters/as400:parameter/@name\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"as400:parameters/as400:parameter/@dataType\">\r\n" + 
				"				<xsl:attribute name=\"dataType\">\r\n" + 
				"					<xsl:value-of select=\"as400:parameters/as400:parameter/@dataType\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"as400:parameters/as400:parameter/@length\">\r\n" + 
				"				<xsl:attribute name=\"length\">\r\n" + 
				"					<xsl:value-of select=\"as400:parameters/as400:parameter/@length\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"as400:parameters/as400:parameter/@decimalPositions\">\r\n" + 
				"				<xsl:attribute name=\"decimalPositions\">\r\n" + 
				"					<xsl:value-of select=\"as400:parameters/as400:parameter/@decimalPositions\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"as400:parameters/as400:parameter/@usage\">\r\n" + 
				"				<xsl:attribute name=\"usage\">\r\n" + 
				"					<xsl:value-of select=\"as400:parameters/as400:parameter/@usage\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"as400:parameters/as400:parameter/@count\">\r\n" + 
				"				<xsl:attribute name=\"count\">\r\n" + 
				"					<xsl:value-of select=\"as400:parameters/as400:parameter/@count\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"as400:parameters/as400:parameter/@parmValue-ref\">\r\n" + 
				"				<xsl:attribute name=\"parmValue\">\r\n" + 
				"					<xsl:value-of select=\"as400:parameters/as400:parameter/@parmValue-ref\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</as400:parameter>\r\n" + 
				"	</as400:parameters >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</as400:program-call-processor>");
		
		transformerOf.put("as400:read-data-queue", "<as400:read-data-queue>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@dtaq\">\r\n" + 
				"		<xsl:attribute name=\"dtaq\">\r\n" + 
				"			<xsl:value-of select=\"@dtaq\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@library\">\r\n" + 
				"		<xsl:attribute name=\"library\">\r\n" + 
				"			<xsl:value-of select=\"@library\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dtaqKey\">\r\n" + 
				"		<xsl:attribute name=\"dtaqKey\">\r\n" + 
				"			<xsl:value-of select=\"@dtaqKey\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dtaqKeySearchType\">\r\n" + 
				"		<xsl:attribute name=\"dtaqKeySearchType\">\r\n" + 
				"			<xsl:value-of select=\"@dtaqKeySearchType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@peek\">\r\n" + 
				"		<xsl:attribute name=\"peek\">\r\n" + 
				"			<xsl:value-of select=\"@peek\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@formatFileName\">\r\n" + 
				"		<xsl:attribute name=\"formatFileName\">\r\n" + 
				"			<xsl:value-of select=\"@formatFileName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@formatFileLibrary\">\r\n" + 
				"		<xsl:attribute name=\"formatFileLibrary\">\r\n" + 
				"			<xsl:value-of select=\"@formatFileLibrary\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@pollingPeriod\">\r\n" + 
				"		<xsl:attribute name=\"numberOfConsumers\">\r\n" + 
				"			<xsl:value-of select=\"@pollingPeriod\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</as400:read-data-queue>");
		
		transformerOf.put("as400:write-data-queue", "<as400:write-data-queue>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@dtaq\">\r\n" + 
				"		<xsl:attribute name=\"dtaq\">\r\n" + 
				"			<xsl:value-of select=\"@dtaq\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@library\">\r\n" + 
				"		<xsl:attribute name=\"library\">\r\n" + 
				"			<xsl:value-of select=\"@library\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dtaqKey\">\r\n" + 
				"		<xsl:attribute name=\"dtaqKey\">\r\n" + 
				"			<xsl:value-of select=\"@dtaqKey\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@formatFileName\">\r\n" + 
				"		<xsl:attribute name=\"formatFileName\">\r\n" + 
				"			<xsl:value-of select=\"@formatFileName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@formatFileLibrary\">\r\n" + 
				"		<xsl:attribute name=\"formatFileLibrary\">\r\n" + 
				"			<xsl:value-of select=\"@formatFileLibrary\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dqEntry\">\r\n" + 
				"		<as400:dq-entry >\r\n" + 
				"			<xsl:value-of select=\"@dqEntry\" />\r\n" + 
				"		</as400:dq-entry>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</as400:write-data-queue>");
		
		transformerOf.put("hl7-edi:config", "<hl7:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@eventMessageMap\">\r\n" + 
				"		<xsl:attribute name=\"eventMessageMap\">\r\n" + 
				"			<xsl:value-of select=\"@eventMessageMap\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@characterEncoding\">\r\n" + 
				"		<xsl:attribute name=\"characterEncoding\">\r\n" + 
				"			<xsl:value-of select=\"@characterEncoding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"	<xsl:when test=\"@identKeys\">\r\n" + 
				"		<xsl:attribute name=\"identKeys\">\r\n" + 
				"			<xsl:text>false</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:when>\r\n" + 
				"	<xsl:otherwise>\r\n" + 
				"		<xsl:attribute name=\"identKeys\">\r\n" + 
				"			<xsl:text>true</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"	<xsl:if test=\"@appNamespaceIdSelf\">\r\n" + 
				"		<xsl:attribute name=\"appNamespaceIdSelf\">\r\n" + 
				"			<xsl:value-of select=\"@appNamespaceIdSelf\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@appUniversalIdSelf\">\r\n" + 
				"		<xsl:attribute name=\"appUniversalIdSelf\">\r\n" + 
				"			<xsl:value-of select=\"@appUniversalIdSelf\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@appUniversalIdTypeSelf\">\r\n" + 
				"		<xsl:attribute name=\"appUniversalIdTypeSelf\">\r\n" + 
				"			<xsl:value-of select=\"@appUniversalIdTypeSelf\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@appNamespaceIdPartner\">\r\n" + 
				"		<xsl:attribute name=\"appNamespaceIdPartner\">\r\n" + 
				"			<xsl:value-of select=\"@appNamespaceIdPartner\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@appUniversalIdPartner\">\r\n" + 
				"		<xsl:attribute name=\"appUniversalIdPartner\">\r\n" + 
				"			<xsl:value-of select=\"@appUniversalIdPartner\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@appUniversalIdTypePartner\">\r\n" + 
				"		<xsl:attribute name=\"appUniversalIdTypePartner\">\r\n" + 
				"			<xsl:value-of select=\"@appUniversalIdTypePartner\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@processingId\">\r\n" + 
				"		<xsl:attribute name=\"processingId\">\r\n" + 
				"			<xsl:value-of select=\"@processingId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@genericExtensionPattern\">\r\n" + 
				"		<xsl:attribute name=\"genericExtensionPattern\">\r\n" + 
				"			<xsl:value-of select=\"@genericExtensionPattern\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@missingRequiredValueFail\">\r\n" + 
				"		<xsl:attribute name=\"missingRequiredValueFail\">\r\n" + 
				"			<xsl:value-of select=\"@missingRequiredValueFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@valueLengthErrorFail\">\r\n" + 
				"		<xsl:attribute name=\"valueLengthErrorFail\">\r\n" + 
				"			<xsl:value-of select=\"@valueLengthErrorFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@invalidCharacterInValueFail\">\r\n" + 
				"		<xsl:attribute name=\"invalidCharacterInValueFail\">\r\n" + 
				"			<xsl:value-of select=\"@invalidCharacterInValueFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@wrongValuesRepeatsFail\">\r\n" + 
				"		<xsl:attribute name=\"wrongValuesRepeatsFail\">\r\n" + 
				"			<xsl:value-of select=\"@wrongValuesRepeatsFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@unknownSegmentFail\">\r\n" + 
				"		<xsl:attribute name=\"unknownSegmentFail\">\r\n" + 
				"			<xsl:value-of select=\"@unknownSegmentFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@segmentOutOfOrderFail\">\r\n" + 
				"		<xsl:attribute name=\"segmentOutOfOrderFail\">\r\n" + 
				"			<xsl:value-of select=\"@segmentOutOfOrderFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@unusedSegmentPresentFail\">\r\n" + 
				"		<xsl:attribute name=\"unusedSegmentPresentFail\">\r\n" + 
				"			<xsl:value-of select=\"@unusedSegmentPresentFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@wrongSegmentsRepeatsFail\">\r\n" + 
				"		<xsl:attribute name=\"wrongSegmentsRepeatsFail\">\r\n" + 
				"			<xsl:value-of select=\"@wrongSegmentsRepeatsFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fieldSeparator\">\r\n" + 
				"		<xsl:attribute name=\"fieldSeparator\">\r\n" + 
				"			<xsl:value-of select=\"@fieldSeparator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@componentSeparator\">\r\n" + 
				"		<xsl:attribute name=\"componentSeparator\">\r\n" + 
				"			<xsl:value-of select=\"@componentSeparator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@subcompSeparator\">\r\n" + 
				"		<xsl:attribute name=\"subcompSeparator\">\r\n" + 
				"			<xsl:value-of select=\"@subcompSeparator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@repetitionSeparator\">\r\n" + 
				"		<xsl:attribute name=\"repetitionSeparator\">\r\n" + 
				"			<xsl:value-of select=\"@repetitionSeparator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@escapeCharacter\">\r\n" + 
				"		<xsl:attribute name=\"escapeCharacter\">\r\n" + 
				"			<xsl:value-of select=\"@escapeCharacter\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</hl7:config>");
		
		transformerOf.put("hl7-edi:read", "<hl7:read>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@ediContent-ref\">\r\n" + 
				"		<hl7:read-content >\r\n" + 
				"			<xsl:value-of select=\"@ediContent-ref\" />\r\n" + 
				"		</hl7:read-content >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</hl7:read>");
		
		transformerOf.put("hl7-edi:write", "<hl7:write>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@message-ref\">\r\n" + 
				"		<hl7:write-content >\r\n" + 
				"			<xsl:value-of select=\"@message-ref\" />\r\n" + 
				"		</hl7:write-content >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</hl7:write>");
		
		transformerOf.put("marketo:config", "<marketo:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@clientId\">\r\n" + 
				"		<xsl:attribute name=\"property_clientId\">\r\n" + 
				"			<xsl:value-of select=\"@clientId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@clientSecret\">\r\n" + 
				"		<xsl:attribute name=\"property_clientSecret\">\r\n" + 
				"			<xsl:value-of select=\"@clientSecret\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@restEndpointUrl\">\r\n" + 
				"		<xsl:attribute name=\"property_accessTokenUrl\">\r\n" + 
				"			<xsl:value-of select=\"@restEndpointUrl\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:config>");
		
		transformerOf.put("marketo:get-deleted-leads", "<marketo:get-deleted-leads>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@nextPageToken\">\r\n" + 
				"		<xsl:attribute name=\"next-page-token\">\r\n" + 
				"			<xsl:value-of select=\"@nextPageToken\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-deleted-leads>");
		
		transformerOf.put("marketo:get-lead-activities", "<marketo:get-lead-activities>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@nextPageToken\">\r\n" + 
				"		<xsl:attribute name=\"next-page-token\">\r\n" + 
				"			<xsl:value-of select=\"@nextPageToken\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"list-id\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@activityTypeIds-ref\">\r\n" + 
				"		<xsl:attribute name=\"activity-type-ids\">\r\n" + 
				"			<xsl:value-of select=\"@activityTypeIds-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:lead-ids/@ref\">\r\n" + 
				"		<xsl:attribute name=\"lead-ids\">\r\n" + 
				"			<xsl:value-of select=\"marketo:lead-ids/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-lead-activities>");
		
		transformerOf.put("marketo:get-lead-changes", "<marketo:get-lead-changes>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@nextPageToken\">\r\n" + 
				"		<xsl:attribute name=\"next-page-token\">\r\n" + 
				"			<xsl:value-of select=\"@nextPageToken\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"list-id\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"marketo:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-lead-changes>");
		
		transformerOf.put("marketo:get-paging-token", "<marketo:get-paging-token>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@sinceDateTime\">\r\n" + 
				"		<xsl:attribute name=\"since-datetime\">\r\n" + 
				"			<xsl:value-of select=\"@sinceDateTime\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-paging-token>");
		
		transformerOf.put("marketo:approve-email-template-by-id", "<marketo:approve-email-template-draft>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:approve-email-template-draft>");
		
		transformerOf.put("marketo:clone-email-template", "<marketo:clone-email-template>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@folder-ref\">\r\n" + 
				"		<marketo:clone-email-template-request-data >\r\n" + 
				"			<xsl:value-of select=\"@folder-ref\" />\r\n" + 
				"		</marketo:clone-email-template-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:clone-email-template>");
		
		transformerOf.put("marketo:create-email-template", "<marketo:create-email-template>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@content-ref\">\r\n" + 
				"		<marketo:create-email-template-request-data >\r\n" + 
				"			<xsl:value-of select=\"@content-ref\" />\r\n" + 
				"		</marketo:create-email-template-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:create-email-template>");
		
		transformerOf.put("marketo:delete-email-template-by-id", "<marketo:delete-email-template>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-email-template>");
		
		transformerOf.put("marketo:discard-email-template-draft-by-id", "<marketo:discard-email-template-draft>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:discard-email-template-draft>");
		
		transformerOf.put("marketo:get-email-template-by-id", "<marketo:get-email-template-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-email-template-by-id>");
		
		transformerOf.put("marketo:get-email-template-by-name", "<marketo:get-email-template-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailTemplateName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@emailTemplateName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-email-template-by-name>");
		
		transformerOf.put("marketo:get-email-template-content-by-id", "<marketo:get-email-template-content-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-email-template-content-by-id>");
		
		transformerOf.put("marketo:get-email-templates", "<marketo:get-email-templates>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-email-templates>");
		
		transformerOf.put("marketo:unapprove-email-template-by-id", "<marketo:unapprove-email-template-draft>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:unapprove-email-template-draft>");
		
		transformerOf.put("marketo:update-email-template-content-by-id", "<marketo:update-email-template-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@content-ref\">\r\n" + 
				"		<marketo:update-email-template-content-request-data >\r\n" + 
				"			<xsl:value-of select=\"@content-ref\" />\r\n" + 
				"		</marketo:update-email-template-content-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-email-template-content>");
		
		transformerOf.put("marketo:approve-email-by-id", "<marketo:approve-email-draft>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:approve-email-draft>");
		
		transformerOf.put("marketo:clone-email-by-id", "<marketo:clone-email>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@emailName\">\r\n" + 
				"		<marketo:clone-email-request-data >\r\n" + 
				"			<xsl:value-of select=\"@emailName\" />\r\n" + 
				"		</marketo:clone-email-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:clone-email>");
		
		transformerOf.put("marketo:create-email", "<marketo:create-email>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@email-ref\">\r\n" + 
				"		<marketo:create-email-request-data >\r\n" + 
				"			<xsl:value-of select=\"@email-ref\" />\r\n" + 
				"		</marketo:create-email-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:create-email>");
		
		transformerOf.put("marketo:delete-email-by-id", "<marketo:delete-email-template>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-email-template>");
		
		transformerOf.put("marketo:discard-email-draft-by-id", "<marketo:discard-email-draft>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:discard-email-draft>");
		
		transformerOf.put("marketo:get-email-by-id", "<marketo:get-email-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-email-by-id>");
		
		transformerOf.put("marketo:get-email-content-by-id","<marketo:get-email-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\"/>\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\"/>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\"/>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-email-content>");
		
		transformerOf.put("marketo:get-email-dynamic-content-by-id", "<marketo:get-email-dynamic-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dynamicContentId\">\r\n" + 
				"		<xsl:attribute name=\"dynamic-content-id\">\r\n" + 
				"			<xsl:value-of select=\"@dynamicContentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-email-dynamic-content>");
		
		transformerOf.put("marketo:get-emails", "<marketo:get-emails>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"offset\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@folder-ref\">\r\n" + 
				"		<marketo:get-emails-request-data >\r\n" + 
				"			<xsl:value-of select=\"@folder-ref\" />\r\n" + 
				"		</marketo:get-emails-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-emails>");
		
		transformerOf.put("marketo:unapprove-email-by-id", "<marketo:unapprove-email>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:unapprove-email>");
		
		transformerOf.put("marketo:update-email", "<marketo:update-email-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-email-content>");
		
		transformerOf.put("marketo:update-email-content-by-id", "<marketo:update-email-content-section>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@subject-ref\">\r\n" + 
				"		<marketo:update-email-content-section-request-data>\r\n" + 
				"			<xsl:value-of select=\"@subject-ref\" />\r\n" + 
				"		</marketo:update-email-content-section-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-email-content-section>");
		
		transformerOf.put("marketo:update-email-content-in-editable-section", "<marketo:update-email-content-section>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@htmlId\">\r\n" + 
				"		<xsl:attribute name=\"html-id\">\r\n" + 
				"			<xsl:value-of select=\"@htmlId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@value-ref\">\r\n" + 
				"		<marketo:update-email-content-section-request-data>\r\n" + 
				"			<xsl:value-of select=\"@value-ref\" />\r\n" + 
				"		</marketo:update-email-content-section-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-email-content-section>");
		
		transformerOf.put("marketo:update-email-dynamic-content-by-id", "<marketo:update-email-dynamic-content-section>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dynamicContentId\">\r\n" + 
				"		<xsl:attribute name=\"dynamic-content-id\">\r\n" + 
				"			<xsl:value-of select=\"@dynamicContentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@value\">\r\n" + 
				"		<marketo:update-email-dynamic-content-section-request-data>\r\n" + 
				"			<xsl:value-of select=\"@value\" />\r\n" + 
				"		</marketo:update-email-dynamic-content-section-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-email-dynamic-content-section>");
		
		transformerOf.put("marketo:create-file", "<marketo:create-file>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileName\">\r\n" + 
				"		<marketo:create-file-request-data>\r\n" + 
				"			<xsl:value-of select=\"@fileName\" />\r\n" + 
				"		</marketo:create-file-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:create-file>");
		
		transformerOf.put("marketo:get-email-by-name", "<marketo:get-email-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@emailName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@folder-ref\">\r\n" + 
				"		<xsl:attribute name=\"folder\">\r\n" + 
				"			<xsl:value-of select=\"@folder-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-email-by-name>");
		
		transformerOf.put("marketo:get-file-by-id", "<marketo:get-file-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-file-by-id>");
		
		transformerOf.put("marketo:get-file-by-name", "<marketo:get-file-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@fileName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-file-by-name>");
		
		transformerOf.put("marketo:get-file-list", "<marketo:get-files>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folder-ref\">\r\n" + 
				"		<xsl:attribute name=\"folder\">\r\n" + 
				"			<xsl:value-of select=\"@folder-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-files>");
		
		transformerOf.put("marketo:send-sample-email", "<marketo:send-sample-email>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@emailId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@emailId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@emailAddress\">\r\n" + 
				"		<marketo:send-sample-email-request-data >\r\n" + 
				"			<xsl:value-of select=\"@emailAddress\" />\r\n" + 
				"		</marketo:send-sample-email-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:send-sample-email>");
		
		transformerOf.put("marketo:update-file", "<marketo:update-file-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@content-ref\">\r\n" + 
				"		<marketo:update-file-content-request-data >\r\n" + 
				"			<xsl:value-of select=\"@content-ref\" />\r\n" + 
				"		</marketo:update-file-content-request-data >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-file-content>");
		
		transformerOf.put("marketo:browse-folders", "<marketo:get-folders>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@root-ref\">\r\n" + 
				"		<xsl:attribute name=\"root\">\r\n" + 
				"			<xsl:value-of select=\"@root-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxDepth\">\r\n" + 
				"		<xsl:attribute name=\"max-depth\">\r\n" + 
				"			<xsl:value-of select=\"@maxDepth\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@workSpace\">\r\n" + 
				"		<xsl:attribute name=\"work-space\">\r\n" + 
				"			<xsl:value-of select=\"@workSpace\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-folders>");
		
		transformerOf.put("marketo:create-folder", "<marketo:create-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderName\">\r\n" + 
				"		<marketo:create-folder-request-data>\r\n" + 
				"			<xsl:value-of select=\"@folderName\" />\r\n" + 
				"		</marketo:create-folder-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:create-folder>");
		
		transformerOf.put("marketo:delete-folder-by-id", "<marketo:delete-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-folder>");
		
		transformerOf.put("marketo:get-folder-contents", "<marketo:get-folder-contents>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"max-return\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-folder-contents>");
		
		transformerOf.put("marketo:get-folder-by-id", "<marketo:get-folder-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-folder-by-id>");
		
		transformerOf.put("marketo:get-folder-by-name", "<marketo:get-folder-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@folderName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@type\">\r\n" + 
				"		<xsl:attribute name=\"type\">\r\n" + 
				"			<xsl:value-of select=\"@type\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@root\">\r\n" + 
				"		<xsl:attribute name=\"root\">\r\n" + 
				"			<xsl:value-of select=\"@root\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@workSpace\">\r\n" + 
				"		<xsl:attribute name=\"work-space\">\r\n" + 
				"			<xsl:value-of select=\"@workSpace\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-folder-by-name>");
		
		transformerOf.put("marketo:create-landing-page-template", "<marketo:create-landing-page-template>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<marketo:create-landing-page-template-request-data >\r\n" + 
				"		<xsl:text>#[output applicaton/java\r\n" + 
				"				---{ </xsl:text>\r\n" + 
				"						 <xsl:for-each select=\"marketo:create-landing-page-template/@*\">\r\n" + 
				"				\"<xsl:value-of select=\"name()\" />\" : <xsl:value-of select=\".\"/>\r\n" + 
				"					 <xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"					 </xsl:for-each>\r\n" + 
				"				<xsl:text>}]</xsl:text>\r\n" + 
				"	</marketo:create-landing-page-template-request-data >\r\n" + 
				"</marketo:create-landing-page-template>");
		
		transformerOf.put("marketo:get-landing-page-content", "<marketo:get-landing-page-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-landing-page-content>");
		
		transformerOf.put("marketo:get-landing-page-template-by-id", "<marketo:get-landing-page-template-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@templateId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-landing-page-template-by-id>");
		
		transformerOf.put("marketo:get-landing-page-template-by-name", "<marketo:get-landing-page-template-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@templateName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@templateName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-landing-page-template-by-name>");
		
		transformerOf.put("marketo:update-landing-page-template-content-by-id", "<marketo:update-landing-page-template-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@landingPageTemplateContent-ref\">\r\n" + 
				"		<marketo:update-landing-page-template-content-request-data>\r\n" + 
				"			<xsl:value-of select=\"@landingPageTemplateContent-ref\" />\r\n" + 
				"		</marketo:update-landing-page-template-content-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-landing-page-template-content>");
		
		transformerOf.put("marketo:get-segmentations", "<marketo:get-segmentations>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-segmentations>");	
		
		transformerOf.put("marketo:get-segments", "<marketo:get-segments-for-segmentation>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@segmentationId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@segmentationId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"max-return\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-segments-for-segmentation>");
		
		transformerOf.put("marketo:approve-snippet-by-id", "<marketo:approve-snippet-draft>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:approve-snippet-draft>");
		
		transformerOf.put("marketo:clone-snippet-by-id", "<marketo:clone-snippet>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@snippetName\">\r\n" + 
				"		<marketo:clone-snippet-request-data>\r\n" + 
				"			<xsl:value-of select=\"@snippetName\" />\r\n" + 
				"		</marketo:clone-snippet-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:clone-snippet>");	
		
		transformerOf.put("marketo:create-snippet", "<marketo:create-snippet>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<marketo:create-snippet-request-data >\r\n" + 
				"		<xsl:text>#[output applicaton/java\r\n" + 
				"				---{ </xsl:text>\r\n" + 
				"						 <xsl:for-each select=\"marketo:create-snippet/@*\">\r\n" + 
				"				\"<xsl:value-of select=\"name()\" />\" : <xsl:value-of select=\".\"/>\r\n" + 
				"					 <xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"					 </xsl:for-each>\r\n" + 
				"				<xsl:text>}]</xsl:text>\r\n" + 
				"	</marketo:create-snippet-request-data >\r\n" + 
				"</marketo:create-snippet>");
		
		transformerOf.put("marketo:delete-snippet", "<marketo:delete-snippet>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-snippet>");
		
		transformerOf.put("marketo:discard-snippet-draft-by-id", "<marketo:discard-snippet-draft>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:discard-snippet-draft>");
		
		transformerOf.put("marketo:get-snippet-by-id", "<marketo:get-snippet-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@status\">\r\n" + 
				"		<xsl:attribute name=\"status\">\r\n" + 
				"			<xsl:value-of select=\"@status\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-snippet-by-id>");
		
		transformerOf.put("marketo:get-snippet-content-by-id", "<marketo:get-snippet-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-snippet-content>");
		
		transformerOf.put("marketo:unapprove-snippet-by-id", "<marketo:unapprove-snippet>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:unapprove-snippet>");
		
		transformerOf.put("marketo:update-snippet-by-id", "<marketo:update-snippet-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@description\">\r\n" + 
				"		<marketo:update-snippet-content-request-data>\r\n" + 
				"			<xsl:value-of select=\"@description\" />\r\n" + 
				"		</marketo:update-snippet-content-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-snippet-content>");
		
		transformerOf.put("marketo:update-snippet-content-by-id", "<marketo:update-snippet-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@content\">\r\n" + 
				"		<marketo:update-snippet-content-request-data>\r\n" + 
				"			<xsl:value-of select=\"@content\" />\r\n" + 
				"	</marketo:update-snippet-content-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-snippet-content>");
		
		transformerOf.put("marketo:update-snippet-dynamic-content-by-id", "<marketo:update-snippet-dynamic-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@snippetId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@snippetId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@segmentId\">\r\n" + 
				"		<xsl:attribute name=\"segment-id\">\r\n" + 
				"			<xsl:value-of select=\"@segmentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@value\">\r\n" + 
				"		<marketo:update-snippet-dynamic-content-request-data>\r\n" + 
				"			<xsl:value-of select=\"@value\" />\r\n" + 
				"	</marketo:update-snippet-dynamic-content-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-snippet-dynamic-content>");
		
		transformerOf.put("marketo:create-token", "<marketo:create-token>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@token-ref\">\r\n" + 
				"		<marketo:create-token-request-data>\r\n" + 
				"			<xsl:value-of select=\"@token-ref\" />\r\n" + 
				"		</marketo:create-token-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:create-token>");
		
		transformerOf.put("marketo:delete-tokens-by-folder-id", "<marketo:delete-token-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@token-ref\">\r\n" + 
				"		<marketo:delete-token-by-name-request-data>\r\n" + 
				"			<xsl:value-of select=\"@token-ref\" />\r\n" + 
				"		</marketo:delete-token-by-name-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-token-by-name>");
		
		transformerOf.put("marketo:get-token-by-folder-id", "<marketo:get-tokens-by-folder-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-tokens-by-folder-id>");
		
		transformerOf.put("marketo:get-campaign-by-id", "<marketo:get-campaign-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@campaignId\">\r\n" + 
				"		<xsl:attribute name=\"campaign-id\">\r\n" + 
				"			<xsl:value-of select=\"@campaignId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-campaign-by-id>");
		
		transformerOf.put("marketo:get-multiple-campaigns", "<marketo:get-campaigns>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@nextPageToken\">\r\n" + 
				"		<xsl:attribute name=\"next-page-token\">\r\n" + 
				"			<xsl:value-of select=\"@nextPageToken\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@campaignIds-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@campaignIds-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"marketo:names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:program-names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"program-name\">\r\n" + 
				"			<xsl:value-of select=\"marketo:program-names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:workspace-names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"workspace-name\">\r\n" + 
				"			<xsl:value-of select=\"marketo:workspace-names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-campaigns>");
		
		transformerOf.put("marketo:request-campaign", "<marketo:request-campaign>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@campaignId\">\r\n" + 
				"		<xsl:attribute name=\"campaign-id\">\r\n" + 
				"			<xsl:value-of select=\"@campaignId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@tokens-ref\">\r\n" + 
				"		<marketo:request-campaign-request-data>\r\n" + 
				"			<xsl:value-of select=\"@tokens-ref\" />\r\n" + 
				"		</marketo:request-campaign-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:request-campaign>");
		
		transformerOf.put("marketo:schedule-campaign", "<marketo:schedule-campaign>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@campaignId\">\r\n" + 
				"		<xsl:attribute name=\"campaign-id\">\r\n" + 
				"			<xsl:value-of select=\"@campaignId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@token-ref\">\r\n" + 
				"		<marketo:schedule-campaign-request-data>\r\n" + 
				"			<xsl:value-of select=\"@token-ref\" />\r\n" + 
				"		</marketo:schedule-campaign-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:schedule-campaign>");
		
		transformerOf.put("marketo:delete-companies", "<marketo:delete-companies>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@campaignId\">\r\n" + 
				"		<xsl:attribute name=\"campaign-id\">\r\n" + 
				"			<xsl:value-of select=\"@campaignId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@criteria-ref\">\r\n" + 
				"		<marketo:delete-companies-request-data>\r\n" + 
				"			<xsl:value-of select=\"@criteria-ref\" />\r\n" + 
				"		</marketo:delete-companies-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-companies>");
		
		transformerOf.put("marketo:describe-company", "<marketo:describe-companies>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</marketo:describe-companies>");
		
		transformerOf.put("marketo:get-companies", "<marketo:get-companies>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@filterType\">\r\n" + 
				"		<xsl:attribute name=\"filter-type\">\r\n" + 
				"			<xsl:value-of select=\"@filterType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@filterValues-ref\">\r\n" + 
				"		<xsl:attribute name=\"filter-values\">\r\n" + 
				"			<xsl:value-of select=\"@filterValues-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"marketo:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-companies>");
		
		transformerOf.put("marketo:delete-custom-objects", "<marketo:delete-custom-objects>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@key\">\r\n" + 
				"		<xsl:attribute name=\"custom-object-name\">\r\n" + 
				"			<xsl:value-of select=\"@key\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@criteria-ref\">\r\n" + 
				"		<marketo:delete-custom-objects-request-data>\r\n" + 
				"			<xsl:value-of select=\"@criteria-ref\" />\r\n" + 
				"		</marketo:delete-custom-objects-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-custom-objects>");
		
		transformerOf.put("marketo:describe-custom-objects", "<marketo:describe-custom-objects>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@customObjectName\">\r\n" + 
				"		<xsl:attribute name=\"custom-object-name\">\r\n" + 
				"			<xsl:value-of select=\"@customObjectName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:describe-custom-objects>");
		
		transformerOf.put("marketo:get-custom-objects", "<marketo:get-custom-obects>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@key\">\r\n" + 
				"		<xsl:attribute name=\"custom-object-name\">\r\n" + 
				"			<xsl:value-of select=\"substring-before(@key, '||')\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"filter-type\">\r\n" + 
				"			<xsl:value-of select=\"substring-after(@key, '||')\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"marketo:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@searchValues-ref\">\r\n" + 
				"		<marketo:get-custom-obects-request-data>\r\n" + 
				"			<xsl:value-of select=\"@searchValues-ref\" />\r\n" + 
				"		</marketo:get-custom-obects-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-custom-obects>");	
		
		transformerOf.put("marketo:associate-lead", "<marketo:associate-lead>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@leadId\">\r\n" + 
				"		<xsl:attribute name=\"lead-id\">\r\n" + 
				"			<xsl:value-of select=\"@leadId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@cookie\">\r\n" + 
				"		<xsl:attribute name=\"cookie\">\r\n" + 
				"			<xsl:value-of select=\"@cookie\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:associate-lead>");
		
		transformerOf.put("marketo:delete-lead", "<marketo:delete-leads>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@records-ref\">\r\n" + 
				"		<marketo:delete-leads-request-data>\r\n" + 
				"			<xsl:value-of select=\"@records-ref\" />\r\n" + 
				"		</marketo:delete-leads-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-leads>");
		
		transformerOf.put("marketo:get-lead-by-id", "<marketo:get-lead-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@leadId\">\r\n" + 
				"		<xsl:attribute name=\"lead-id\">\r\n" + 
				"			<xsl:value-of select=\"@leadId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"marketo:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-lead-by-id>");
		
		transformerOf.put("marketo:get-multiple-leads-by-filter-type", "<marketo:get-leads-by-filter-type>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@filterType\">\r\n" + 
				"		<xsl:attribute name=\"filter-type\">\r\n" + 
				"			<xsl:value-of select=\"@filterType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:filter-values/@ref\">\r\n" + 
				"		<xsl:attribute name=\"filter-values\">\r\n" + 
				"			<xsl:value-of select=\"marketo:filter-values/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"marketo:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-leads-by-filter-type>");
		
		transformerOf.put("marketo:get-multiple-leads-by-list-id", "<marketo:get-leads-by-list-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"list-id\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"marketo:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-leads-by-list-id>");
		
		transformerOf.put("marketo:get-multiple-leads-by-program-id", "<marketo:get-leads-by-program-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@programId\">\r\n" + 
				"		<xsl:attribute name=\"program-id\">\r\n" + 
				"			<xsl:value-of select=\"@programId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"marketo:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-leads-by-program-id>");
		
		transformerOf.put("marketo:merge-lead", "<marketo:merge-leads>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@leadId\">\r\n" + 
				"		<xsl:attribute name=\"lead-id\">\r\n" + 
				"			<xsl:value-of select=\"@leadId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@mergeInCRM\">\r\n" + 
				"		<xsl:attribute name=\"merge-in-crm\">\r\n" + 
				"			<xsl:value-of select=\"@mergeInCRM\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@losingLeadIds-ref\">\r\n" + 
				"		<xsl:attribute name=\"lead-ids\">\r\n" + 
				"			<xsl:value-of select=\"@losingLeadIds-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:merge-leads>");
		
		transformerOf.put("marketo:update-leads-partition", "<marketo:update-lead-partition>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@input-ref\">\r\n" + 
				"		<marketo:update-lead-partition-request-data>\r\n" + 
				"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
				"		</marketo:update-lead-partition-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:update-lead-partition>");
		
		transformerOf.put("marketo:add-leads-to-list", "<marketo:add-to-list>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"list-id\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@leadIds-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@leadIds-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:add-to-list>");
		
		transformerOf.put("marketo:get-import-lead-status", "<marketo:get-import-lead-status>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@batchId\">\r\n" + 
				"		<xsl:attribute name=\"batch-id\">\r\n" + 
				"			<xsl:value-of select=\"@batchId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-import-lead-status>");
		
		transformerOf.put("marketo:get-import-failure-file", "<marketo:get-import-lead-failures>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@batchId\">\r\n" + 
				"		<xsl:attribute name=\"batch-id\">\r\n" + 
				"			<xsl:value-of select=\"@batchId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-import-lead-failures>");
		
		transformerOf.put("marketo:get-import-warning-file", "<marketo:get-import-lead-warnings>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@batchId\">\r\n" + 
				"		<xsl:attribute name=\"batch-id\">\r\n" + 
				"			<xsl:value-of select=\"@batchId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-import-lead-warnings>");
		
		transformerOf.put("marketo:get-list-by-id", "<marketo:get-list-by-id>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"			<xsl:value-of select=\"@doc:name\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"			<xsl:value-of select=\"@config-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@listId\">\r\n" + 
				"			<xsl:attribute name=\"list-id\">\r\n" + 
				"				<xsl:value-of select=\"@listId\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</marketo:get-list-by-id>");
		
		transformerOf.put("marketo:get-multiple-lists", "<marketo:get-lists>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listIds-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@listIds-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"marketo:names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:program-names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"program-name\">\r\n" + 
				"			<xsl:value-of select=\"marketo:program-names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:workspace-names/@ref\">\r\n" + 
				"		<xsl:attribute name=\"workspace-name\">\r\n" + 
				"			<xsl:value-of select=\"marketo:workspace-names/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-lists>");
		
		transformerOf.put("marketo:import-lead", "<marketo:import-leads>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@format\">\r\n" + 
				"		<xsl:attribute name=\"format\">\r\n" + 
				"			<xsl:value-of select=\"@format\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@lookupField\">\r\n" + 
				"		<xsl:attribute name=\"lookup-field\">\r\n" + 
				"			<xsl:value-of select=\"@lookupField\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@partitionName\">\r\n" + 
				"		<xsl:attribute name=\"partition-name\">\r\n" + 
				"			<xsl:value-of select=\"@partitionName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"list-id\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@file-ref\">\r\n" + 
				"		<marketo:import-leads-request-data>\r\n" + 
				"			<xsl:value-of select=\"@file-ref\" />\r\n" + 
				"		</marketo:import-leads-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:import-leads>");
		
		transformerOf.put("marketo:member-of-list", "<marketo:member-of-list>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"list-id\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@leadIds-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@leadIds-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:member-of-list>\r\n" + 
				"");
		
		transformerOf.put("marketo:remove-leads-from-list", "<marketo:remove-from-list>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@listId\">\r\n" + 
				"		<xsl:attribute name=\"list-id\">\r\n" + 
				"			<xsl:value-of select=\"@listId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@leadIds-ref\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@leadIds-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:remove-from-list>");
		
		transformerOf.put("marketo:delete-opportunities", "<marketo:delete-opportunities>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@searchValues-ref\">\r\n" + 
				"		<marketo:delete-opportunities-request-data>\r\n" + 
				"			<xsl:value-of select=\"@searchValues-ref\" />\r\n" + 
				"		</marketo:delete-opportunities-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-opportunities>");
		
		transformerOf.put("marketo:delete-opportunity-roles", "<marketo:delete-opportunity-roles>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@searchValues-ref\">\r\n" + 
				"		<marketo:delete-opportunity-roles-request-data>\r\n" + 
				"			<xsl:value-of select=\"@searchValues-ref\" />\r\n" + 
				"		</marketo:delete-opportunity-roles-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-opportunity-roles>");
		
		transformerOf.put("marketo:approve-program", "<marketo:approve-program>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@programId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@programId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:approve-program>");
		
		transformerOf.put("marketo:clone-program", "<marketo:clone-program>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@programId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@programId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@programName\">\r\n" + 
				"		<marketo:clone-program-request-data>\r\n" + 
				"			<xsl:value-of select=\"@programName\" />\r\n" + 
				"		</marketo:clone-program-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:clone-program>");	
		
		transformerOf.put("marketo:delete-program-by-id", "<marketo:delete-program>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@programId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@programId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-program>");
		
		transformerOf.put("marketo:get-channel-by-name", "<marketo:get-channel-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@channelName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-channel-by-name>");	
		
		transformerOf.put("marketo:get-channels", "<marketo:get-channels>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"max-return\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-channels>");
		
		transformerOf.put("marketo:get-program-by-id", "<marketo:get-program-by-id>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@programId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@programId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-program-by-id>");
		
		transformerOf.put("marketo:get-program-by-name", "<marketo:get-program-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@programName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@programName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-program-by-name>");
		
		transformerOf.put("marketo:get-program-by-tag", "<marketo:get-programs-by-tag>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@tag-ref\">\r\n" + 
				"		<xsl:attribute name=\"tag-value\">\r\n" + 
				"			<xsl:value-of select=\"@tag-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-programs-by-tag>");
		
		transformerOf.put("marketo:get-tag-by-name", "<marketo:get-tag-by-name>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@tagName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@tagName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-tag-by-name>");
		
		transformerOf.put("marketo:get-tags", "<marketo:get-tag-types>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"max-return\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-tag-types>\r\n" + 
				"");
		
		transformerOf.put("marketo:unapprove-program", "<marketo:unapprove-program>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@programId\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@programId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:unapprove-program>");
		
		transformerOf.put("marketo:delete-sales-persons", "<marketo:delete-salespersons>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@criteria-ref\">\r\n" + 
				"		<marketo:delete-salespersons-request-data>\r\n" + 
				"			<xsl:value-of select=\"@criteria-ref\" />\r\n" + 
				"		</marketo:delete-salespersons-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:delete-salespersons>");
		
		transformerOf.put("marketo:describe-sales-person", "<marketo:describe-salespersons>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</marketo:describe-salespersons>");
		
		transformerOf.put("marketo:get-sales-persons", "<marketo:get-salespersons>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@filterType\">\r\n" + 
				"		<xsl:attribute name=\"filter-type\">\r\n" + 
				"			<xsl:value-of select=\"@filterType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"batch-size\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@filterValues-ref\">\r\n" + 
				"		<xsl:attribute name=\"filter-values\">\r\n" + 
				"			<xsl:value-of select=\"@filterValues-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"marketo:fields/@ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"marketo:fields/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</marketo:get-salespersons>");
		
		transformerOf.put("powershell:config", "<powershell:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<powershell:powershell-connection>\r\n" + 
				"		<xsl:if test=\"@serviceAddress\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"@serviceAddress\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@rootUserName\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@rootUserName\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@rootPassword\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@rootPassword\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</powershell:powershell-connection>\r\n" + 
				"</powershell:config>");	
		
		transformerOf.put("powershell:execute", "<powershell:execute-script-file>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"powershell:parameters/@ref\">\r\n" + 
				"		<xsl:attribute name=\"parameters\">\r\n" + 
				"			<xsl:value-of select=\"powershell:parameters/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@script\">\r\n" + 
				"		<powershell:file-content>\r\n" + 
				"			<xsl:value-of select=\"@script\" />\r\n" + 
				"		</powershell:file-content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</powershell:execute-script-file>");
		
		transformerOf.put("coupa:config", "<coupa:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<coupa:coupa-connection>\r\n" + 
				"		<xsl:if test=\"@coupaInstance\">\r\n" + 
				"			<xsl:attribute name=\"coupaInstance\">\r\n" + 
				"				<xsl:value-of select=\"@coupaInstance\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@apiKey\">\r\n" + 
				"			<xsl:attribute name=\"apiKey\">\r\n" + 
				"				<xsl:value-of select=\"@apiKey\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</coupa:coupa-connection>\r\n" + 
				"</coupa:config>");
		
		transformerOf.put("coupa:approvals-api", "<coupa:approvals>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@action\">\r\n" + 
				"		<xsl:attribute name=\"action\">\r\n" + 
				"			<xsl:value-of select=\"@action\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@id\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@id\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</coupa:approvals>");
		
		transformerOf.put("coupa:expense-reports-api", "<coupa:expense-reports>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@id\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@id\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</coupa:expense-reports>");
		
		transformerOf.put("coupa:inventory-transactions-api", "<coupa:inventory-transactions>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@id\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@id\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</coupa:inventory-transactions>");
		
		transformerOf.put("coupa:invoices-api", "<coupa:void-invoice>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@id\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@id\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</coupa:void-invoice>");
		
		transformerOf.put("coupa:purchase-orders-api", "<coupa:purchase-orders>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@action\">\r\n" + 
				"		<xsl:attribute name=\"action\">\r\n" + 
				"			<xsl:value-of select=\"@action\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@id\">\r\n" + 
				"		<xsl:attribute name=\"id\">\r\n" + 
				"			<xsl:value-of select=\"@id\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</coupa:purchase-orders>");
		
		transformerOf.put("coupa:requisitions-api", "<coupa:requisitions>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@action\">\r\n" + 
				"		<xsl:attribute name=\"action\">\r\n" + 
				"			<xsl:value-of select=\"@action\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@payload-ref\">\r\n" + 
				"		<coupa:entity>\r\n" + 
				"			<xsl:value-of select=\"@payload-ref\" />\r\n" + 
				"		</coupa:entity>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</coupa:requisitions>");
		
		transformerOf.put("coupa:suppliers-api", "<coupa:creste-suppliers-remit-to-address>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@id\">\r\n" + 
				"		<xsl:attribute name=\"supplierId\">\r\n" + 
				"			<xsl:value-of select=\"@id\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@payload-ref\">\r\n" + 
				"		<coupa:entity>\r\n" + 
				"			<xsl:value-of select=\"@payload-ref\" />\r\n" + 
				"		</coupa:entity>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</coupa:creste-suppliers-remit-to-address>");
		
		transformerOf.put("ibm-ctg:create-channel-and-content-instance", "<ibmctg:create-channel-and-content-instance>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@request-ref\">\r\n" + 
				"		<xsl:attribute name=\"request\">\r\n" + 
				"			<xsl:value-of select=\"@request-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@content-ref\">\r\n" + 
				"		<xsl:attribute name=\"content\">\r\n" + 
				"			<xsl:value-of select=\"@content-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ibmctg:create-channel-and-content-instance>");
		
		transformerOf.put("ibm-ctg:execute", "<ibmctg:execute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@request-ref\">\r\n" + 
				"		<xsl:attribute name=\"channelRequest\">\r\n" + 
				"			<xsl:value-of select=\"@request-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@content-ref\">\r\n" + 
				"		<ibmctg:content>\r\n" + 
				"			<xsl:value-of select=\"@content-ref\" />\r\n" + 
				"		</ibmctg:content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ibmctg:execute>");
		
		transformerOf.put("ibm-ctg:execute-using-commarea", "<ibmctg:execute-using-commarea>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@request-ref\">\r\n" + 
				"		<xsl:attribute name=\"commareaRequestType\">\r\n" + 
				"			<xsl:value-of select=\"@request-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@content-ref\">\r\n" + 
				"		<ibmctg:content>\r\n" + 
				"			<xsl:value-of select=\"@content-ref\" />\r\n" + 
				"		</ibmctg:content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ibmctg:execute-using-commarea>");
		
		transformerOf.put("ibm-ctg:execute-with-multiple-channels", "<ibmctg:execute-with-multiple-channels>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@request-ref\">\r\n" + 
				"		<xsl:attribute name=\"commareaRequestType\">\r\n" + 
				"			<xsl:value-of select=\"@request-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@channelAndContentList-ref\">\r\n" + 
				"		<ibmctg:channel-and-contents>\r\n" + 
				"			<xsl:value-of select=\"@channelAndContentList-ref\" />\r\n" + 
				"		</ibmctg:channel-and-contents>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</ibmctg:execute-with-multiple-channels>");
		
		transformerOf.put("mllp:inbound-endpoint", "<mllp:mllp-listener>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</mllp:mllp-listener>");
		
		transformerOf.put("neo4j:config", "<neo4j:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<neo4j:connection>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@boltUrl\">\r\n" + 
				"			<xsl:attribute name=\"boltUrl\">\r\n" + 
				"				<xsl:value-of select=\"@boltUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@restUrl\">\r\n" + 
				"			<xsl:attribute name=\"restUrl\">\r\n" + 
				"				<xsl:value-of select=\"@restUrl\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</neo4j:connection>\r\n" + 
				"</neo4j:config>");
		
		transformerOf.put("neo4j:create-node", "<neo4j:create-node>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@label\">\r\n" + 
				"		<xsl:attribute name=\"label\">\r\n" + 
				"			<xsl:value-of select=\"@label\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@parameters-ref\">\r\n" + 
				"		<neo4j:input>\r\n" + 
				"			<xsl:value-of select=\"@parameters-ref\" />\r\n" + 
				"		</neo4j:input>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</neo4j:create-node>");
		
		transformerOf.put("neo4j:delete-nodes", "<neo4j:delete-nodes>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@label\">\r\n" + 
				"		<xsl:attribute name=\"label\">\r\n" + 
				"			<xsl:value-of select=\"@label\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@removeRelationships\">\r\n" + 
				"		<xsl:attribute name=\"removeRelationships\">\r\n" + 
				"			<xsl:value-of select=\"@removeRelationships\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@parameters-ref\">\r\n" + 
				"		<neo4j:parameters>\r\n" + 
				"			<xsl:value-of select=\"@parameters-ref\" />\r\n" + 
				"		</neo4j:parameters>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</neo4j:delete-nodes>");
		
		transformerOf.put("neo4j:execute", "<neo4j:execute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<xsl:attribute name=\"query\">\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@parameters-ref\">\r\n" + 
				"		<neo4j:input>\r\n" + 
				"			<xsl:value-of select=\"@parameters-ref\" />\r\n" + 
				"		</neo4j:input>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</neo4j:execute>");
		
		transformerOf.put("neo4j:select-nodes", "<neo4j:select-nodes>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@label\">\r\n" + 
				"		<xsl:attribute name=\"label\">\r\n" + 
				"			<xsl:value-of select=\"@label\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@parameters-ref\">\r\n" + 
				"		<neo4j:input>\r\n" + 
				"			<xsl:value-of select=\"@parameters-ref\" />\r\n" + 
				"		</neo4j:input>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</neo4j:select-nodes>");
		
		transformerOf.put("neo4j:update-nodes", "<neo4j:update-nodes>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@label\">\r\n" + 
				"		<xsl:attribute name=\"label\">\r\n" + 
				"			<xsl:value-of select=\"@label\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@parameters-ref\">\r\n" + 
				"		<neo4j:parameters>\r\n" + 
				"			<xsl:value-of select=\"@parameters-ref\" />\r\n" + 
				"		</neo4j:parameters>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@setParameters-ref\">\r\n" + 
				"		<neo4j:set-parameters>\r\n" + 
				"			<xsl:value-of select=\"@setParameters-ref\" />\r\n" + 
				"		</neo4j:set-parameters>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</neo4j:update-nodes>");
		
		transformerOf.put("rosetta-net:config", "<rosetta:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@pipRole\">\r\n" + 
				"			<xsl:attribute name=\"pipRole\">\r\n" + 
				"				<xsl:value-of select=\"@pipRole\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@httpListener-ref\">\r\n" + 
				"			<xsl:attribute name=\"listenerConfigName\">\r\n" + 
				"				<xsl:value-of select=\"@httpListener-ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@servicePath\">\r\n" + 
				"			<xsl:attribute name=\"servicePath\">\r\n" + 
				"				<xsl:value-of select=\"@servicePath\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@keystorePath\">\r\n" + 
				"			<xsl:attribute name=\"keystorePath\">\r\n" + 
				"				<xsl:value-of select=\"@keystorePath\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@keystorePass\">\r\n" + 
				"			<xsl:attribute name=\"keystorePass\">\r\n" + 
				"				<xsl:value-of select=\"@keystorePass\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@privatePass\">\r\n" + 
				"			<xsl:attribute name=\"privatePass\">\r\n" + 
				"				<xsl:value-of select=\"@privatePass\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@signingOverride\">\r\n" + 
				"			<xsl:attribute name=\"signingOverride\">\r\n" + 
				"				<xsl:value-of select=\"@signingOverride\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@globalUsageCode\">\r\n" + 
				"			<xsl:attribute name=\"globalUsageCode\">\r\n" + 
				"				<xsl:value-of select=\"@globalUsageCode\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@objectStore-ref\">\r\n" + 
				"			<xsl:attribute name=\"objectStore\">\r\n" + 
				"				<xsl:value-of select=\"@objectStore-ref\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@selfBusinessIdentifier\">\r\n" + 
				"			<xsl:attribute name=\"selfBusinessIdentifier\">\r\n" + 
				"				<xsl:value-of select=\"@selfBusinessIdentifier\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@selfLocationId\">\r\n" + 
				"			<xsl:attribute name=\"selfLocationId\">\r\n" + 
				"				<xsl:value-of select=\"@selfLocationId\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@partnerBusinessIdentifier\">\r\n" + 
				"			<xsl:attribute name=\"partnerBusinessIdentifier\">\r\n" + 
				"				<xsl:value-of select=\"@partnerBusinessIdentifier\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@partnerLocationId\">\r\n" + 
				"			<xsl:attribute name=\"partnerLocationId\">\r\n" + 
				"				<xsl:value-of select=\"@partnerLocationId\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@pipFile\">\r\n" + 
				"			<xsl:attribute name=\"pipFile\">\r\n" + 
				"				<xsl:value-of select=\"@pipFile\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"</rosetta:config>");
		
		transformerOf.put("rosetta-net:action-source", "<rosetta:action-source>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</rosetta:action-source>");
		
		transformerOf.put("rosetta-net:send-action", "<rosetta:send-action>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@input-ref\">\r\n" + 
				"		<rosetta:content>\r\n" + 
				"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
				"		</rosetta:content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</rosetta:send-action>");
		
		transformerOf.put("slack:oauth2-config", "<slack:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<slack:oauth-connection>\r\n" + 
				"	<slack:oauth-authorization-code>\r\n" + 
				"		<xsl:if test=\"@consumerKey\">\r\n" + 
				"			<xsl:attribute name=\"consumerKey\">\r\n" + 
				"				<xsl:value-of select=\"@consumerKey\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@consumerSecret\">\r\n" + 
				"			<xsl:attribute name=\"consumerSecret\">\r\n" + 
				"				<xsl:value-of select=\"@consumerSecret\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@scope\">\r\n" + 
				"			<xsl:attribute name=\"scopes\">\r\n" + 
				"				<xsl:value-of select=\"@scope\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</slack:oauth-authorization-code>\r\n" + 
				"	</slack:oauth-connection>\r\n" + 
				"</slack:config>");
		
		transformerOf.put("slack:unauthorize", "<slack:unauthorize>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@accessTokenId\">\r\n" + 
				"		<xsl:attribute name=\"resourceOwnerId\">\r\n" + 
				"			<xsl:value-of select=\"@accessTokenId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:unauthorize>");
		
		transformerOf.put("slack:token-config", "<slack:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<slack:token-connection>\r\n" + 
				"		<xsl:if test=\"@accessToken\">\r\n" + 
				"			<xsl:attribute name=\"token\">\r\n" + 
				"				<xsl:value-of select=\"@accessToken\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</slack:token-connection>\r\n" + 
				"</slack:config>");
		
		transformerOf.put("slack:get-channel-info", "<slack:channel-info>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelId\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:channel-info>");
		
		transformerOf.put("slack:join-channel", "<slack:invite-to-channel>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelName\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:invite-to-channel>");
		
		transformerOf.put("slack:get-channel-list", "<slack:list-channels>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@excludeArchived\">\r\n" + 
				"		<xsl:attribute name=\"excludeArchived\">\r\n" + 
				"			<xsl:value-of select=\"@excludeArchived\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@excludeMembers\">\r\n" + 
				"		<xsl:attribute name=\"excludeMembers\">\r\n" + 
				"			<xsl:value-of select=\"@excludeMembers\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@cursor\">\r\n" + 
				"		<xsl:attribute name=\"cursor\">\r\n" + 
				"			<xsl:value-of select=\"@cursor\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@limit\">\r\n" + 
				"		<xsl:attribute name=\"limit\">\r\n" + 
				"			<xsl:value-of select=\"@limit\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:list-channels>");
		
		transformerOf.put("slack:rename-channel", "<slack:rename-channel>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelId\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@channelName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@channelName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:rename-channel>");
		
		transformerOf.put("slack:set-channel-purpose", "<slack:set-channel-purpose>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelID\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelID\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@purpose\">\r\n" + 
				"		<xsl:attribute name=\"purpose\">\r\n" + 
				"			<xsl:value-of select=\"@purpose\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:set-channel-purpose>");
		
		transformerOf.put("slack:set-channel-topic", "<slack:set-channel-topic>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelID\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelID\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@topic\">\r\n" + 
				"		<xsl:attribute name=\"topic\">\r\n" + 
				"			<xsl:value-of select=\"@topic\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:set-channel-topic>");
		
		transformerOf.put("slack:post-message", "<slack:post-message>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelId\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@asUser\">\r\n" + 
				"		<xsl:attribute name=\"asUser\">\r\n" + 
				"			<xsl:value-of select=\"@asUser\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@iconURL\">\r\n" + 
				"		<xsl:attribute name=\"iconUrl\">\r\n" + 
				"			<xsl:value-of select=\"@iconURL\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@username\">\r\n" + 
				"		<xsl:attribute name=\"iconEmoji\">\r\n" + 
				"			<xsl:value-of select=\"@username\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@message\">\r\n" + 
				"		<slack:message>\r\n" + 
				"			<xsl:value-of select=\"@message\" />\r\n" + 
				"		</slack:message>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:post-message>");
		
		transformerOf.put("slack:update-message", "<slack:update>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelId\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@timeStamp\">\r\n" + 
				"		<xsl:attribute name=\"timestamp\">\r\n" + 
				"			<xsl:value-of select=\"@timeStamp\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@message\">\r\n" + 
				"		<slack:message>\r\n" + 
				"			<xsl:value-of select=\"@message\" />\r\n" + 
				"		</slack:message>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:update>");
		
		transformerOf.put("slack:upload-file", "<slack:upload-file>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileName\">\r\n" + 
				"		<xsl:attribute name=\"fileName\">\r\n" + 
				"			<xsl:value-of select=\"@fileName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@title\">\r\n" + 
				"		<xsl:attribute name=\"title\">\r\n" + 
				"			<xsl:value-of select=\"@title\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@initialComment\">\r\n" + 
				"		<xsl:attribute name=\"initialComment\">\r\n" + 
				"			<xsl:value-of select=\"@initialComment\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fileType\">\r\n" + 
				"		<xsl:attribute name=\"fileType\">\r\n" + 
				"			<xsl:value-of select=\"@fileType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@channelID\">\r\n" + 
				"		<slack:channels>\r\n" + 
				"			<xsl:value-of select=\"@channelID\" />\r\n" + 
				"		</slack:channels>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:upload-file>");
		
		transformerOf.put("slack:get-group-info", "<slack:group-info>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelId\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:group-info>");
		
		transformerOf.put("slack:get-group-list", "<slack:list-groups>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@excludeArchived\">\r\n" + 
				"		<xsl:attribute name=\"excludeArchived\">\r\n" + 
				"			<xsl:value-of select=\"@excludeArchived\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@excludeMembers\">\r\n" + 
				"		<xsl:attribute name=\"excludeMembers\">\r\n" + 
				"			<xsl:value-of select=\"@excludeMembers\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:list-groups>");
		
		transformerOf.put("slack:rename-group", "<slack:rename-group>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@groupName\">\r\n" + 
				"		<xsl:attribute name=\"name\">\r\n" + 
				"			<xsl:value-of select=\"@groupName\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@groupId\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@groupId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:rename-group>");
		
		transformerOf.put("slack:set-group-purpose", "<slack:set-group-purpose>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelID\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelID\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@purpose\">\r\n" + 
				"		<xsl:attribute name=\"purpose\">\r\n" + 
				"			<xsl:value-of select=\"@purpose\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:set-group-purpose>");
		
		transformerOf.put("slack:set-group-topic", "<slack:set-group-topic>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@channelID\">\r\n" + 
				"		<xsl:attribute name=\"channel\">\r\n" + 
				"			<xsl:value-of select=\"@channelID\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@topic\">\r\n" + 
				"		<xsl:attribute name=\"topic\">\r\n" + 
				"			<xsl:value-of select=\"@topic\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:set-group-topic>");
		
		transformerOf.put("slack:list-direct-message-channels", "<slack:list-ims>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</slack:list-ims>");
		
		transformerOf.put("slack:open-direct-message-channel", "<slack:open-im>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@userId\">\r\n" + 
				"		<xsl:attribute name=\"user\">\r\n" + 
				"			<xsl:value-of select=\"@userId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:open-im>");
		
		transformerOf.put("slack:get-user-info", "<slack:user-info>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@id\">\r\n" + 
				"		<xsl:attribute name=\"user\">\r\n" + 
				"			<xsl:value-of select=\"@id\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</slack:user-info>");
		
		transformerOf.put("slack:get-user-list", "<slack:list-users>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</slack:list-users>");
		
		transformerOf.put("tcp:connector", "<sockets:listener-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sockets:tcp-listener-connection>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@reuseAddress\">\r\n" + 
				"				<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@sendTcpNoDelay\">\r\n" + 
				"				<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:if test=\"@keepSendSocketOpen\">\r\n" + 
				"			<xsl:attribute name=\"linger\">\r\n" + 
				"				<xsl:value-of select=\"@keepSendSocketOpen\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@keepAlive\">\r\n" + 
				"			<xsl:attribute name=\"keepAlive\">\r\n" + 
				"				<xsl:value-of select=\"@keepAlive\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@failOnUnresolvedHost\">\r\n" + 
				"				<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:if test=\"@sendBufferSize\">\r\n" + 
				"			<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"				<xsl:value-of select=\"@sendBufferSize\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@receiveBufferSize\">\r\n" + 
				"			<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"				<xsl:value-of select=\"@receiveBufferSize\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@clientSoTimeout\">\r\n" + 
				"			<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@clientSoTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@serverSoTimeout\">\r\n" + 
				"			<xsl:attribute name=\"serverTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@serverSoTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@receiveBacklog\">\r\n" + 
				"			<xsl:attribute name=\"receiveBacklog\">\r\n" + 
				"				<xsl:value-of select=\"@receiveBacklog\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:length-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:length-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:length-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:length-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"tcp:length-protocol/@maxMessageLength\">\r\n" + 
				"				<xsl:attribute name=\"maxMessageLength\">\r\n" + 
				"					<xsl:value-of select=\"tcp:length-protocol/@maxMessageLength\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:length-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:custom-class-loading-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:custom-class-loading-length-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:custom-class-loading-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:custom-class-loading-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"tcp:custom-class-loading-protocol/@maxMessageLength\">\r\n" + 
				"				<xsl:attribute name=\"maxMessageLength\">\r\n" + 
				"					<xsl:value-of select=\"tcp:custom-class-loading-protocol/@maxMessageLength\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:custom-class-loading-length-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:custom-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:custom-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:custom-protocol/@class\">\r\n" + 
				"				<xsl:attribute name=\"class\">\r\n" + 
				"					<xsl:value-of select=\"tcp:custom-protocol/@class\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:custom-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:direct-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:direct-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:direct-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:direct-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:direct-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:eof-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:eof-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:eof-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:eof-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:eof-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:safe-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:safe-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:safe-protocol/@maxMessageLength\">\r\n" + 
				"				<xsl:attribute name=\"maxMessageLength\">\r\n" + 
				"					<xsl:value-of select=\"tcp:safe-protocol/@maxMessageLength\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"tcp:safe-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:safe-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:safe-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:streaming-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:streaming-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:streaming-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:streaming-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:streaming-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:xml-eof-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:xml-message-eof-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:xml-eof-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:xml-eof-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:xml-message-eof-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:xml-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:xml-message-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:xml-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:xml-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:xml-message-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sockets:tcp-listener-connection>\r\n" + 
				"</sockets:listener-config>");
		
		transformerOf.put("tcp:polling-connector", "<sockets:request-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sockets:tcp-requester-connection>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@reuseAddress\">\r\n" + 
				"				<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@sendTcpNoDelay\">\r\n" + 
				"				<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:if test=\"@keepSendSocketOpen\">\r\n" + 
				"			<xsl:attribute name=\"linger\">\r\n" + 
				"				<xsl:value-of select=\"@keepSendSocketOpen\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@keepAlive\">\r\n" + 
				"			<xsl:attribute name=\"keepAlive\">\r\n" + 
				"				<xsl:value-of select=\"@keepAlive\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@failOnUnresolvedHost\">\r\n" + 
				"				<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:if test=\"@sendBufferSize\">\r\n" + 
				"			<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"				<xsl:value-of select=\"@sendBufferSize\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@receiveBufferSize\">\r\n" + 
				"			<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"				<xsl:value-of select=\"@receiveBufferSize\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@pollingFrequency\">\r\n" + 
				"			<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@pollingFrequency\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@receiveBacklog\">\r\n" + 
				"			<xsl:attribute name=\"receiveBacklog\">\r\n" + 
				"				<xsl:value-of select=\"@receiveBacklog\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:length-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:length-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:length-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:length-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"tcp:length-protocol/@maxMessageLength\">\r\n" + 
				"				<xsl:attribute name=\"maxMessageLength\">\r\n" + 
				"					<xsl:value-of select=\"tcp:length-protocol/@maxMessageLength\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:length-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:custom-class-loading-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:custom-class-loading-length-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:custom-class-loading-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:custom-class-loading-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"tcp:custom-class-loading-protocol/@maxMessageLength\">\r\n" + 
				"				<xsl:attribute name=\"maxMessageLength\">\r\n" + 
				"					<xsl:value-of select=\"tcp:custom-class-loading-protocol/@maxMessageLength\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:custom-class-loading-length-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:custom-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:custom-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:custom-protocol/@class\">\r\n" + 
				"				<xsl:attribute name=\"class\">\r\n" + 
				"					<xsl:value-of select=\"tcp:custom-protocol/@class\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:custom-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:direct-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:direct-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:direct-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:direct-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:direct-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:eof-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:eof-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:eof-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:eof-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:eof-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:safe-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:safe-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:safe-protocol/@maxMessageLength\">\r\n" + 
				"				<xsl:attribute name=\"maxMessageLeght\">\r\n" + 
				"					<xsl:value-of select=\"tcp:safe-protocol/@maxMessageLength\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"tcp:safe-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:safe-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:safe-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:streaming-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:streaming-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:streaming-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:streaming-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:streaming-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:xml-eof-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:xml-message-eof-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:xml-eof-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:xml-eof-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:xml-message-eof-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"tcp:xml-protocol\">\r\n" + 
				"		<sockets:protocol >\r\n" + 
				"			<sockets:xml-message-protocol>\r\n" + 
				"			<xsl:if test=\"tcp:xml-protocol/@rethrowExceptionOnRead\">\r\n" + 
				"				<xsl:attribute name=\"rethrowExceptionOnRead\">\r\n" + 
				"					<xsl:value-of select=\"tcp:xml-protocol/@rethrowExceptionOnRead\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</sockets:xml-message-protocol>\r\n" + 
				"		</sockets:protocol >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sockets:tcp-requester-connection>\r\n" + 
				"</sockets:request-config>");
		
		transformerOf.put("tcp:inbound-endpoint", "<sockets:listener>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</sockets:listener>");
		
		transformerOf.put("tcp:outbound-endpoint", "<sockets:send>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</sockets:send>");
		
		transformerOf.put("tradacoms:config", "<tradacoms:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@partnerCode\">\r\n" + 
				"			<xsl:attribute name=\"partnerCode\">\r\n" + 
				"				<xsl:value-of select=\"@partnerCode\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@partnerName\">\r\n" + 
				"			<xsl:attribute name=\"partnerName\">\r\n" + 
				"				<xsl:value-of select=\"@partnerName\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@selfCode\">\r\n" + 
				"			<xsl:attribute name=\"selfCode\">\r\n" + 
				"				<xsl:value-of select=\"@selfCode\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@selfName\">\r\n" + 
				"			<xsl:attribute name=\"selfName\">\r\n" + 
				"				<xsl:value-of select=\"@selfName\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@lengthFail\">\r\n" + 
				"				<xsl:attribute name=\"enforceLengthLimits\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"enforceLengthLimits\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@unknownFail\">\r\n" + 
				"				<xsl:attribute name=\"allowUnknownSegments\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"allowUnknownSegments\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@unusedFail\">\r\n" + 
				"				<xsl:attribute name=\"allowUnusedSegments\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"allowUnusedSegments\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:if test=\"@orderFail\">\r\n" + 
				"			<xsl:attribute name=\"enforceSegmentOrder\">\r\n" + 
				"				<xsl:value-of select=\"@orderFail\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@sendSenderReference\">\r\n" + 
				"			<xsl:attribute name=\"sendSenderReference\">\r\n" + 
				"				<xsl:value-of select=\"@sendSenderReference\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@sendRecipientReference\">\r\n" + 
				"			<xsl:attribute name=\"sendRecipientReference\">\r\n" + 
				"				<xsl:value-of select=\"@sendRecipientReference\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@sendApplicationReference\">\r\n" + 
				"			<xsl:attribute name=\"sendApplicationReference\">\r\n" + 
				"				<xsl:value-of select=\"@sendApplicationReference\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@sendPriorityCode\">\r\n" + 
				"			<xsl:attribute name=\"sendPriorityCode\">\r\n" + 
				"				<xsl:value-of select=\"@sendPriorityCode\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"</tradacoms:config>");
		
		transformerOf.put("tradacoms:read", "<tradacoms:read>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@ediContent-ref\">\r\n" + 
				"		<tradacoms:read-content>\r\n" + 
				"			<xsl:value-of select=\"@ediContent-ref\" />\r\n" + 
				"		</tradacoms:read-content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</tradacoms:read>");
		
		transformerOf.put("tradacoms:write", "<tradacoms:write>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fields-ref\">\r\n" + 
				"		<tradacoms:write-content>\r\n" + 
				"			<xsl:value-of select=\"@fields-ref\" />\r\n" + 
				"		</tradacoms:write-content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</tradacoms:write>");
		
		transformerOf.put("volante:mvn-config", "<volante:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@messageFlow\">\r\n" + 
				"		<volante:maven-connection>\r\n" + 
				"			<xsl:attribute name=\"messageFlow\">\r\n" + 
				"				<xsl:value-of select=\"@messageFlow\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</volante:maven-connection>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</volante:config>");
		
		transformerOf.put("volante:volante-byte-array-transformer", "<volante:transform-byte-array>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</volante:transform-byte-array>");
		
		transformerOf.put("volante:volante-p-o-j-o-transformer", "<volante:transform-pojo>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</volante:transform-pojo>");
		
		transformerOf.put("volante:volante-string-transformer", "<volante:transform-string>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</volante:transform-string>");
		
		transformerOf.put("volante:volante-transformer", "<volante:transform-object>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</volante:transform-object>");
		
		transformerOf.put("x12-edi:config", "<x12:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"		<xsl:when test=\"@snipValidationType = 'TYPE2_HIPAA'\">\r\n" + 
				"			<xsl:attribute name=\"formValidation\">\r\n" + 
				"				<xsl:text>HIPAA_SNIP2</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" + 
				"			<xsl:attribute name=\"formValidation\">\r\n" + 
				"				<xsl:text>HIPAA_SNIP1</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"	<xsl:if test=\"@characterEncoding\">\r\n" + 
				"		<xsl:attribute name=\"characterEncoding\">\r\n" + 
				"			<xsl:value-of select=\"@characterEncoding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@stringCharacterSet\">\r\n" + 
				"		<xsl:attribute name=\"stringCharacterSet\">\r\n" + 
				"			<xsl:value-of select=\"@stringCharacterSet\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@stringSubstitutionChar\">\r\n" + 
				"		<xsl:attribute name=\"stringSubstitutionChar\">\r\n" + 
				"			<xsl:value-of select=\"@stringSubstitutionChar\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@versionIdentifierSuffix\">\r\n" + 
				"		<xsl:attribute name=\"versionIdentifierSuffix\">\r\n" + 
				"			<xsl:value-of select=\"@versionIdentifierSuffix\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@interchangeIdQualifierSelf\">\r\n" + 
				"		<xsl:attribute name=\"interchangeIdQualifierSelf\">\r\n" + 
				"			<xsl:value-of select=\"@interchangeIdQualifierSelf\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@interchangeIdSelf\">\r\n" + 
				"		<xsl:attribute name=\"interchangeIdSelf\">\r\n" + 
				"			<xsl:value-of select=\"@interchangeIdSelf\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@groupIdSelf\">\r\n" + 
				"		<xsl:attribute name=\"groupIdSelf\">\r\n" + 
				"			<xsl:value-of select=\"@groupIdSelf\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@interchangeIdQualifierPartner\">\r\n" + 
				"		<xsl:attribute name=\"interchangeIdQualifierPartner\">\r\n" + 
				"			<xsl:value-of select=\"@interchangeIdQualifierPartner\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@interchangeIdPartner\">\r\n" + 
				"		<xsl:attribute name=\"interchangeIdPartner\">\r\n" + 
				"			<xsl:value-of select=\"@interchangeIdPartner\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@groupIdPartner\">\r\n" + 
				"		<xsl:attribute name=\"groupIdPartner\">\r\n" + 
				"			<xsl:value-of select=\"@groupIdPartner\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@valueLengthErrorFail\">\r\n" + 
				"		<xsl:attribute name=\"enforceLengthLimits\">\r\n" + 
				"			<xsl:value-of select=\"@valueLengthErrorFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@invalidCharacterInValueFail\">\r\n" + 
				"		<xsl:attribute name=\"enforceCharacterSet\">\r\n" + 
				"			<xsl:value-of select=\"@invalidCharacterInValueFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@wrongValuesRepeatsFail\">\r\n" + 
				"		<xsl:attribute name=\"enforceValueRepeats\">\r\n" + 
				"			<xsl:value-of select=\"@wrongValuesRepeatsFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"		<xsl:when test=\"@unknownsSegmentFail\">\r\n" + 
				"			<xsl:attribute name=\"allowUnknownSegments\">\r\n" + 
				"				<xsl:text>true</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" + 
				"			<xsl:attribute name=\"allowUnknownSegments\">\r\n" + 
				"				<xsl:text>false</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"	<xsl:if test=\"@segmentOutOfOrderFail\">\r\n" + 
				"		<xsl:attribute name=\"enforceSegmentOrder\">\r\n" + 
				"			<xsl:value-of select=\"@segmentOutOfOrderFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"		<xsl:when test=\"@unusedSegmentPresentFail\">\r\n" + 
				"			<xsl:attribute name=\"allowUnusedSegments\">\r\n" + 
				"				<xsl:text>true</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" + 
				"			<xsl:attribute name=\"allowUnusedSegments\">\r\n" + 
				"				<xsl:text>false</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"	<xsl:if test=\"@wrongSegmentsRepeatsFail\">\r\n" + 
				"		<xsl:attribute name=\"enforceSegmentRepeats\">\r\n" + 
				"			<xsl:value-of select=\"@wrongSegmentsRepeatsFail\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"		<xsl:when test=\"@requireUniqueInterchangeNumbers\">\r\n" + 
				"			<xsl:attribute name=\"requireUniqueInterchanges\">\r\n" + 
				"				<xsl:text>false</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" + 
				"			<xsl:attribute name=\"requireUniqueInterchanges\">\r\n" + 
				"				<xsl:text>true</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"	<xsl:if test=\"@requireUniqueGroupNumbers\">\r\n" + 
				"		<xsl:attribute name=\"requireUniqueGroups\">\r\n" + 
				"			<xsl:value-of select=\"@requireUniqueGroupNumbers\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@requireUniqueTransactionNumbers\">\r\n" + 
				"		<xsl:attribute name=\"requireUniqueTransactionSets\">\r\n" + 
				"			<xsl:value-of select=\"@requireUniqueTransactionNumbers\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@ackAllSets\">\r\n" + 
				"		<xsl:attribute name=\"ackAllSets\">\r\n" + 
				"			<xsl:value-of select=\"@ackAllSets\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@generate999Acks\">\r\n" + 
				"		<xsl:attribute name=\"generate999Acks\">\r\n" + 
				"			<xsl:value-of select=\"@generate999Acks\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@reportSegmentErrors\">\r\n" + 
				"		<xsl:attribute name=\"reportSegmentErrors\">\r\n" + 
				"			<xsl:value-of select=\"@reportSegmentErrors\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@includeFASchema\">\r\n" + 
				"		<xsl:attribute name=\"includeFASchema\">\r\n" + 
				"			<xsl:value-of select=\"@includeFASchema\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@dataSeparator\">\r\n" + 
				"		<xsl:attribute name=\"dataSeparator\">\r\n" + 
				"			<xsl:value-of select=\"@dataSeparator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@componentSeparator\">\r\n" + 
				"		<xsl:attribute name=\"componentSeparator\">\r\n" + 
				"			<xsl:value-of select=\"@componentSeparator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@repetitionSeparator\">\r\n" + 
				"		<xsl:attribute name=\"repetitionSeparator\">\r\n" + 
				"			<xsl:value-of select=\"@repetitionSeparator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@segmentTerminator\">\r\n" + 
				"		<xsl:attribute name=\"segmentTerminator\">\r\n" + 
				"			<xsl:value-of select=\"@segmentTerminator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@lineEnding\">\r\n" + 
				"		<xsl:attribute name=\"lineEnding\">\r\n" + 
				"			<xsl:value-of select=\"@lineEnding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@sendUniqueGroupNumbers\">\r\n" + 
				"		<xsl:attribute name=\"sendUniqueGroupNumbers\">\r\n" + 
				"			<xsl:value-of select=\"@sendUniqueGroupNumbers\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@sendUniqueTransactionNumbers\">\r\n" + 
				"		<xsl:attribute name=\"sendUniqueTransactionNumbers\">\r\n" + 
				"			<xsl:value-of select=\"@sendUniqueTransactionNumbers\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@implementationConventionReference\">\r\n" + 
				"		<xsl:attribute name=\"implementationConventionReference\">\r\n" + 
				"			<xsl:value-of select=\"@implementationConventionReference\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"x12-edi:schemas/@ref\">\r\n" + 
				"		<xsl:attribute name=\"schemas\">\r\n" + 
				"			<xsl:value-of select=\"x12-edi:schemas/@ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@initialInterchangeNumber\">\r\n" + 
				"		<xsl:attribute name=\"initialInterchangeNumber\">\r\n" + 
				"			<xsl:value-of select=\"@initialInterchangeNumber\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@initialGroupNumber\">\r\n" + 
				"		<xsl:attribute name=\"initialGroupNumber\">\r\n" + 
				"			<xsl:value-of select=\"@initialGroupNumber\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@initialSetNumber\">\r\n" + 
				"		<xsl:attribute name=\"initialSetNumber\">\r\n" + 
				"			<xsl:value-of select=\"@initialSetNumber\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@defaultUsageIndicator\">\r\n" + 
				"		<xsl:attribute name=\"defaultUsageIndicator\">\r\n" + 
				"			<xsl:value-of select=\"@defaultUsageIndicator\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@ackRequested\">\r\n" + 
				"		<xsl:attribute name=\"ackRequested\">\r\n" + 
				"			<xsl:value-of select=\"@ackRequested\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</x12:config>");
		
		transformerOf.put("x12-edi:read", "<x12:read>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@ediContent-ref\">\r\n" + 
				"		<x12:read-content>\r\n" + 
				"			<xsl:value-of select=\"@ediContent-ref\" />\r\n" + 
				"		</x12:read-content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</x12:read>");
		
		transformerOf.put("x12-edi:write", "<x12:write>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"x12-edi:map/@ref\">\r\n" + 
				"		<x12:write-content>\r\n" + 
				"			<xsl:value-of select=\"x12-edi:map/@ref\" />\r\n" + 
				"		</x12:write-content>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</x12:write>");
		
		transformerOf.put("udp:connector", "<xsl:if test=\"udp:inbound-endpoint\">\r\n" + 
				"<sockets:listener-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"udp:inbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"udp:inbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sockets:udp-listener-connection>\r\n" + 
				"		<xsl:if test=\"udp:inbound-endpoint\">\r\n" + 
				"			<xsl:if test=\"udp:inbound-endpoint/@host\">\r\n" + 
				"				<xsl:attribute name=\"host\">\r\n" + 
				"					<xsl:value-of select=\"udp:inbound-endpoint/@host\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"udp:inbound-endpoint/@port\">\r\n" + 
				"				<xsl:attribute name=\"port\">\r\n" + 
				"					<xsl:value-of select=\"udp:inbound-endpoint/@port\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"udp:connector/@keepSendSocketOpen\">\r\n" + 
				"				<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:if test=\"udp:connector/@broadcast\">\r\n" + 
				"			<xsl:attribute name=\"broadcast\">\r\n" + 
				"				<xsl:value-of select=\"udp:connector/@broadcast\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/@sendBufferSize\">\r\n" + 
				"			<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"				<xsl:value-of select=\"udp:connector/@sendBufferSize\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/@receiveBufferSize\">\r\n" + 
				"			<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"				<xsl:value-of select=\"udp:connector/@receiveBufferSize\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/@timeout\">\r\n" + 
				"			<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"				<xsl:value-of select=\"udp:connector/@timeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"udp:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"udp:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sockets:udp-listener-connection>\r\n" + 
				"</sockets:listener-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"udp:outbound-endpoint\">\r\n" + 
				"<sockets:request-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"udp:outbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"udp:outbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<sockets:udp-requester-connection>\r\n" + 
				"		<xsl:if test=\"udp:outbound-endpoint\">\r\n" + 
				"			<xsl:if test=\"udp:outbound-endpoint/@host\">\r\n" + 
				"				<xsl:attribute name=\"host\">\r\n" + 
				"					<xsl:value-of select=\"udp:outbound-endpoint/@host\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"udp:outbound-endpoint/@port\">\r\n" + 
				"				<xsl:attribute name=\"port\">\r\n" + 
				"					<xsl:value-of select=\"udp:outbound-endpoint/@port\" />\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"udp:connector/@keepSendSocketOpen\">\r\n" + 
				"				<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"					<xsl:text>false</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"					<xsl:text>true</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:if test=\"udp:connector/@broadcast\">\r\n" + 
				"			<xsl:attribute name=\"broadcast\">\r\n" + 
				"				<xsl:value-of select=\"udp:connector/@broadcast\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/@sendBufferSize\">\r\n" + 
				"			<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"				<xsl:value-of select=\"udp:connector/@sendBufferSize\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/@receiveBufferSize\">\r\n" + 
				"			<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"				<xsl:value-of select=\"udp:connector/@receiveBufferSize\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/@timeout\">\r\n" + 
				"			<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"				<xsl:value-of select=\"udp:connector/@timeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"udp:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"udp:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"udp:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</sockets:udp-requester-connection>\r\n" + 
				"</sockets:request-config>\r\n" + 
				"</xsl:if>");
		
		transformerOf.put("udp:inbound-endpoint", "<sockets:listener>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"udp:inbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"udp:inbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</sockets:listener>");
		
		transformerOf.put("udp:outbound-endpoint", "<sockets:send>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"udp:outbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"udp:outbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</sockets:send>");
		
		transformerOf.put("jms:weblogic-connector", "<jms:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<jms:generic-connection>\r\n" + 
				"		<xsl:choose>\r\n" + 
				"			<xsl:when test=\"@specification = '1.1'\">\r\n" + 
				"				<xsl:attribute name=\"specification\">\r\n" + 
				"					<xsl:text>JMS_1_1</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:when>\r\n" + 
				"			<xsl:otherwise>\r\n" + 
				"				<xsl:attribute name=\"specification\">\r\n" + 
				"					<xsl:text>JMS_1_0_2b</xsl:text>\r\n" + 
				"				</xsl:attribute>\r\n" + 
				"			</xsl:otherwise>\r\n" + 
				"		</xsl:choose>\r\n" + 
				"		<xsl:if test=\"@username\">\r\n" + 
				"			<xsl:attribute name=\"username\">\r\n" + 
				"				<xsl:value-of select=\"@username\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@password\">\r\n" + 
				"			<xsl:attribute name=\"password\">\r\n" + 
				"				<xsl:value-of select=\"@password\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@clientId\">\r\n" + 
				"			<xsl:attribute name=\"clientId\">\r\n" + 
				"				<xsl:value-of select=\"@clientId\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<jms:connection-factory >\r\n" + 
				"			<jms:jndi-connection-factory>\r\n" + 
				"				<xsl:if test=\"@connectionFactoryJndiName\">\r\n" + 
				"					<xsl:attribute name=\"connectionFactoryJndiName\">\r\n" + 
				"						<xsl:value-of select=\"@connectionFactoryJndiName\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<jms:name-resolver-builder>\r\n" + 
				"					<xsl:if test=\"@jndiInitialFactory\">\r\n" + 
				"						<xsl:attribute name=\"jndiInitialContextFactory\">\r\n" + 
				"							<xsl:value-of select=\"@jndiInitialFactory\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"@jndiProviderUrl\">\r\n" + 
				"						<xsl:attribute name=\"jndiProviderUrl\">\r\n" + 
				"							<xsl:value-of select=\"@jndiProviderUrl\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"@jndiProviderProperties-ref\">\r\n" + 
				"						<xsl:attribute name=\"providerProperties\">\r\n" + 
				"							<xsl:value-of select=\"@jndiProviderProperties-ref\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</jms:name-resolver-builder>\r\n" + 
				"			</jms:jndi-connection-factory>\r\n" + 
				"		</jms:connection-factory >\r\n" + 
				"	</jms:generic-connection>\r\n" + 
				"	<jms:consumer-config>\r\n" + 
				"		<xsl:if test=\"@acknowledgementMode = 'DUPS_OK_ACKNOWLEDGE'\">\r\n" + 
				"			<xsl:attribute name=\"ackMode\">\r\n" + 
				"				<xsl:text>DUPS_OK</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@acknowledgementMode = 'CLIENT_ACKNOWLEDGE'\">\r\n" + 
				"			<xsl:attribute name=\"ackMode\">\r\n" + 
				"				<xsl:text>MANUAL</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@acknowledgementMode = 'AUTO_ACKNOWLEDGE'\">\r\n" + 
				"			<xsl:attribute name=\"ackMode\">\r\n" + 
				"				<xsl:text>AUTO</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@numberOfConsumers\">\r\n" + 
				"			<xsl:attribute name=\"selector\">\r\n" + 
				"				<xsl:value-of select=\"@numberOfConsumers\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@maxRedelivery\">\r\n" + 
				"			<xsl:attribute name=\"maxRedelivery\">\r\n" + 
				"				<xsl:value-of select=\"@maxRedelivery\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</jms:consumer-config>\r\n" + 
				"	<jms:producer-config>\r\n" + 
				"		<xsl:if test=\"@persistentDelivery\">\r\n" + 
				"			<xsl:attribute name=\"persistentDelivery\">\r\n" + 
				"				<xsl:value-of select=\"@persistentDelivery\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</jms:producer-config>\r\n" + 
				"</jms:config>");
		
		transformerOf.put("box:config-with-oauth", "<mule-box-connector:config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@clientId\">\r\n" + 
				"		<xsl:attribute name=\"property_clientId\">\r\n" + 
				"			<xsl:value-of select=\"@clientId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@clientSecret\">\r\n" + 
				"		<xsl:attribute name=\"property_clientSecret\">\r\n" + 
				"			<xsl:value-of select=\"@clientSecret\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:attribute name=\"property_host\">\r\n" + 
				"		<xsl:text>api.box.com</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_port\">\r\n" + 
				"		<xsl:text>443</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_basePath\">\r\n" + 
				"		<xsl:text>/2.0</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_protocol\">\r\n" + 
				"		<xsl:text>HTTPS</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_localCallbackPath\">\r\n" + 
				"		<xsl:text>/callback</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_localCallbackConfig\">\r\n" + 
				"		<xsl:text>cloudhub_http</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_externalCallbackUrl\">\r\n" + 
				"		<xsl:text>http://my-app.cloudhub.io/callback</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_localAuthorizationUrl\">\r\n" + 
				"		<xsl:text>http://localhost:8081/authorize</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_authorizationUrl\">\r\n" + 
				"		<xsl:text>https://account.box.com/api/oauth2/authorize</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"property_accessTokenUrl\">\r\n" + 
				"		<xsl:text>https://api.box.com/oauth2/token</xsl:text>\r\n" + 
				"	</xsl:attribute>\r\n" + 
				"</mule-box-connector:config>");
		
		transformerOf.put("box:copy-file", "<mule-box-connector:copy-file>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:copy-file>");
		
		transformerOf.put("box:copy-folder", "<mule-box-connector:copy-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId\">\r\n" + 
				"		<xsl:attribute name=\"folder-id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:copy-folder>");
		
		transformerOf.put("box:add-comment-to-file", "<mule-box-connector:create-comment>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@message\">\r\n" + 
				"		<mule-box-connector:create-comment-request-data>\r\n" + 
				"			<xsl:value-of select=\"@message\" />\r\n" + 
				"		</mule-box-connector:create-comment-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:create-comment>");
		
		transformerOf.put("box:create-group", "<mule-box-connector:create-group>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@groupName\">\r\n" + 
				"		<mule-box-connector:create-group-request-data>\r\n" + 
				"			<xsl:value-of select=\"@groupName\" />\r\n" + 
				"		</mule-box-connector:create-group-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:create-group>");
		
		transformerOf.put("box:delete-collaboration", "<mule-box-connector:delete-collaboration>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@collaborationId\">\r\n" + 
				"		<xsl:attribute name=\"collab-id\">\r\n" + 
				"			<xsl:value-of select=\"@collaborationId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:delete-collaboration>");
		
		transformerOf.put("box:delete-comment", "<mule-box-connector:delete-comment>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@commentId\">\r\n" + 
				"		<xsl:attribute name=\"comment-id\">\r\n" + 
				"			<xsl:value-of select=\"@commentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:delete-comment>");
		
		transformerOf.put("box:delete-file", "<mule-box-connector:delete-file>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:delete-file>");
		
		transformerOf.put("box:delete-old-file-version", "<mule-box-connector:delete-file-version>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@versionId\">\r\n" + 
				"		<xsl:attribute name=\"version-id\">\r\n" + 
				"			<xsl:value-of select=\"@versionId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:delete-file-version>");
		
		transformerOf.put("box:delete-folder", "<mule-box-connector:delete-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId\">\r\n" + 
				"		<xsl:attribute name=\"folder-id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"		<xsl:when test=\"@recursive\">\r\n" + 
				"			<xsl:attribute name=\"recursive\">\r\n" + 
				"				<xsl:text>false</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" + 
				"			<xsl:attribute name=\"recursive\">\r\n" + 
				"				<xsl:text>true</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"</mule-box-connector:delete-folder>");
		
		transformerOf.put("box:delete-group", "<mule-box-connector:delete-group>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@groupId\">\r\n" + 
				"		<xsl:attribute name=\"group-id\">\r\n" + 
				"			<xsl:value-of select=\"@groupId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:delete-group>");
		
		transformerOf.put("box:delete-group-membership", "<mule-box-connector:delete-group-membership>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@groupMemberShipId\">\r\n" + 
				"		<xsl:attribute name=\"group-membership-id\">\r\n" + 
				"			<xsl:value-of select=\"@groupMemberShipId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:delete-group-membership>");
		
		transformerOf.put("box:delete-task", "<mule-box-connector:delete-task>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@taskId\">\r\n" + 
				"		<xsl:attribute name=\"task-id\">\r\n" + 
				"			<xsl:value-of select=\"@taskId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:delete-task>");
		
		transformerOf.put("box:delete-task-assignment", "<mule-box-connector:delete-task-assignment>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@assignmentId\">\r\n" + 
				"		<xsl:attribute name=\"task-assignment-id\">\r\n" + 
				"			<xsl:value-of select=\"@assignmentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:delete-task-assignment>");
		
		transformerOf.put("box:delete-user", "<mule-box-connector:delete-user>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@userId\">\r\n" + 
				"		<xsl:attribute name=\"user-id\">\r\n" + 
				"			<xsl:value-of select=\"@userId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"		<xsl:when test=\"@notifyUser\">\r\n" + 
				"			<xsl:attribute name=\"notify\">\r\n" + 
				"				<xsl:text>false</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" + 
				"			<xsl:attribute name=\"notify\">\r\n" + 
				"				<xsl:text>true</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"	<xsl:choose>\r\n" + 
				"		<xsl:when test=\"@force\">\r\n" + 
				"			<xsl:attribute name=\"force\">\r\n" + 
				"				<xsl:text>true</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:when>\r\n" + 
				"		<xsl:otherwise>\r\n" + 
				"			<xsl:attribute name=\"force\">\r\n" + 
				"				<xsl:text>false</xsl:text>\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:otherwise>\r\n" + 
				"	</xsl:choose>\r\n" + 
				"</mule-box-connector:delete-user>");
		
		transformerOf.put("box:get-collaboration-info", "<mule-box-connector:get-collaboration>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@collaborationId\">\r\n" + 
				"		<xsl:attribute name=\"collab-id\">\r\n" + 
				"			<xsl:value-of select=\"@collaborationId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-collaboration>");
		
		transformerOf.put("box:get-comment-info", "<mule-box-connector:get-comment>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@commentId\">\r\n" + 
				"		<xsl:attribute name=\"comment-id\">\r\n" + 
				"			<xsl:value-of select=\"@commentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-comment>");
		
		transformerOf.put("box:get-all-groups", "<mule-box-connector:get-enterprise-groups>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"limit\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-enterprise-groups>");
		
		transformerOf.put("box:get-enterprise-users", "<mule-box-connector:get-enterprise-users>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"limit\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-enterprise-users>");
		
		transformerOf.put("box:get-file-info", "<mule-box-connector:get-file-content>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-file-content>");
		
		transformerOf.put("box:get-file-tasks", "<mule-box-connector:get-file-tasks>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-file-tasks>");
		
		transformerOf.put("box:get-thumbnail", "<mule-box-connector:get-file-thumbnail>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@thumbnailType\">\r\n" + 
				"		<xsl:attribute name=\"extension\">\r\n" + 
				"			<xsl:value-of select=\"@thumbnailType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minHeight\">\r\n" + 
				"		<xsl:attribute name=\"min-height\">\r\n" + 
				"			<xsl:value-of select=\"@minHeight\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@minWidth\">\r\n" + 
				"		<xsl:attribute name=\"min-width\">\r\n" + 
				"			<xsl:value-of select=\"@minWidth\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxHeight\">\r\n" + 
				"		<xsl:attribute name=\"max-height\">\r\n" + 
				"			<xsl:value-of select=\"@maxHeight\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@maxWidth\">\r\n" + 
				"		<xsl:attribute name=\"max-width\">\r\n" + 
				"			<xsl:value-of select=\"@maxWidth\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-file-thumbnail>");
		
		transformerOf.put("box:get-folder-info", "<mule-box-connector:get-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId\">\r\n" + 
				"		<xsl:attribute name=\"folder-id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-folder>");
		
		transformerOf.put("box:get-folder-collaborations", " <mule-box-connector:get-folder-collaborations>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId\">\r\n" + 
				"		<xsl:attribute name=\"folder-id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"limit\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-folder-collaborations>");
		
		transformerOf.put("box:get-folder-items", "<mule-box-connector:get-folder-items>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId\">\r\n" + 
				"		<xsl:attribute name=\"folder-id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fields-ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"@fields-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"limit\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-folder-items>");
		
		transformerOf.put("box:get-group-info", "<mule-box-connector:get-group>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@groupId\">\r\n" + 
				"		<xsl:attribute name=\"group-id\">\r\n" + 
				"			<xsl:value-of select=\"@groupId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-group>");
		
		transformerOf.put("box:get-group-memberships", "<mule-box-connector:get-group-membership>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@groupId\">\r\n" + 
				"		<xsl:attribute name=\"group-membership-id\">\r\n" + 
				"			<xsl:value-of select=\"@groupId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-group-membership>");
		
		transformerOf.put("box:get-pending-collaborations", "<mule-box-connector:get-pending-collaborations>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"</mule-box-connector:get-pending-collaborations>");
		
		transformerOf.put("box:get-task-info", "<mule-box-connector:get-task>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@taskId\">\r\n" + 
				"		<xsl:attribute name=\"task-id\">\r\n" + 
				"			<xsl:value-of select=\"@taskId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-task>");
		
		transformerOf.put("box:get-task-assignment-info", "<mule-box-connector:get-task-assignment>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@assignmentId\">\r\n" + 
				"		<xsl:attribute name=\"task-assignment-id\">\r\n" + 
				"			<xsl:value-of select=\"@assignmentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-task-assignment>");
		
		transformerOf.put("box:get-trashed-file", "<mule-box-connector:get-trashed-file>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-trashed-file>");
		
		transformerOf.put("box:get-trashed-folder", "<mule-box-connector:get-trashed-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId\">\r\n" + 
				"		<xsl:attribute name=\"folder-id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fields-ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"@fields-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-trashed-folder>");
		
		transformerOf.put("box:get-trashed-items", "<mule-box-connector:get-trashed-items>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fields-ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"@fields-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"limit\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-trashed-items>");
		
		transformerOf.put("box:get-user-info", "<mule-box-connector:get-user>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@userId\">\r\n" + 
				"		<xsl:attribute name=\"user-id\">\r\n" + 
				"			<xsl:value-of select=\"@userId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fields-ref\">\r\n" + 
				"		<xsl:attribute name=\"fields\">\r\n" + 
				"			<xsl:value-of select=\"@fields-ref\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-user>");
		
		transformerOf.put("box:get-user-group-memberships", "<mule-box-connector:get-user-group-membership>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@userId\">\r\n" + 
				"		<xsl:attribute name=\"user-id\">\r\n" + 
				"			<xsl:value-of select=\"@userId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fetchSize\">\r\n" + 
				"		<xsl:attribute name=\"limit\">\r\n" + 
				"			<xsl:value-of select=\"@fetchSize\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:get-user-group-membership>"); 
		
		transformerOf.put("box:promote-file-version", "<mule-box-connector:promote-file-version>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@versionId\">\r\n" + 
				"		<mule-box-connector:promote-file-version-request-data>\r\n" + 
				"			<xsl:value-of select=\"@versionId\" />\r\n" + 
				"		</mule-box-connector:promote-file-version-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:promote-file-version>");
		
		transformerOf.put("box:restore-file", "<mule-box-connector:restore-trashed-file>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:restore-trashed-file>");
		
		transformerOf.put("box:restore-folder", "<mule-box-connector:restore-trashed-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId\">\r\n" + 
				"		<xsl:attribute name=\"folder-id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:restore-trashed-folder>");
		
		transformerOf.put("box:search", "<mule-box-connector:search>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@query\">\r\n" + 
				"		<xsl:attribute name=\"query\">\r\n" + 
				"			<xsl:value-of select=\"@query\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@parentFolderId\">\r\n" + 
				"		<xsl:attribute name=\"ancestor-folder-ids\">\r\n" + 
				"			<xsl:value-of select=\"@parentFolderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:search>");
		
		transformerOf.put("box:update-collaboration", "<mule-box-connector:update-collaboration>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@collaborationId\">\r\n" + 
				"		<xsl:attribute name=\"collab-id\">\r\n" + 
				"			<xsl:value-of select=\"@collaborationId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@input-ref\">\r\n" + 
				"		<mule-box-connector:update-collaboration-request-data>\r\n" + 
				"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
				"		</mule-box-connector:update-collaboration-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:update-collaboration>");
		
		transformerOf.put("box:update-comment", "<mule-box-connector:update-comment>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@commentId\">\r\n" + 
				"		<xsl:attribute name=\"comment-id\">\r\n" + 
				"			<xsl:value-of select=\"@commentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@message\">\r\n" + 
				"		<mule-box-connector:update-comment-request-data>\r\n" + 
				"			<xsl:value-of select=\"@message\" />\r\n" + 
				"		</mule-box-connector:update-comment-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:update-comment>");
		
		transformerOf.put("box:update-file-info", "<mule-box-connector:update-file-info>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@fileId\">\r\n" + 
				"		<xsl:attribute name=\"file-id\">\r\n" + 
				"			<xsl:value-of select=\"@fileId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@fileInput-ref\">\r\n" + 
				"		<mule-box-connector:update-file-info-request-data>\r\n" + 
				"			<xsl:value-of select=\"@fileInput-ref\" />\r\n" + 
				"		</mule-box-connector:update-file-info-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:update-file-info>");
		
		transformerOf.put("box:update-folder", "<mule-box-connector:update-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@folderId\">\r\n" + 
				"		<xsl:attribute name=\"folder-id\">\r\n" + 
				"			<xsl:value-of select=\"@folderId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@input-ref\">\r\n" + 
				"		<mule-box-connector:update-folder-request-data>\r\n" + 
				"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
				"		</mule-box-connector:update-folder-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:update-folder>");
		
		transformerOf.put("box:update-group-membership", "<mule-box-connector:update-group-membership>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@groupMemberShipId\">\r\n" + 
				"		<xsl:attribute name=\"group-membership-id\">\r\n" + 
				"			<xsl:value-of select=\"@groupMemberShipId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@groupMembership-ref\">\r\n" + 
				"		<mule-box-connector:update-group-membership-request-data>\r\n" + 
				"			<xsl:value-of select=\"@groupMembership-ref\" />\r\n" + 
				"		</mule-box-connector:update-group-membership-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:update-group-membership>");
		
		transformerOf.put("box:update-task-info", "<mule-box-connector:update-task>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@taskId\">\r\n" + 
				"		<xsl:attribute name=\"task-id\">\r\n" + 
				"			<xsl:value-of select=\"@taskId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@taskInfo-ref\">\r\n" + 
				"		<mule-box-connector:update-task-request-data>\r\n" + 
				"			<xsl:value-of select=\"@taskInfo-ref\" />\r\n" + 
				"		</mule-box-connector:update-task-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:update-task>");
		
		transformerOf.put("box:update-task-assignment-info", "<mule-box-connector:update-task-assignment>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@assignmentId\">\r\n" + 
				"		<xsl:attribute name=\"task-assignment-id\">\r\n" + 
				"			<xsl:value-of select=\"@assignmentId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@taskAssignmentInfo-ref\">\r\n" + 
				"		<mule-box-connector:update-task-assignment-request-data>\r\n" + 
				"			<xsl:value-of select=\"@taskAssignmentInfo-ref\" />\r\n" + 
				"		</mule-box-connector:update-task-assignment-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:update-task-assignment>");
		
		transformerOf.put("box:update-user-info", "<mule-box-connector:update-user>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@userId\">\r\n" + 
				"		<xsl:attribute name=\"user-id\">\r\n" + 
				"			<xsl:value-of select=\"@userId\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"@input-ref\">\r\n" + 
				"		<mule-box-connector:update-user-request-data>\r\n" + 
				"			<xsl:value-of select=\"@input-ref\" />\r\n" + 
				"		</mule-box-connector:update-user-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:update-user>");
		
		transformerOf.put("box:create-collaboration", "<mule-box-connector:create-collaboration>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<mule-box-connector:create-collaboration-request-data >\r\n" + 
				"	<xsl:text>#[{\r\n" + 
				"			</xsl:text>\r\n" + 
				"		<xsl:for-each select=\"@*\">\r\n" + 
				"		<xsl:if test=\"not((name() = 'doc:name') or (name() = 'config-ref'))\">\r\n" + 
				"				\"<xsl:value-of select=\"name()\" />\" :<xsl:choose><xsl:when test=\"starts-with(.,'#[')\"><xsl:value-of select=\"substring(.,3,string-length(.) - 3)\" /></xsl:when><xsl:when test=\"contains(.,'#[') and not(starts-with(.,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\".\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\".\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"	<xsl:text> }]</xsl:text>\r\n" + 
				"	</mule-box-connector:create-collaboration-request-data >\r\n" + 
				"</mule-box-connector:create-collaboration>");
		
		transformerOf.put("box:create-folder", "<mule-box-connector:create-folder>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<mule-box-connector:create-folder-request-data >\r\n" + 
				"		<xsl:text>#[{\r\n" + 
				"			 </xsl:text>\r\n" + 
				"		<xsl:for-each select=\"@*\">\r\n" + 
				"		<xsl:if test=\"not((name() = 'doc:name') or (name() = 'config-ref'))\">\r\n" + 
				"				\"<xsl:value-of select=\"name()\" />\" :<xsl:choose><xsl:when test=\"starts-with(.,'#[')\"><xsl:value-of select=\"substring(.,3,string-length(.) - 3)\" /></xsl:when><xsl:when test=\"contains(.,'#[') and not(starts-with(.,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\".\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\".\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"	<xsl:text> }]</xsl:text>\r\n" + 
				"	</mule-box-connector:create-folder-request-data >\r\n" + 
				"</mule-box-connector:create-folder>");
		
		transformerOf.put("box:add-group-membership", "<mule-box-connector:create-group-membership>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<mule-box-connector:create-group-membership-request-data >\r\n" + 
				"		<xsl:text>#[{\r\n" + 
				"			 </xsl:text>\r\n" + 
				"		<xsl:for-each select=\"@*\">\r\n" + 
				"		<xsl:if test=\"not((name() = 'doc:name') or (name() = 'config-ref'))\">\r\n" + 
				"				\"<xsl:value-of select=\"name()\" />\" :<xsl:choose><xsl:when test=\"starts-with(.,'#[')\"><xsl:value-of select=\"substring(.,3,string-length(.) - 3)\" /></xsl:when><xsl:when test=\"contains(.,'#[') and not(starts-with(.,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\".\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\".\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"	<xsl:text> }]</xsl:text>\r\n" + 
				"	</mule-box-connector:create-group-membership-request-data >\r\n" + 
				"</mule-box-connector:create-group-membership>");
		
		transformerOf.put("box:add-task-to-file", "<mule-box-connector:create-task>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<mule-box-connector:create-task-request-data >\r\n" + 
				"		<xsl:text>#[{\r\n" + 
				"			 </xsl:text>\r\n" + 
				"		<xsl:for-each select=\"@*\">\r\n" + 
				"		<xsl:if test=\"not((name() = 'doc:name') or (name() = 'config-ref'))\">\r\n" + 
				"				\"<xsl:value-of select=\"name()\" />\" :<xsl:choose><xsl:when test=\"starts-with(.,'#[')\"><xsl:value-of select=\"substring(.,3,string-length(.) - 3)\" /></xsl:when><xsl:when test=\"contains(.,'#[') and not(starts-with(.,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\".\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\".\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"	<xsl:text> }]</xsl:text>\r\n" + 
				"	</mule-box-connector:create-task-request-data >\r\n" + 
				"</mule-box-connector:create-task>");
		
		transformerOf.put("box:add-task-assignment", "<mule-box-connector:create-task-assignment>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<mule-box-connector:create-task-assignment-request-data >\r\n" + 
				"		<xsl:text>#[{\r\n" + 
				"			 </xsl:text>\r\n" + 
				"		<xsl:for-each select=\"@*\">\r\n" + 
				"		<xsl:if test=\"not((name() = 'doc:name') or (name() = 'config-ref'))\">\r\n" + 
				"				\"<xsl:value-of select=\"name()\" />\" :<xsl:choose><xsl:when test=\"starts-with(.,'#[')\"><xsl:value-of select=\"substring(.,3,string-length(.) - 3)\" /></xsl:when><xsl:when test=\"contains(.,'#[') and not(starts-with(.,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\".\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\".\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"	<xsl:text> }]</xsl:text>\r\n" + 
				"	</mule-box-connector:create-task-assignment-request-data >\r\n" + 
				"</mule-box-connector:create-task-assignment>");
		
		transformerOf.put("box:create-app-user", "<mule-box-connector:create-user>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"@config-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"@username\">\r\n" + 
				"		<mule-box-connector:create-user-request-data>\r\n" + 
				"			<xsl:text>#[{\r\n" + 
				"			 </xsl:text>\r\n" + 
				"		<xsl:for-each select=\"@*\">\r\n" + 
				"		<xsl:if test=\"not((name() = 'doc:name') or (name() = 'config-ref'))\">\r\n" + 
				"				\"<xsl:value-of select=\"name()\" />\" :<xsl:choose><xsl:when test=\"starts-with(.,'#[')\"><xsl:value-of select=\"substring(.,3,string-length(.) - 3)\" /></xsl:when><xsl:when test=\"contains(.,'#[') and not(starts-with(.,'#['))\"><xsl:text>@[</xsl:text><xsl:value-of select=\".\" /><xsl:text>]</xsl:text></xsl:when><xsl:otherwise><xsl:text>'</xsl:text><xsl:value-of select=\".\" /><xsl:text>'</xsl:text></xsl:otherwise></xsl:choose><xsl:if test=\"position() != last()\"><xsl:text>,</xsl:text></xsl:if>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			</xsl:for-each>\r\n" + 
				"	<xsl:text> }]</xsl:text>\r\n" + 
				"		</mule-box-connector:create-user-request-data>\r\n" + 
				"	</xsl:if>\r\n" + 
				"</mule-box-connector:create-user>");
		
				transformerOf.put("jdbc-ee:outbound-endpoint", "<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'S') or starts-with(normalize-space(jdbc-ee:query/@value), 's')\">\r\n" + 
				"	<db:select>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:select>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'U') or starts-with(normalize-space(jdbc-ee:query/@value), 'u')\">\r\n" + 
				"	<db:update>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:update>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'I') or starts-with(normalize-space(jdbc-ee:query/@value), 'i')\">\r\n" + 
				"	<db:insert>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:insert>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'D') or starts-with(normalize-space(jdbc-ee:query/@value), 'd')\">\r\n" + 
				"	<db:delete>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:delete>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'C') or starts-with(normalize-space(jdbc-ee:query/@value), 'c')\">\r\n" + 
				"	<db:stored-procedure>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:stored-procedure>\r\n" + 
				"</xsl:if>");
		
		transformerOf.put("jdbc-ee:inbound-endpoint", "<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'S') or starts-with(normalize-space(jdbc-ee:query/@value), 's')\">\r\n" + 
				"	<db:select>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:select>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'U') or starts-with(normalize-space(jdbc-ee:query/@value), 'u')\">\r\n" + 
				"	<db:update>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:update>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'I') or starts-with(normalize-space(jdbc-ee:query/@value), 'i')\">\r\n" + 
				"	<db:insert>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:insert>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'D') or starts-with(normalize-space(jdbc-ee:query/@value), 'd')\">\r\n" + 
				"	<db:delete>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:delete>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"starts-with(normalize-space(jdbc-ee:query/@value), 'C') or starts-with(normalize-space(jdbc-ee:query/@value), 'c')\">\r\n" + 
				"	<db:stored-procedure>\r\n" + 
				"		<xsl:attribute name=\"doc:name\">\r\n" + 
				"            <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:attribute name=\"config-ref\">\r\n" + 
				"            <xsl:value-of select=\"@connector-ref\" />\r\n" + 
				"        </xsl:attribute>\r\n" + 
				"		<xsl:if test=\"@queryTimeout\">\r\n" + 
				"			<xsl:attribute name=\"queryTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@queryTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"queryTimeoutUnit\">\r\n" + 
				"			<xsl:text>SECONDS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<db:sql >\r\n" + 
				"			<xsl:value-of select=\"jdbc-ee:query/@value\" />\r\n" + 
				"		</db:sql >\r\n" + 
				"	</db:stored-procedure>\r\n" + 
				"</xsl:if>");
		
		transformerOf.put("http:outbound-endpoint", "<http:request>\r\n" + 
				"	<xsl:if test=\"http:outbound-endpoint/@method\">\r\n" + 
				"		<xsl:attribute name=\"method\">\r\n" + 
				"			<xsl:value-of select=\"http:outbound-endpoint/@method\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:outbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"http:outbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"http:outbound-endpoint/@path\">\r\n" + 
				"		<xsl:attribute name=\"path\">\r\n" + 
				"			<xsl:value-of select=\"http:outbound-endpoint/@path\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:outbound-endpoint/@mimeType\">\r\n" + 
				"		<xsl:attribute name=\"outputMimeType\">\r\n" + 
				"			<xsl:value-of select=\"http:outbound-endpoint/@mimeType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:outbound-endpoint/@encoding\">\r\n" + 
				"		<xsl:attribute name=\"outputEncoding\">\r\n" + 
				"			<xsl:value-of select=\"http:outbound-endpoint/@encoding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:outbound-endpoint/@responseTimeout\">\r\n" + 
				"		<xsl:attribute name=\"responseTimeout\">\r\n" + 
				"			<xsl:value-of select=\"http:outbound-endpoint/@responseTimeout\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:outbound-endpoint/*[name()='reconnect']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"http:outbound-endpoint/*[name()='reconnect']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:outbound-endpoint/*[name()='reconnect-forever']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"http:outbound-endpoint/*[name()='reconnect-forever']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</http:request>");
		
		transformerOf.put("https:outbound-endpoint", "<http:request>\r\n" + 
				"	<xsl:if test=\"https:outbound-endpoint/@method\">\r\n" + 
				"		<xsl:attribute name=\"method\">\r\n" + 
				"			<xsl:value-of select=\"https:outbound-endpoint/@method\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"https:outbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"https:outbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"https:outbound-endpoint/@path\">\r\n" + 
				"		<xsl:attribute name=\"path\">\r\n" + 
				"			<xsl:value-of select=\"https:outbound-endpoint/@path\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:outbound-endpoint/@mimeType\">\r\n" + 
				"		<xsl:attribute name=\"outputMimeType\">\r\n" + 
				"			<xsl:value-of select=\"https:outbound-endpoint/@mimeType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:outbound-endpoint/@encoding\">\r\n" + 
				"		<xsl:attribute name=\"outputEncoding\">\r\n" + 
				"			<xsl:value-of select=\"https:outbound-endpoint/@encoding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:outbound-endpoint/@responseTimeout\">\r\n" + 
				"		<xsl:attribute name=\"responseTimeout\">\r\n" + 
				"			<xsl:value-of select=\"https:outbound-endpoint/@responseTimeout\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:outbound-endpoint/*[name()='reconnect']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"https:outbound-endpoint/*[name()='reconnect']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:outbound-endpoint/*[name()='reconnect-forever']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"https:outbound-endpoint/*[name()='reconnect-forever']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</http:request>");
		
		transformerOf.put("http:inbound-endpoint", "<http:listener>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:inbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"http:inbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"http:inbound-endpoint/@path\">\r\n" + 
				"		<xsl:attribute name=\"path\">\r\n" + 
				"			<xsl:value-of select=\"http:inbound-endpoint/@path\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:inbound-endpoint/@mimeType\">\r\n" + 
				"		<xsl:attribute name=\"outputMimeType\">\r\n" + 
				"			<xsl:value-of select=\"http:inbound-endpoint/@mimeType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:inbound-endpoint/@encoding\">\r\n" + 
				"		<xsl:attribute name=\"outputEncoding\">\r\n" + 
				"			<xsl:value-of select=\"http:inbound-endpoint/@encoding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:inbound-endpoint/*[name()='reconnect']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"http:inbound-endpoint/*[name()='reconnect']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"http:inbound-endpoint/*[name()='reconnect-forever']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"http:inbound-endpoint/*[name()='reconnect-forever']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</http:listener>");
		
		transformerOf.put("https:inbound-endpoint", "<http:listener>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"https:inbound-endpoint/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"config-ref\">\r\n" + 
				"        <xsl:value-of select=\"https:inbound-endpoint/@connector-ref\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:if test=\"https:inbound-endpoint/@path\">\r\n" + 
				"		<xsl:attribute name=\"path\">\r\n" + 
				"			<xsl:value-of select=\"https:inbound-endpoint/@path\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:inbound-endpoint/@mimeType\">\r\n" + 
				"		<xsl:attribute name=\"outputMimeType\">\r\n" + 
				"			<xsl:value-of select=\"https:inbound-endpoint/@mimeType\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:inbound-endpoint/@encoding\">\r\n" + 
				"		<xsl:attribute name=\"outputEncoding\">\r\n" + 
				"			<xsl:value-of select=\"https:inbound-endpoint/@encoding\" />\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:inbound-endpoint/*[name()='reconnect']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"https:inbound-endpoint/*[name()='reconnect']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"	<xsl:if test=\"https:inbound-endpoint/*[name()='reconnect-forever']\">\r\n" + 
				"		<reconnection >\r\n" + 
				"			<xsl:copy-of select=\"https:inbound-endpoint/*[name()='reconnect-forever']\"/>\r\n" + 
				"		</reconnection >\r\n" + 
				"	</xsl:if>\r\n" + 
				"</http:listener>");
		
		transformerOf.put("http:polling-connector", "<xsl:if test=\"http:inbound-endpoint\">\r\n" + 
				"<http:listener-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:listener-connection>\r\n" + 
				"		<xsl:if test=\"@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionIdleTimeout\">\r\n" + 
				"				<xsl:value-of select=\"@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTP</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</http:listener-connection>\r\n" + 
				"</http:listener-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"https:inbound-endpoint\">\r\n" + 
				"<http:listener-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"http:polling-connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:polling-connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:listener-connection>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"http:polling-connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"http:polling-connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionIdleTimeout\">\r\n" + 
				"				<xsl:value-of select=\"http:polling-connector/@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTPS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:polling-connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:polling-connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</http:listener-connection>\r\n" + 
				"</http:listener-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"http:outbound-endpoint\">\r\n" + 
				"<http:request-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"http:polling-connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:polling-connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:request-connection>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"http:polling-connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"http:polling-connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTP</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:polling-connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:polling-connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<http:proxy-config >\r\n" + 
				"			<http:proxy>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@proxyHostname\">\r\n" + 
				"					<xsl:attribute name=\"host\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@proxyHostname\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@proxyPort\">\r\n" + 
				"					<xsl:attribute name=\"port\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@proxyPort\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@proxyUsername\">\r\n" + 
				"					<xsl:attribute name=\"username\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@proxyUsername\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@proxyPassword\">\r\n" + 
				"					<xsl:attribute name=\"password\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@proxyPassword\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"			</http:proxy>\r\n" + 
				"		</http:proxy-config >\r\n" + 
				"		<http:client-socket-properties >\r\n" + 
				"			<sockets:tcp-client-socket-properties>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@connectionTimeout\">\r\n" + 
				"					<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@connectionTimeout\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:polling-connector/@sendTcpNoDelay\">\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@keepAlive\">\r\n" + 
				"					<xsl:attribute name=\"keepAlive\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@keepAlive\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:polling-connector/@failOnUnresolvedHost\">\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@sendBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@sendBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@receiveBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@receiveBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@receiveBacklog\">\r\n" + 
				"					<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@receiveBacklog\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:polling-connector/@reuseAddress\">\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"			</sockets:tcp-client-socket-properties>\r\n" + 
				"		</http:client-socket-properties >\r\n" + 
				"	</http:request-connection>\r\n" + 
				"</http:request-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"https:outbound-endpoint\">\r\n" + 
				"<http:request-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"http:polling-connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:polling-connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:request-connection>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"http:polling-connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"http:polling-connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTPS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:polling-connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:polling-connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:polling-connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<http:proxy-config >\r\n" + 
				"			<http:proxy>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@proxyHostname\">\r\n" + 
				"					<xsl:attribute name=\"host\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@proxyHostname\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@proxyPort\">\r\n" + 
				"					<xsl:attribute name=\"port\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@proxyPort\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@proxyUsername\">\r\n" + 
				"					<xsl:attribute name=\"username\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@proxyUsername\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@proxyPassword\">\r\n" + 
				"					<xsl:attribute name=\"password\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@proxyPassword\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"			</http:proxy>\r\n" + 
				"		</http:proxy-config >\r\n" + 
				"		<http:client-socket-properties >\r\n" + 
				"			<sockets:tcp-client-socket-properties>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@connectionTimeout\">\r\n" + 
				"					<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@connectionTimeout\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:polling-connector/@sendTcpNoDelay\">\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@keepAlive\">\r\n" + 
				"					<xsl:attribute name=\"keepAlive\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@keepAlive\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:polling-connector/@failOnUnresolvedHost\">\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@sendBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@sendBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@receiveBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@receiveBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:polling-connector/@receiveBacklog\">\r\n" + 
				"					<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"						<xsl:value-of select=\"http:polling-connector/@receiveBacklog\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:polling-connector/@reuseAddress\">\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"			</sockets:tcp-client-socket-properties>\r\n" + 
				"		</http:client-socket-properties >\r\n" + 
				"	</http:request-connection>\r\n" + 
				"</http:request-config>\r\n" + 
				"</xsl:if>");
		
		transformerOf.put("https:connector", "<xsl:if test=\"http:inbound-endpoint\">\r\n" + 
				"<http:listener-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"https:connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"https:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:listener-connection>\r\n" + 
				"		<xsl:if test=\"https:connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionIdleTimeout\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTP</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"https:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"https:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"https:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<tls:context >\r\n" + 
				"			<xsl:if test=\"https:connector/https:tls-server\">\r\n" + 
				"				<tls:trust-store>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@path\">\r\n" + 
				"						<xsl:attribute name=\"path\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@path\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@storePassword\">\r\n" + 
				"						<xsl:attribute name=\"password\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@storePassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@algorithm\">\r\n" + 
				"						<xsl:attribute name=\"algorithm\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@algorithm\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@explicitOnly\">\r\n" + 
				"						<xsl:attribute name=\"insecure\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@explicitOnly\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</tls:trust-store>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"https:connector/https:tls-key-store\">\r\n" + 
				"				<tls:key-store>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@path\">\r\n" + 
				"						<xsl:attribute name=\"path\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@path\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@keyPassword\">\r\n" + 
				"						<xsl:attribute name=\"keyPassword\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@keyPassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@storePassword\">\r\n" + 
				"						<xsl:attribute name=\"password\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@storePassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@algorithm\">\r\n" + 
				"						<xsl:attribute name=\"algorithm\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@algorithm\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</tls:key-store>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</tls:context >\r\n" + 
				"	</http:listener-connection>\r\n" + 
				"</http:listener-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"https:inbound-endpoint\">\r\n" + 
				"<http:listener-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"https:connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"https:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:listener-connection>\r\n" + 
				"		<xsl:if test=\"https:connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionIdleTimeout\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTPS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"https:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"https:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"https:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<tls:context >\r\n" + 
				"			<xsl:if test=\"https:connector/https:tls-server\">\r\n" + 
				"				<tls:trust-store>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@path\">\r\n" + 
				"						<xsl:attribute name=\"path\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@path\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@storePassword\">\r\n" + 
				"						<xsl:attribute name=\"password\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@storePassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@algorithm\">\r\n" + 
				"						<xsl:attribute name=\"algorithm\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@algorithm\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@explicitOnly\">\r\n" + 
				"						<xsl:attribute name=\"insecure\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@explicitOnly\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</tls:trust-store>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"https:connector/https:tls-key-store\">\r\n" + 
				"				<tls:key-store>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@path\">\r\n" + 
				"						<xsl:attribute name=\"path\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@path\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@keyPassword\">\r\n" + 
				"						<xsl:attribute name=\"keyPassword\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@keyPassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@storePassword\">\r\n" + 
				"						<xsl:attribute name=\"password\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@storePassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@algorithm\">\r\n" + 
				"						<xsl:attribute name=\"algorithm\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@algorithm\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</tls:key-store>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</tls:context >\r\n" + 
				"	</http:listener-connection>\r\n" + 
				"</http:listener-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"http:outbound-endpoint\">\r\n" + 
				"<http:request-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"https:connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"https:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:request-connection>\r\n" + 
				"		<xsl:if test=\"https:connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTP</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"https:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"https:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"https:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<http:proxy-config >\r\n" + 
				"			<http:proxy>\r\n" + 
				"				<xsl:if test=\"https:connector/@proxyHostname\">\r\n" + 
				"					<xsl:attribute name=\"host\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@proxyHostname\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@proxyPort\">\r\n" + 
				"					<xsl:attribute name=\"port\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@proxyPort\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@proxyUsername\">\r\n" + 
				"					<xsl:attribute name=\"username\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@proxyUsername\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@proxyPassword\">\r\n" + 
				"					<xsl:attribute name=\"password\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@proxyPassword\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"			</http:proxy>\r\n" + 
				"		</http:proxy-config >\r\n" + 
				"		<http:client-socket-properties >\r\n" + 
				"			<sockets:tcp-client-socket-properties>\r\n" + 
				"				<xsl:if test=\"https:connector/@connectionTimeout\">\r\n" + 
				"					<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@connectionTimeout\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"https:connector/@sendTcpNoDelay\">\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"https:connector/@keepAlive\">\r\n" + 
				"					<xsl:attribute name=\"keepAlive\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@keepAlive\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"https:connector/@failOnUnresolvedHost\">\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"https:connector/@sendBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@sendBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@receiveBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@receiveBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@receiveBacklog\">\r\n" + 
				"					<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@receiveBacklog\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"https:connector/@reuseAddress\">\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"			</sockets:tcp-client-socket-properties>\r\n" + 
				"		</http:client-socket-properties >\r\n" + 
				"		<tls:context >\r\n" + 
				"			<xsl:if test=\"https:connector/https:tls-server\">\r\n" + 
				"				<tls:trust-store>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@path\">\r\n" + 
				"						<xsl:attribute name=\"path\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@path\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@storePassword\">\r\n" + 
				"						<xsl:attribute name=\"password\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@storePassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@algorithm\">\r\n" + 
				"						<xsl:attribute name=\"algorithm\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@algorithm\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@explicitOnly\">\r\n" + 
				"						<xsl:attribute name=\"insecure\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@explicitOnly\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</tls:trust-store>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"https:connector/https:tls-key-store\">\r\n" + 
				"				<tls:key-store>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@path\">\r\n" + 
				"						<xsl:attribute name=\"path\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@path\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@keyPassword\">\r\n" + 
				"						<xsl:attribute name=\"keyPassword\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@keyPassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@storePassword\">\r\n" + 
				"						<xsl:attribute name=\"password\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@storePassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@algorithm\">\r\n" + 
				"						<xsl:attribute name=\"algorithm\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@algorithm\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</tls:key-store>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</tls:context >\r\n" + 
				"	</http:request-connection>\r\n" + 
				"</http:request-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"https:outbound-endpoint\">\r\n" + 
				"<http:request-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"https:connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"https:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:request-connection>\r\n" + 
				"		<xsl:if test=\"https:connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"https:connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTPS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"https:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"https:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"https:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"https:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<http:proxy-config >\r\n" + 
				"			<http:proxy>\r\n" + 
				"				<xsl:if test=\"https:connector/@proxyHostname\">\r\n" + 
				"					<xsl:attribute name=\"host\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@proxyHostname\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@proxyPort\">\r\n" + 
				"					<xsl:attribute name=\"port\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@proxyPort\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@proxyUsername\">\r\n" + 
				"					<xsl:attribute name=\"username\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@proxyUsername\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@proxyPassword\">\r\n" + 
				"					<xsl:attribute name=\"password\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@proxyPassword\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"			</http:proxy>\r\n" + 
				"		</http:proxy-config >\r\n" + 
				"		<http:client-socket-properties >\r\n" + 
				"			<sockets:tcp-client-socket-properties>\r\n" + 
				"				<xsl:if test=\"https:connector/@connectionTimeout\">\r\n" + 
				"					<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@connectionTimeout\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"https:connector/@sendTcpNoDelay\">\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"https:connector/@keepAlive\">\r\n" + 
				"					<xsl:attribute name=\"keepAlive\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@keepAlive\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"https:connector/@failOnUnresolvedHost\">\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"https:connector/@sendBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@sendBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@receiveBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@receiveBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"https:connector/@receiveBacklog\">\r\n" + 
				"					<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"						<xsl:value-of select=\"https:connector/@receiveBacklog\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"https:connector/@reuseAddress\">\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"			</sockets:tcp-client-socket-properties>\r\n" + 
				"		</http:client-socket-properties >\r\n" + 
				"		<tls:context >\r\n" + 
				"			<xsl:if test=\"https:connector/https:tls-server\">\r\n" + 
				"				<tls:trust-store>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@path\">\r\n" + 
				"						<xsl:attribute name=\"path\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@path\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@storePassword\">\r\n" + 
				"						<xsl:attribute name=\"password\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@storePassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@algorithm\">\r\n" + 
				"						<xsl:attribute name=\"algorithm\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@algorithm\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-server/@explicitOnly\">\r\n" + 
				"						<xsl:attribute name=\"insecure\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-server/@explicitOnly\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</tls:trust-store>\r\n" + 
				"			</xsl:if>\r\n" + 
				"			<xsl:if test=\"https:connector/https:tls-key-store\">\r\n" + 
				"				<tls:key-store>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@path\">\r\n" + 
				"						<xsl:attribute name=\"path\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@path\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@keyPassword\">\r\n" + 
				"						<xsl:attribute name=\"keyPassword\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@keyPassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@storePassword\">\r\n" + 
				"						<xsl:attribute name=\"password\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@storePassword\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"					<xsl:if test=\"https:connector/https:tls-key-store/@algorithm\">\r\n" + 
				"						<xsl:attribute name=\"algorithm\">\r\n" + 
				"							<xsl:value-of select=\"https:connector/https:tls-key-store/@algorithm\" />\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:if>\r\n" + 
				"				</tls:key-store>\r\n" + 
				"			</xsl:if>\r\n" + 
				"		</tls:context >\r\n" + 
				"	</http:request-connection>\r\n" + 
				"</http:request-config>\r\n" + 
				"</xsl:if>");
		
		transformerOf.put("http:connector", "<xsl:if test=\"http:inbound-endpoint\">\r\n" + 
				"<http:listener-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"http:connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:listener-connection>\r\n" + 
				"		<xsl:if test=\"http:connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionIdleTimeout\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTP</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"http:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</http:listener-connection>\r\n" + 
				"</http:listener-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"https:inbound-endpoint\">\r\n" + 
				"<http:listener-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"http:connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:listener-connection>\r\n" + 
				"		<xsl:if test=\"http:connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/@connectionTimeout\">\r\n" + 
				"			<xsl:attribute name=\"connectionIdleTimeout\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@connectionTimeout\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTPS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"http:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"	</http:listener-connection>\r\n" + 
				"</http:listener-config>\r\n" + 
				"</xsl:if>\r\n" + 
				"<xsl:if test=\"http:outbound-endpoint\">\r\n" + 
				"<http:request-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"http:connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:request-connection>\r\n" + 
				"		<xsl:if test=\"http:connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTP</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"http:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<http:proxy-config >\r\n" + 
				"			<http:proxy>\r\n" + 
				"				<xsl:if test=\"http:connector/@proxyHostname\">\r\n" + 
				"					<xsl:attribute name=\"host\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@proxyHostname\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@proxyPort\">\r\n" + 
				"					<xsl:attribute name=\"port\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@proxyPort\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@proxyUsername\">\r\n" + 
				"					<xsl:attribute name=\"username\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@proxyUsername\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@proxyPassword\">\r\n" + 
				"					<xsl:attribute name=\"password\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@proxyPassword\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"			</http:proxy>\r\n" + 
				"		</http:proxy-config >\r\n" + 
				"		<http:client-socket-properties >\r\n" + 
				"			<sockets:tcp-client-socket-properties>\r\n" + 
				"				<xsl:if test=\"http:connector/@connectionTimeout\">\r\n" + 
				"					<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@connectionTimeout\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:connector/@sendTcpNoDelay\">\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"http:connector/@keepAlive\">\r\n" + 
				"					<xsl:attribute name=\"keepAlive\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@keepAlive\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:connector/@failOnUnresolvedHost\">\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"http:connector/@sendBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@sendBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@receiveBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@receiveBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@receiveBacklog\">\r\n" + 
				"					<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@receiveBacklog\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:connector/@reuseAddress\">\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"			</sockets:tcp-client-socket-properties>\r\n" + 
				"		</http:client-socket-properties >\r\n" + 
				"	</http:request-connection>\r\n" + 
				"</http:request-config>\r\n" + 
				"<xsl:if test=\"https:outbound-endpoint\">\r\n" + 
				"<http:request-config>\r\n" + 
				"	<xsl:attribute name=\"name\">\r\n" + 
				"        <xsl:value-of select=\"http:connector/@name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<xsl:attribute name=\"doc:name\">\r\n" + 
				"        <xsl:value-of select=\"http:connector/@doc:name\" />\r\n" + 
				"    </xsl:attribute>\r\n" + 
				"	<http:request-connection>\r\n" + 
				"		<xsl:if test=\"http:connector/@proxyHostname\">\r\n" + 
				"			<xsl:attribute name=\"host\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@proxyHostname\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/@proxyPort\">\r\n" + 
				"			<xsl:attribute name=\"port\">\r\n" + 
				"				<xsl:value-of select=\"http:connector/@proxyPort\" />\r\n" + 
				"			</xsl:attribute>\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:attribute name=\"protocol\">\r\n" + 
				"			<xsl:text>HTTPS</xsl:text>\r\n" + 
				"		</xsl:attribute>\r\n" + 
				"		<xsl:if test=\"http:connector/*[name()='reconnect']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:connector/*[name()='reconnect']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<xsl:if test=\"http:connector/*[name()='reconnect-forever']\">\r\n" + 
				"			<reconnection >\r\n" + 
				"				<xsl:copy-of select=\"http:connector/*[name()='reconnect-forever']\"/>\r\n" + 
				"			</reconnection >\r\n" + 
				"		</xsl:if>\r\n" + 
				"		<http:proxy-config >\r\n" + 
				"			<http:proxy>\r\n" + 
				"				<xsl:if test=\"http:connector/@proxyHostname\">\r\n" + 
				"					<xsl:attribute name=\"host\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@proxyHostname\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@proxyPort\">\r\n" + 
				"					<xsl:attribute name=\"port\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@proxyPort\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@proxyUsername\">\r\n" + 
				"					<xsl:attribute name=\"username\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@proxyUsername\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@proxyPassword\">\r\n" + 
				"					<xsl:attribute name=\"password\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@proxyPassword\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"			</http:proxy>\r\n" + 
				"		</http:proxy-config >\r\n" + 
				"		<http:client-socket-properties >\r\n" + 
				"			<sockets:tcp-client-socket-properties>\r\n" + 
				"				<xsl:if test=\"http:connector/@connectionTimeout\">\r\n" + 
				"					<xsl:attribute name=\"connectionTimeout\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@connectionTimeout\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:connector/@sendTcpNoDelay\">\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"sendTcpNoDelay\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"http:connector/@keepAlive\">\r\n" + 
				"					<xsl:attribute name=\"keepAlive\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@keepAlive\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:connector/@failOnUnresolvedHost\">\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"failOnUnresolvedHost\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"				<xsl:if test=\"http:connector/@sendBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"sendBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@sendBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@receiveBufferSize\">\r\n" + 
				"					<xsl:attribute name=\"receiveBufferSize\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@receiveBufferSize\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:if test=\"http:connector/@receiveBacklog\">\r\n" + 
				"					<xsl:attribute name=\"clientTimeout\">\r\n" + 
				"						<xsl:value-of select=\"http:connector/@receiveBacklog\" />\r\n" + 
				"					</xsl:attribute>\r\n" + 
				"				</xsl:if>\r\n" + 
				"				<xsl:choose>\r\n" + 
				"					<xsl:when test=\"http:connector/@reuseAddress\">\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>false</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:when>\r\n" + 
				"					<xsl:otherwise>\r\n" + 
				"						<xsl:attribute name=\"reuseAddress\">\r\n" + 
				"							<xsl:text>true</xsl:text>\r\n" + 
				"						</xsl:attribute>\r\n" + 
				"					</xsl:otherwise>\r\n" + 
				"				</xsl:choose>\r\n" + 
				"			</sockets:tcp-client-socket-properties>\r\n" + 
				"		</http:client-socket-properties >\r\n" + 
				"	</http:request-connection>\r\n" + 
				"</http:request-config>\r\n" + 
				"</xsl:if>");
		

	}
	
}
